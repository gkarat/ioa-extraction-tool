{
  "conditional": {
    "namespaces": {
      "openshift-cluster-samples-operator": {
        "imagestreams": {
          "example.json": {
            "metadata": {
              "name": "example",
              "namespace": "openshift-cluster-samples-operator",
              "selfLink": "/apis/image.openshift.io/v1/namespaces/openshift-cluster-samples-operator/imagestreams/example",
              "uid": "bd11bcb8-b0be-4605-9f11-9697e84897f9",
              "resourceVersion": "79100",
              "generation": 1,
              "creationTimestamp": "2021-05-24T16:40:22Z"
            },
            "spec": { "lookupPolicy": { "local": false } },
            "status": {
              "dockerImageRepository": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
            }
          }
        },
        "pods": {
          "cluster-samples-operator-8ffb9b45f-49mjr": {
            "containers": {
              "cluster-samples-operator": { "logs": {} },
              "cluster-samples-operator-watch": { "logs": {} }
            }
          }
        }
      }
    }
  },
  "config": {
    "authentication.json": {
      "metadata": {
        "name": "cluster",
        "selfLink": "/apis/config.openshift.io/v1/authentications/cluster",
        "uid": "f90ceec3-1d67-4d0f-81c9-c92e8e06162f",
        "resourceVersion": "15398",
        "generation": 1,
        "creationTimestamp": "2021-07-07T11:03:06Z",
        "annotations": {
          "include.release.openshift.io/self-managed-high-availability": "true",
          "include.release.openshift.io/single-node-developer": "true",
          "release.openshift.io/create-only": "true"
        }
      },
      "spec": {
        "type": "",
        "oauthMetadata": { "name": "" },
        "serviceAccountIssuer": ""
      },
      "status": { "integratedOAuthMetadata": { "name": "oauth-openshift" } }
    },
    "clusteroperator": {
      "authentication.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "authentication",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/authentication",
          "uid": "f9f2d54f-1abd-4533-9819-5386a1e7c7a6",
          "resourceVersion": "1782215",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-12T21:20:38Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-12T21:20:42Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-12T21:20:44Z",
              "reason": "AsExpected",
              "message": "OAuthServerDeploymentAvailable: availableReplicas==2"
            },
            {
              "type": "Upgradeable",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:28Z",
              "reason": "UnsupportedConfigOverrides_UnsupportedConfigOverridesSet",
              "message": "UnsupportedConfigOverridesUpgradeable: setting: [useUnsupportedUnsafeNonHANonProductionUnstableOAuthServer]"
            }
          ],
          "versions": [
            { "name": "oauth-apiserver", "version": "4.7.16" },
            { "name": "oauth-openshift", "version": "4.7.16_openshift" },
            { "name": "operator", "version": "4.7.16" }
          ],
          "relatedObjects": [
            {
              "group": "operator.openshift.io",
              "resource": "authentications",
              "name": "cluster"
            },
            {
              "group": "config.openshift.io",
              "resource": "authentications",
              "name": "cluster"
            },
            {
              "group": "config.openshift.io",
              "resource": "infrastructures",
              "name": "cluster"
            },
            {
              "group": "config.openshift.io",
              "resource": "oauths",
              "name": "cluster"
            },
            {
              "group": "route.openshift.io",
              "resource": "routes",
              "namespace": "openshift-authentication",
              "name": "oauth-openshift"
            },
            {
              "group": "",
              "resource": "services",
              "namespace": "openshift-authentication",
              "name": "oauth-openshift"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config-managed"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-authentication"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-authentication-operator"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-ingress"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-oauth-apiserver"
            }
          ],
          "extension": null
        }
      },
      "baremetal.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "baremetal",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/baremetal",
          "uid": "acae4cff-a1f3-4d63-b75b-e4532a0a0c3f",
          "resourceVersion": "5106",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:29Z"
            },
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:29Z"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "AsExpected",
              "message": "Operational"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:29Z"
            },
            {
              "type": "Disabled",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "UnsupportedPlatform",
              "message": "Nothing to do on this Platform"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-machine-api"
            },
            {
              "group": "metal3.io",
              "resource": "baremetalhosts",
              "namespace": "openshift-machine-api",
              "name": ""
            },
            { "group": "metal3.io", "resource": "provisioning", "name": "" }
          ],
          "extension": null
        }
      },
      "cloud-credential.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "cloud-credential",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/cloud-credential",
          "uid": "aa933dec-7e4a-482f-b538-a01b0077de6d",
          "resourceVersion": "1917213",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:04:58Z"
            },
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:04:58Z"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:34:15Z"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:04:58Z"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "operator.openshift.io",
              "resource": "cloudcredentials",
              "name": "cluster"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-cloud-credential-operator"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-image-registry-azure"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-image-registry"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-ingress"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "manila-csi-driver-operator"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-machine-api-kubevirt"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-vsphere-problem-detector"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-ingress-azure"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-ingress-gcp"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "cloud-credential-operator-iam-ro"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-machine-api-azure"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-gcp-pd-csi-driver-operator"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-cluster-csi-drivers"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-machine-api-aws"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-machine-api-ovirt"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "ovirt-csi-driver-operator"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "aws-ebs-csi-driver-operator"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-machine-api-gcp"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-machine-api-openstack"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-image-registry-openstack"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-network"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "cloud-credential-operator-gcp-ro-creds"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-machine-api-vsphere"
            },
            {
              "group": "cloudcredential.openshift.io",
              "resource": "credentialsrequests",
              "namespace": "openshift-cloud-credential-operator",
              "name": "openshift-image-registry-gcs"
            }
          ],
          "extension": null
        }
      },
      "cluster-autoscaler.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "cluster-autoscaler",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/cluster-autoscaler",
          "uid": "b5919a11-8c0e-44d8-b30f-577e3d2c737c",
          "resourceVersion": "9002",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:27:51Z",
              "reason": "AsExpected",
              "message": "at version 4.7.16"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:27:51Z"
            },
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:27:51Z"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:27:51Z"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "autoscaling.openshift.io",
              "resource": "machineautoscalers",
              "namespace": "openshift-machine-api",
              "name": ""
            },
            {
              "group": "autoscaling.openshift.io",
              "resource": "clusterautoscalers",
              "namespace": "openshift-machine-api",
              "name": ""
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-machine-api"
            }
          ],
          "extension": null
        }
      },
      "config-operator.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "config-operator",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/config-operator",
          "uid": "315da870-7d12-44e2-acc6-0e7b68f3d809",
          "resourceVersion": "5063",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:28Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:28Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:28Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:28Z",
              "reason": "AsExpected",
              "message": "All is well"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "operator.openshift.io",
              "resource": "configs",
              "name": "cluster"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config-operator"
            }
          ],
          "extension": null
        }
      },
      "console.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "console",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/console",
          "uid": "283d2220-5777-4c37-ab43-dbb871912593",
          "resourceVersion": "643330",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/ibm-cloud-managed": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T21:18:54Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:42:53Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:42:53Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:33:08Z",
              "reason": "AsExpected",
              "message": "All is well"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "operator.openshift.io",
              "resource": "consoles",
              "name": "cluster"
            },
            {
              "group": "config.openshift.io",
              "resource": "consoles",
              "name": "cluster"
            },
            {
              "group": "config.openshift.io",
              "resource": "infrastructures",
              "name": "cluster"
            },
            {
              "group": "config.openshift.io",
              "resource": "proxies",
              "name": "cluster"
            },
            {
              "group": "config.openshift.io",
              "resource": "oauths",
              "name": "cluster"
            },
            {
              "group": "oauth.openshift.io",
              "resource": "oauthclients",
              "name": "console"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-console-operator"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-console"
            },
            {
              "group": "",
              "resource": "configmaps",
              "namespace": "openshift-config-managed",
              "name": "console-public"
            }
          ],
          "extension": null
        }
      },
      "csi-snapshot-controller.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "csi-snapshot-controller",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/csi-snapshot-controller",
          "uid": "6a83f2a2-6e5b-415d-a935-9eec7f9212d6",
          "resourceVersion": "6498",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/ibm-cloud-managed": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:37Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:43Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:32Z",
              "reason": "AsExpected",
              "message": "All is well"
            }
          ],
          "versions": [
            { "name": "operator", "version": "4.7.16" },
            { "name": "csi-snapshot-controller", "version": "4.7.16" }
          ],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-cluster-storage-operator"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-cluster-storage-operator"
            },
            {
              "group": "operator.openshift.io",
              "resource": "csisnapshotcontrollers",
              "name": "cluster"
            }
          ],
          "extension": null
        }
      },
      "dns.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "dns",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/dns",
          "uid": "99fc991a-1bb0-45bb-bb5d-836e74258581",
          "resourceVersion": "8825",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/ibm-cloud-managed": "true",
            "include.release.openshift.io/self-managed-high-availability": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:27:45Z",
              "reason": "AsExpected",
              "message": "DNS default is available"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:27:45Z",
              "reason": "AsExpected",
              "message": "desired and current number of DNSes are equal"
            },
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:27:45Z",
              "reason": "DNSNotDegraded"
            }
          ],
          "versions": [
            { "name": "operator", "version": "4.7.16" },
            {
              "name": "coredns",
              "version": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ad08b23717af078a89f93a097f32abe9262daf9e32d124f8b1c6437efddb82e7"
            },
            {
              "name": "openshift-cli",
              "version": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7c6d0a0fed7ddb95550623aa23c434446fb99abef18e6d57b8b12add606efde8"
            },
            {
              "name": "kube-rbac-proxy",
              "version": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2"
            }
          ],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-dns-operator"
            },
            {
              "group": "operator.openshift.io",
              "resource": "dnses",
              "name": "default"
            },
            { "group": "", "resource": "namespaces", "name": "openshift-dns" }
          ],
          "extension": null
        }
      },
      "etcd.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "etcd",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/etcd",
          "uid": "b417f6c6-2380-4d6d-8ee5-79052d85f1d4",
          "resourceVersion": "340350",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:28Z",
              "reason": "AsExpected",
              "message": "NodeControllerDegraded: All master nodes are ready\nEtcdMembersDegraded: No unhealthy members found"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:28:21Z",
              "reason": "AsExpected",
              "message": "NodeInstallerProgressing: 1 nodes are at revision 2\nEtcdMembersProgressing: No unstarted etcd members found"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:28:21Z",
              "reason": "AsExpected",
              "message": "StaticPodsAvailable: 1 nodes are active; 1 nodes are at revision 2\nEtcdMembersAvailable: 1 members are available"
            },
            {
              "type": "Upgradeable",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:28Z",
              "reason": "UnsupportedConfigOverrides_UnsupportedConfigOverridesSet",
              "message": "UnsupportedConfigOverridesUpgradeable: setting: [useUnsupportedUnsafeNonHANonProductionUnstableEtcd]"
            }
          ],
          "versions": [
            { "name": "raw-internal", "version": "4.7.16" },
            { "name": "operator", "version": "4.7.16" },
            { "name": "etcd", "version": "4.7.16" }
          ],
          "relatedObjects": [
            {
              "group": "operator.openshift.io",
              "resource": "etcds",
              "name": "cluster"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config-managed"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-etcd-operator"
            },
            { "group": "", "resource": "namespaces", "name": "openshift-etcd" }
          ],
          "extension": null
        }
      },
      "image-registry.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "image-registry",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/image-registry",
          "uid": "4866d14f-1c27-4e84-973e-c2786edf3d83",
          "resourceVersion": "1782055",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/ibm-cloud-managed": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-12T21:20:38Z",
              "reason": "Ready",
              "message": "Available: The registry is ready\nImagePrunerAvailable: Pruner CronJob has been created"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-12T21:20:38Z",
              "reason": "Ready",
              "message": "Progressing: The registry is ready"
            },
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-12T21:20:38Z",
              "reason": "AsExpected"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "imageregistry.operator.openshift.io",
              "resource": "configs",
              "name": "cluster"
            },
            {
              "group": "imageregistry.operator.openshift.io",
              "resource": "imagepruners",
              "name": "cluster"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterroles",
              "name": "system:registry"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterrolebindings",
              "name": "registry-registry-role"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterrolebindings",
              "name": "openshift-image-registry-pruner"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-image-registry"
            }
          ],
          "extension": null
        }
      },
      "imageregistry.operator.openshift.io": {
        "config": {
          "cluster.json": {
            "metadata": {
              "name": "cluster",
              "selfLink": "/apis/imageregistry.operator.openshift.io/v1/configs/cluster",
              "uid": "4ddaf684-48c8-46aa-95de-5710bd40884c",
              "resourceVersion": "1782045",
              "generation": 4,
              "creationTimestamp": "2021-07-07T11:33:11Z",
              "finalizers": ["imageregistry.operator.openshift.io/finalizer"]
            },
            "spec": {
              "logLevel": "Normal",
              "operatorLogLevel": "Normal",
              "unsupportedConfigOverrides": null,
              "observedConfig": null,
              "managementState": "Managed",
              "httpSecret": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
              "proxy": {},
              "storage": { "emptyDir": {}, "managementState": "Managed" },
              "requests": {
                "read": { "maxWaitInQueue": "0s" },
                "write": { "maxWaitInQueue": "0s" }
              },
              "replicas": 1,
              "rolloutStrategy": "RollingUpdate"
            },
            "status": {
              "observedGeneration": 4,
              "conditions": [
                {
                  "type": "ImageConfigControllerDegraded",
                  "status": "False",
                  "lastTransitionTime": "2021-07-07T11:33:11Z",
                  "reason": "AsExpected"
                },
                {
                  "type": "ImageRegistryCertificatesControllerDegraded",
                  "status": "False",
                  "lastTransitionTime": "2021-07-07T11:33:11Z",
                  "reason": "AsExpected"
                },
                {
                  "type": "NodeCADaemonControllerDegraded",
                  "status": "False",
                  "lastTransitionTime": "2021-07-07T11:33:11Z",
                  "reason": "AsExpected"
                },
                {
                  "type": "Progressing",
                  "status": "False",
                  "lastTransitionTime": "2021-07-12T21:20:38Z",
                  "reason": "Ready",
                  "message": "The registry is ready"
                },
                {
                  "type": "Available",
                  "status": "True",
                  "lastTransitionTime": "2021-07-12T21:20:38Z",
                  "reason": "Ready",
                  "message": "The registry is ready"
                },
                {
                  "type": "Degraded",
                  "status": "False",
                  "lastTransitionTime": "2021-07-12T21:20:38Z"
                },
                {
                  "type": "Removed",
                  "status": "False",
                  "lastTransitionTime": "2021-07-07T11:42:59Z"
                },
                {
                  "type": "StorageExists",
                  "status": "True",
                  "lastTransitionTime": "2021-07-07T11:42:58Z",
                  "reason": "Creation Successful",
                  "message": "EmptyDir storage successfully created"
                }
              ],
              "readyReplicas": 0,
              "generations": [
                {
                  "group": "apps",
                  "resource": "daemonsets",
                  "namespace": "openshift-image-registry",
                  "name": "node-ca",
                  "lastGeneration": 0,
                  "hash": ""
                },
                {
                  "group": "apps",
                  "resource": "deployments",
                  "namespace": "openshift-image-registry",
                  "name": "image-registry",
                  "lastGeneration": 2,
                  "hash": ""
                }
              ],
              "storageManaged": true,
              "storage": { "emptyDir": {}, "managementState": "Managed" }
            }
          }
        },
        "imagepruner": {
          "cluster.json": {
            "metadata": {
              "name": "cluster",
              "selfLink": "/apis/imageregistry.operator.openshift.io/v1/imagepruners/cluster",
              "uid": "b30da4e9-9e33-4bf9-9119-1dd367edd8b7",
              "resourceVersion": "8112",
              "generation": 1,
              "creationTimestamp": "2021-07-07T11:27:24Z"
            },
            "spec": {
              "schedule": "",
              "suspend": false,
              "keepTagRevisions": 3,
              "successfulJobsHistoryLimit": 3,
              "failedJobsHistoryLimit": 3,
              "ignoreInvalidImageReferences": true,
              "logLevel": "Normal"
            },
            "status": {
              "observedGeneration": 1,
              "conditions": [
                {
                  "type": "Available",
                  "status": "True",
                  "lastTransitionTime": "2021-07-07T11:27:24Z",
                  "reason": "AsExpected",
                  "message": "Pruner CronJob has been created"
                },
                {
                  "type": "Failed",
                  "status": "False",
                  "lastTransitionTime": "2021-07-07T11:27:24Z",
                  "reason": "Complete",
                  "message": "Pruner completed successfully"
                },
                {
                  "type": "Scheduled",
                  "status": "True",
                  "lastTransitionTime": "2021-07-07T11:27:24Z",
                  "reason": "Scheduled",
                  "message": "The pruner job has been scheduled"
                },
                {
                  "type": "Degraded",
                  "status": "False",
                  "lastTransitionTime": "2021-07-07T11:27:24Z",
                  "reason": "AsExpected"
                }
              ]
            }
          }
        }
      },
      "ingress.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "ingress",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/ingress",
          "uid": "4b5cbaa3-f6ef-49ba-a2b5-eb9608ee4ac5",
          "resourceVersion": "1795888",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/ibm-cloud-managed": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-12T21:20:38Z",
              "reason": "AsExpected",
              "message": "desired and current number of IngressControllers are equal"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-12T21:20:38Z",
              "reason": "AsExpected",
              "message": "desired and current number of IngressControllers are equal"
            },
            {
              "type": "Degraded",
              "status": "True",
              "lastTransitionTime": "2021-07-12T22:20:58Z",
              "reason": "IngressControllersDegraded",
              "message": "Some ingresscontrollers are degraded: ingresscontroller \"default\" is degraded: DegradedConditions: One or more other status conditions indicate a degraded state: PodsScheduled=False (PodsNotScheduled: Some pods are not scheduled: Pod \"router-default-7bbdcfcf9b-7xdln\" cannot be scheduled: 0/2 nodes are available: 1 node(s) didn't have free ports for the requested pod ports, 1 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate. Make sure you have sufficient worker nodes.), DeploymentReplicasAllAvailable=False (DeploymentReplicasNotAvailable: 1/2 of replicas are available)"
            }
          ],
          "versions": [
            { "name": "operator", "version": "4.7.16" },
            {
              "name": "ingress-controller",
              "version": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cdc05f16135f40d5974e4a827244fb87862219136da7a3d36c8ff2dfc2135a78"
            }
          ],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-ingress-operator"
            },
            {
              "group": "operator.openshift.io",
              "resource": "IngressController",
              "namespace": "openshift-ingress-operator",
              "name": ""
            },
            {
              "group": "ingress.operator.openshift.io",
              "resource": "DNSRecord",
              "namespace": "openshift-ingress-operator",
              "name": ""
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-ingress"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-ingress-canary"
            }
          ],
          "extension": null
        }
      },
      "insights.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "insights",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/insights",
          "uid": "caddb5c0-b1ba-4b73-9a02-372b22eb64cd",
          "resourceVersion": "1899841",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T17:42:54Z",
              "reason": "AsExpected"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:32:54Z",
              "reason": "AsExpected"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:36:54Z",
              "reason": "AsExpected",
              "message": "Monitoring the cluster"
            },
            {
              "type": "Disabled",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:36:54Z",
              "reason": "AsExpected"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-insights"
            },
            {
              "group": "apps",
              "resource": "deployments",
              "namespace": "openshift-insights",
              "name": "insights-operator"
            }
          ],
          "extension": { "lastReportTime": "2021-07-13T06:01:03Z" }
        }
      },
      "kube-apiserver.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "kube-apiserver",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/kube-apiserver",
          "uid": "807edd74-6789-45ae-ad22-5531ecb3b31a",
          "resourceVersion": "340594",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:30Z",
              "reason": "AsExpected",
              "message": "NodeControllerDegraded: All master nodes are ready"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-08T11:01:57Z",
              "reason": "AsExpected",
              "message": "NodeInstallerProgressing: 1 nodes are at revision 10"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:28:24Z",
              "reason": "AsExpected",
              "message": "StaticPodsAvailable: 1 nodes are active; 1 nodes are at revision 10"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:30Z",
              "reason": "AsExpected",
              "message": "All is well"
            }
          ],
          "versions": [
            { "name": "raw-internal", "version": "4.7.16" },
            { "name": "kube-apiserver", "version": "1.20.0-beta.2" },
            { "name": "operator", "version": "4.7.16" }
          ],
          "relatedObjects": [
            {
              "group": "operator.openshift.io",
              "resource": "kubeapiservers",
              "name": "cluster"
            },
            {
              "group": "apiextensions.k8s.io",
              "resource": "customresourcedefinitions",
              "name": ""
            },
            {
              "group": "security.openshift.io",
              "resource": "securitycontextconstraints",
              "name": ""
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config-managed"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-kube-apiserver-operator"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-kube-apiserver"
            },
            {
              "group": "admissionregistration.k8s.io",
              "resource": "mutatingwebhookconfigurations",
              "name": ""
            },
            {
              "group": "admissionregistration.k8s.io",
              "resource": "validatingwebhookconfigurations",
              "name": ""
            },
            {
              "group": "controlplane.operator.openshift.io",
              "resource": "podnetworkconnectivitychecks",
              "namespace": "openshift-kube-apiserver",
              "name": ""
            }
          ],
          "extension": null
        }
      },
      "kube-controller-manager.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "kube-controller-manager",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/kube-controller-manager",
          "uid": "eb652a6e-8a88-4bac-a6fd-dee4095d2f06",
          "resourceVersion": "339072",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "AsExpected",
              "message": "NodeControllerDegraded: All master nodes are ready"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:42:53Z",
              "reason": "AsExpected",
              "message": "NodeInstallerProgressing: 1 nodes are at revision 7"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:28:18Z",
              "reason": "AsExpected",
              "message": "StaticPodsAvailable: 1 nodes are active; 1 nodes are at revision 7"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "AsExpected",
              "message": "All is well"
            }
          ],
          "versions": [
            { "name": "raw-internal", "version": "4.7.16" },
            { "name": "kube-controller-manager", "version": "1.20.0-beta.2" },
            { "name": "operator", "version": "4.7.16" }
          ],
          "relatedObjects": [
            {
              "group": "operator.openshift.io",
              "resource": "kubecontrollermanagers",
              "name": "cluster"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config-managed"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-kube-controller-manager"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-kube-controller-manager-operator"
            },
            {
              "group": "certificates.k8s.io",
              "resource": "certificatesigningrequests",
              "name": ""
            },
            { "group": "", "resource": "nodes", "name": "" }
          ],
          "extension": null
        }
      },
      "kube-scheduler.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "kube-scheduler",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/kube-scheduler",
          "uid": "7c340a26-0a9e-4d1d-8965-9e46eac39198",
          "resourceVersion": "340478",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "AsExpected",
              "message": "NodeControllerDegraded: All master nodes are ready"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:37:42Z",
              "reason": "AsExpected",
              "message": "NodeInstallerProgressing: 1 nodes are at revision 7"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:33:16Z",
              "reason": "AsExpected",
              "message": "StaticPodsAvailable: 1 nodes are active; 1 nodes are at revision 7"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "AsExpected",
              "message": "All is well"
            }
          ],
          "versions": [
            { "name": "raw-internal", "version": "4.7.16" },
            { "name": "kube-scheduler", "version": "1.20.0-beta.2" },
            { "name": "operator", "version": "4.7.16" }
          ],
          "relatedObjects": [
            {
              "group": "operator.openshift.io",
              "resource": "kubeschedulers",
              "name": "cluster"
            },
            {
              "group": "config.openshift.io",
              "resource": "schedulers",
              "name": ""
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config-managed"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-kube-scheduler"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-kube-scheduler-operator"
            },
            {
              "group": "controlplane.operator.openshift.io",
              "resource": "podnetworkconnectivitychecks",
              "namespace": "openshift-kube-apiserver",
              "name": ""
            }
          ],
          "extension": null
        }
      },
      "kube-storage-version-migrator.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "kube-storage-version-migrator",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/kube-storage-version-migrator",
          "uid": "3354fd2d-cbe9-4167-ba5f-5be7842a80fa",
          "resourceVersion": "1782110",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/ibm-cloud-managed": "true",
            "include.release.openshift.io/self-managed-high-availability": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:29:35Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-12T21:20:38Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Upgradeable",
              "status": "Unknown",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "NoData"
            }
          ],
          "versions": [
            { "name": "operator", "version": "4.7.16" },
            { "name": "kube-storage-version-migrator", "version": "" }
          ],
          "relatedObjects": [
            {
              "group": "operator.openshift.io",
              "resource": "kubestorageversionmigrators",
              "name": "cluster"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-kube-storage-version-migrator"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-kube-storage-version-migrator-operator"
            }
          ],
          "extension": null
        }
      },
      "machine-api.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "machine-api",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/machine-api",
          "uid": "d6500bfd-8a8d-40e7-a649-f9acd87afe33",
          "resourceVersion": "8409",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:27:29Z",
              "reason": "AsExpected"
            },
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:27:29Z",
              "reason": "AsExpected"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:27:29Z",
              "reason": "AsExpected",
              "message": "Cluster Machine API Operator is available at operator: 4.7.16"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:27:29Z"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-machine-api"
            },
            {
              "group": "machine.openshift.io",
              "resource": "machines",
              "namespace": "openshift-machine-api",
              "name": ""
            },
            {
              "group": "machine.openshift.io",
              "resource": "machinesets",
              "namespace": "openshift-machine-api",
              "name": ""
            },
            {
              "group": "machine.openshift.io",
              "resource": "machinehealthchecks",
              "namespace": "openshift-machine-api",
              "name": ""
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "roles",
              "namespace": "openshift-machine-api",
              "name": ""
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterroles",
              "name": "machine-api-operator"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterroles",
              "name": "machine-api-controllers"
            },
            {
              "group": "metal3.io",
              "resource": "baremetalhosts",
              "namespace": "openshift-machine-api",
              "name": ""
            }
          ],
          "extension": null
        }
      },
      "machine-approver.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "machine-approver",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/machine-approver",
          "uid": "02feb411-2b11-4d19-abba-3d8e91bad3f6",
          "resourceVersion": "8070",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:27:24Z",
              "reason": "AsExpected",
              "message": "Cluster Machine Approver is available at 4.7.16"
            },
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:27:24Z",
              "reason": "AsExpected"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:27:24Z",
              "reason": "AsExpected"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:27:24Z",
              "reason": "AsExpected"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-cluster-machine-approver"
            },
            {
              "group": "certificates.k8s.io",
              "resource": "certificatesigningrequests",
              "name": ""
            }
          ],
          "extension": null
        }
      },
      "machine-config.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "machine-config",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/machine-config",
          "uid": "53dc75b8-76f9-4629-a82e-dcbb22a6a88c",
          "resourceVersion": "1782290",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:27:15Z",
              "message": "Cluster version is 4.7.16"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:27:14Z",
              "reason": "AsExpected"
            },
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:27:14Z"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:27:14Z",
              "message": "Cluster has deployed 4.7.16"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-machine-config-operator"
            },
            {
              "group": "machineconfiguration.openshift.io",
              "resource": "machineconfigpools",
              "name": ""
            },
            {
              "group": "machineconfiguration.openshift.io",
              "resource": "controllerconfigs",
              "name": ""
            },
            {
              "group": "machineconfiguration.openshift.io",
              "resource": "kubeletconfigs",
              "name": ""
            },
            {
              "group": "machineconfiguration.openshift.io",
              "resource": "containerruntimeconfigs",
              "name": ""
            },
            {
              "group": "machineconfiguration.openshift.io",
              "resource": "machineconfigs",
              "name": ""
            },
            { "group": "", "resource": "nodes", "name": "" },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-kni-infra"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-openstack-infra"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-ovirt-infra"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-vsphere-infra"
            }
          ],
          "extension": {
            "master": "all 1 nodes are at latest configuration rendered-master-025110333ea44423ccb1052723956671",
            "worker": "all 1 nodes are at latest configuration rendered-worker-39c9df4a2c026c3149a02abe6f88cfc8"
          }
        }
      },
      "marketplace.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "marketplace",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/marketplace",
          "uid": "cf897354-d422-400e-a6e5-d0373bc80aa8",
          "resourceVersion": "9868",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/self-managed-high-availability": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:28:34Z",
              "reason": "OperatorAvailable",
              "message": "Successfully progressed to release version: 4.7.16"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:28:34Z",
              "reason": "OperatorAvailable",
              "message": "Available release version: 4.7.16"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:28:34Z",
              "reason": "OperatorAvailable",
              "message": "Marketplace is upgradeable"
            },
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:27:45Z",
              "reason": "OperatorAvailable",
              "message": "Successfully progressed to release version: 4.7.16"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-marketplace"
            },
            {
              "group": "operators.coreos.com",
              "resource": "catalogsources",
              "namespace": "openshift-marketplace",
              "name": ""
            }
          ],
          "extension": null
        }
      },
      "monitoring.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "monitoring",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/monitoring",
          "uid": "8bc3cbe3-86ed-4cb6-aecb-e57ad0cc860f",
          "resourceVersion": "1916673",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/ibm-cloud-managed": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-08T11:01:59Z",
              "reason": "RollOutDone",
              "message": "Successfully rolled out the stack."
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-08T11:01:59Z"
            },
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-08T11:01:59Z"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-13T07:15:46Z"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-monitoring"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-user-workload-monitoring"
            },
            {
              "group": "monitoring.coreos.com",
              "resource": "servicemonitors",
              "name": ""
            },
            {
              "group": "monitoring.coreos.com",
              "resource": "podmonitors",
              "name": ""
            },
            {
              "group": "monitoring.coreos.com",
              "resource": "prometheusrules",
              "name": ""
            },
            {
              "group": "monitoring.coreos.com",
              "resource": "alertmanagers",
              "name": ""
            },
            {
              "group": "monitoring.coreos.com",
              "resource": "prometheuses",
              "name": ""
            },
            {
              "group": "monitoring.coreos.com",
              "resource": "thanosrulers",
              "name": ""
            },
            {
              "group": "monitoring.coreos.com",
              "resource": "alertmanagerconfigs",
              "name": ""
            }
          ],
          "extension": null
        }
      },
      "network.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "network",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/network",
          "uid": "533e85ab-7feb-4c04-83f5-a9837263a683",
          "resourceVersion": "1782179",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/ibm-cloud-managed": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true",
            "network.operator.openshift.io/last-seen-state": "{\"DaemonsetStates\":[],\"DeploymentStates\":[]}"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-09T09:22:01Z"
            },
            {
              "type": "ManagementStateDegraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:23:26Z"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:23:26Z"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-12T21:20:39Z"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:38Z"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "",
              "resource": "configmaps",
              "namespace": "openshift-network-operator",
              "name": "applied-cluster"
            },
            {
              "group": "apiextensions.k8s.io",
              "resource": "customresourcedefinitions",
              "name": "network-attachment-definitions.k8s.cni.cncf.io"
            },
            {
              "group": "apiextensions.k8s.io",
              "resource": "customresourcedefinitions",
              "name": "ippools.whereabouts.cni.cncf.io"
            },
            {
              "group": "apiextensions.k8s.io",
              "resource": "customresourcedefinitions",
              "name": "overlappingrangeipreservations.whereabouts.cni.cncf.io"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-multus"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterroles",
              "name": "multus"
            },
            {
              "group": "",
              "resource": "serviceaccounts",
              "namespace": "openshift-multus",
              "name": "multus"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterrolebindings",
              "name": "multus"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterrolebindings",
              "name": "multus-whereabouts"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterroles",
              "name": "whereabouts-cni"
            },
            {
              "group": "",
              "resource": "configmaps",
              "namespace": "openshift-multus",
              "name": "cni-binary-copy-script"
            },
            {
              "group": "apps",
              "resource": "daemonsets",
              "namespace": "openshift-multus",
              "name": "multus"
            },
            {
              "group": "",
              "resource": "serviceaccounts",
              "namespace": "openshift-multus",
              "name": "metrics-daemon-sa"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterroles",
              "name": "metrics-daemon-role"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterrolebindings",
              "name": "metrics-daemon-sa-rolebinding"
            },
            {
              "group": "apps",
              "resource": "daemonsets",
              "namespace": "openshift-multus",
              "name": "network-metrics-daemon"
            },
            {
              "group": "monitoring.coreos.com",
              "resource": "servicemonitors",
              "namespace": "openshift-multus",
              "name": "monitor-network"
            },
            {
              "group": "",
              "resource": "services",
              "namespace": "openshift-multus",
              "name": "network-metrics-service"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "roles",
              "namespace": "openshift-multus",
              "name": "prometheus-k8s"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "rolebindings",
              "namespace": "openshift-multus",
              "name": "prometheus-k8s"
            },
            {
              "group": "",
              "resource": "services",
              "namespace": "openshift-multus",
              "name": "multus-admission-controller"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterroles",
              "name": "multus-admission-controller-webhook"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterrolebindings",
              "name": "multus-admission-controller-webhook"
            },
            {
              "group": "admissionregistration.k8s.io",
              "resource": "validatingwebhookconfigurations",
              "name": "multus.openshift.io"
            },
            {
              "group": "apps",
              "resource": "daemonsets",
              "namespace": "openshift-multus",
              "name": "multus-admission-controller"
            },
            {
              "group": "monitoring.coreos.com",
              "resource": "servicemonitors",
              "namespace": "openshift-multus",
              "name": "monitor-multus-admission-controller"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "roles",
              "namespace": "openshift-multus",
              "name": "prometheus-k8s"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "rolebindings",
              "namespace": "openshift-multus",
              "name": "prometheus-k8s"
            },
            {
              "group": "monitoring.coreos.com",
              "resource": "prometheusrules",
              "namespace": "openshift-multus",
              "name": "prometheus-k8s-rules"
            },
            { "group": "", "resource": "namespaces", "name": "openshift-sdn" },
            {
              "group": "apiextensions.k8s.io",
              "resource": "customresourcedefinitions",
              "name": "clusternetworks.network.openshift.io"
            },
            {
              "group": "apiextensions.k8s.io",
              "resource": "customresourcedefinitions",
              "name": "hostsubnets.network.openshift.io"
            },
            {
              "group": "apiextensions.k8s.io",
              "resource": "customresourcedefinitions",
              "name": "netnamespaces.network.openshift.io"
            },
            {
              "group": "apiextensions.k8s.io",
              "resource": "customresourcedefinitions",
              "name": "egressnetworkpolicies.network.openshift.io"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterroles",
              "name": "openshift-sdn"
            },
            {
              "group": "",
              "resource": "serviceaccounts",
              "namespace": "openshift-sdn",
              "name": "sdn"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterrolebindings",
              "name": "openshift-sdn"
            },
            {
              "group": "",
              "resource": "serviceaccounts",
              "namespace": "openshift-sdn",
              "name": "sdn-controller"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterroles",
              "name": "openshift-sdn-controller"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterrolebindings",
              "name": "openshift-sdn-controller"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "roles",
              "namespace": "openshift-sdn",
              "name": "openshift-sdn-controller-leaderelection"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "rolebindings",
              "namespace": "openshift-sdn",
              "name": "openshift-sdn-controller-leaderelection"
            },
            {
              "group": "network.openshift.io",
              "resource": "clusternetworks",
              "name": "default"
            },
            {
              "group": "flowcontrol.apiserver.k8s.io",
              "resource": "flowschemas",
              "name": "openshift-sdn"
            },
            {
              "group": "monitoring.coreos.com",
              "resource": "prometheusrules",
              "namespace": "openshift-sdn",
              "name": "networking-rules"
            },
            {
              "group": "apps",
              "resource": "daemonsets",
              "namespace": "openshift-sdn",
              "name": "sdn-controller"
            },
            {
              "group": "monitoring.coreos.com",
              "resource": "servicemonitors",
              "namespace": "openshift-sdn",
              "name": "monitor-sdn"
            },
            {
              "group": "",
              "resource": "services",
              "namespace": "openshift-sdn",
              "name": "sdn"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "roles",
              "namespace": "openshift-sdn",
              "name": "prometheus-k8s"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "rolebindings",
              "namespace": "openshift-sdn",
              "name": "prometheus-k8s"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-host-network"
            },
            {
              "group": "",
              "resource": "resourcequotas",
              "namespace": "openshift-host-network",
              "name": "host-network-namespace-quotas"
            },
            {
              "group": "",
              "resource": "configmaps",
              "namespace": "openshift-sdn",
              "name": "sdn-config"
            },
            {
              "group": "apps",
              "resource": "daemonsets",
              "namespace": "openshift-sdn",
              "name": "sdn"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-network-diagnostics"
            },
            {
              "group": "",
              "resource": "serviceaccounts",
              "namespace": "openshift-network-diagnostics",
              "name": "network-diagnostics"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "roles",
              "namespace": "openshift-network-diagnostics",
              "name": "network-diagnostics"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "rolebindings",
              "namespace": "openshift-network-diagnostics",
              "name": "network-diagnostics"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterroles",
              "name": "network-diagnostics"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "clusterrolebindings",
              "name": "network-diagnostics"
            },
            {
              "group": "rbac.authorization.k8s.io",
              "resource": "rolebindings",
              "namespace": "kube-system",
              "name": "network-diagnostics"
            },
            {
              "group": "apps",
              "resource": "deployments",
              "namespace": "openshift-network-diagnostics",
              "name": "network-check-source"
            },
            {
              "group": "",
              "resource": "services",
              "namespace": "openshift-network-diagnostics",
              "name": "network-check-source"
            },
            {
              "group": "monitoring.coreos.com",
              "resource": "servicemonitors",
              "namespace": "openshift-network-diagnostics",
              "name": "network-check-source"
            },
            {
              "group": "apps",
              "resource": "daemonsets",
              "namespace": "openshift-network-diagnostics",
              "name": "network-check-target"
            },
            {
              "group": "",
              "resource": "services",
              "namespace": "openshift-network-diagnostics",
              "name": "network-check-target"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-network-operator"
            },
            {
              "group": "operator.openshift.io",
              "resource": "networks",
              "name": "cluster"
            },
            {
              "group": "networking.k8s.io",
              "resource": "NetworkPolicy",
              "name": ""
            },
            {
              "group": "k8s.ovn.org",
              "resource": "EgressFirewall",
              "name": ""
            },
            { "group": "k8s.ovn.org", "resource": "EgressIP", "name": "" }
          ],
          "extension": null
        }
      },
      "node-tuning.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "node-tuning",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/node-tuning",
          "uid": "a4bf7e95-4b56-4bb6-8982-09524aeab21d",
          "resourceVersion": "11814",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/ibm-cloud-managed": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true",
            "include.release.openshift.io/single-node-production-edge": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:54Z",
              "reason": "AsExpected",
              "message": "Cluster has deployed \"4.7.16\""
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:32:20Z",
              "reason": "AsExpected",
              "message": "Cluster version is \"4.7.16\""
            },
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:49Z",
              "reason": "AsExpected",
              "message": "DaemonSet \"tuned\" available"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-cluster-node-tuning-operator"
            },
            {
              "group": "tuned.openshift.io",
              "resource": "tuneds",
              "namespace": "openshift-cluster-node-tuning-operator",
              "name": "default"
            },
            {
              "group": "apps",
              "resource": "daemonsets",
              "namespace": "openshift-cluster-node-tuning-operator",
              "name": "tuned"
            }
          ],
          "extension": null
        }
      },
      "openshift-apiserver.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "openshift-apiserver",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/openshift-apiserver",
          "uid": "0475d85f-e6f1-41eb-8a35-27b19467157b",
          "resourceVersion": "22730",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:28:57Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:43:39Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:44:40Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "AsExpected",
              "message": "All is well"
            }
          ],
          "versions": [
            { "name": "operator", "version": "4.7.16" },
            { "name": "openshift-apiserver", "version": "4.7.16" }
          ],
          "relatedObjects": [
            {
              "group": "operator.openshift.io",
              "resource": "openshiftapiservers",
              "name": "cluster"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config-managed"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-apiserver-operator"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-apiserver"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-etcd-operator"
            },
            {
              "group": "",
              "resource": "endpoints",
              "namespace": "openshift-etcd",
              "name": "host-etcd-2"
            },
            {
              "group": "controlplane.operator.openshift.io",
              "resource": "podnetworkconnectivitychecks",
              "namespace": "openshift-apiserver",
              "name": ""
            },
            {
              "group": "apiregistration.k8s.io",
              "resource": "apiservices",
              "name": "v1.apps.openshift.io"
            },
            {
              "group": "apiregistration.k8s.io",
              "resource": "apiservices",
              "name": "v1.authorization.openshift.io"
            },
            {
              "group": "apiregistration.k8s.io",
              "resource": "apiservices",
              "name": "v1.build.openshift.io"
            },
            {
              "group": "apiregistration.k8s.io",
              "resource": "apiservices",
              "name": "v1.image.openshift.io"
            },
            {
              "group": "apiregistration.k8s.io",
              "resource": "apiservices",
              "name": "v1.project.openshift.io"
            },
            {
              "group": "apiregistration.k8s.io",
              "resource": "apiservices",
              "name": "v1.quota.openshift.io"
            },
            {
              "group": "apiregistration.k8s.io",
              "resource": "apiservices",
              "name": "v1.route.openshift.io"
            },
            {
              "group": "apiregistration.k8s.io",
              "resource": "apiservices",
              "name": "v1.security.openshift.io"
            },
            {
              "group": "apiregistration.k8s.io",
              "resource": "apiservices",
              "name": "v1.template.openshift.io"
            }
          ],
          "extension": null
        }
      },
      "openshift-controller-manager.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "openshift-controller-manager",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/openshift-controller-manager",
          "uid": "89c61713-bb7c-4665-a8dc-fb857557b71e",
          "resourceVersion": "339527",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "exclude.release.openshift.io/internal-openshift-hosted": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:27Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-08T10:58:23Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-08T10:58:23Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Upgradeable",
              "status": "Unknown",
              "lastTransitionTime": "2021-07-07T11:26:27Z",
              "reason": "NoData"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "operator.openshift.io",
              "resource": "openshiftcontrollermanagers",
              "name": "cluster"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config-managed"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-controller-manager-operator"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-controller-manager"
            }
          ],
          "extension": null
        }
      },
      "openshift-samples.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "openshift-samples",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/openshift-samples",
          "uid": "7c4976f3-99e8-4244-a538-09c4f990b868",
          "resourceVersion": "16099",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/ibm-cloud-managed": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true",
            "include.release.openshift.io/single-node-production-edge": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:33:36Z"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:33:49Z",
              "message": "Samples installation successful at 4.7.16"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:33:49Z",
              "message": "Samples installation successful at 4.7.16"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "samples.operator.openshift.io",
              "resource": "configs",
              "name": "cluster"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-cluster-samples-operator"
            },
            { "group": "", "resource": "namespaces", "name": "openshift" }
          ],
          "extension": null
        }
      },
      "operator-lifecycle-manager-catalog.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "operator-lifecycle-manager-catalog",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/operator-lifecycle-manager-catalog",
          "uid": "e4f812fb-b49b-47f2-b352-2ea2bf5b7e8e",
          "resourceVersion": "11400",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:55Z",
          "annotations": {
            "include.release.openshift.io/self-managed-high-availability": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:53Z"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:31:58Z",
              "message": "Deployed 0.17.0"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:53Z"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:53Z"
            }
          ],
          "versions": [
            { "name": "operator", "version": "4.7.16" },
            { "name": "operator-lifecycle-manager", "version": "0.17.0" }
          ],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-operator-lifecycle-manager"
            }
          ],
          "extension": null
        }
      },
      "operator-lifecycle-manager-packageserver.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "operator-lifecycle-manager-packageserver",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/operator-lifecycle-manager-packageserver",
          "uid": "346f827c-6c2d-4ba2-862e-ad71c3fe7d20",
          "resourceVersion": "340116",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:55Z",
          "annotations": {
            "include.release.openshift.io/self-managed-high-availability": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:27:20Z"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-08T11:00:57Z",
              "reason": "ClusterServiceVersionSucceeded",
              "message": "ClusterServiceVersion openshift-operator-lifecycle-manager/packageserver observed in phase Succeeded"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-08T11:00:57Z",
              "message": "Deployed version 0.17.0"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:27:20Z",
              "message": "Safe to upgrade"
            }
          ],
          "versions": [
            { "name": "operator", "version": "4.7.16" },
            { "name": "packageserver", "version": "0.17.0" }
          ],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-operator-lifecycle-manager"
            },
            {
              "group": "operators.coreos.com",
              "resource": "clusterserviceversions",
              "namespace": "openshift-operator-lifecycle-manager",
              "name": "packageserver"
            }
          ],
          "extension": null
        }
      },
      "operator-lifecycle-manager.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "operator-lifecycle-manager",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/operator-lifecycle-manager",
          "uid": "69e898b9-114d-4aba-968d-7e451f9990f4",
          "resourceVersion": "11902",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/self-managed-high-availability": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:27:20Z"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:32:25Z",
              "message": "Deployed 0.17.0"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:27:20Z"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:27:20Z"
            }
          ],
          "versions": [
            { "name": "operator", "version": "4.7.16" },
            { "name": "operator-lifecycle-manager", "version": "0.17.0" }
          ],
          "relatedObjects": [
            {
              "group": "operators.coreos.com",
              "resource": "clusterserviceversions",
              "namespace": "openshift-operator-lifecycle-manager",
              "name": "packageserver"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-operator-lifecycle-manager"
            }
          ],
          "extension": null
        }
      },
      "operator.openshift.io": {
        "authentication": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "Authentication",
            "name": "cluster",
            "spec": {
              "logLevel": "Normal",
              "managementState": "Managed",
              "observedConfig": {
                "oauthAPIServer": {
                  "apiServerArguments": {
                    "audit-policy-file": [
                      "/var/run/configmaps/audit/secure-oauth-storage-default.yaml"
                    ],
                    "cors-allowed-origins": [
                      "//127\\.0\\.0\\.1(:|$)",
                      "//localhost(:|$)"
                    ],
                    "etcd-servers": ["https://10.0.88.27:2379"],
                    "tls-cipher-suites": [
                      "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                      "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                      "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                      "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                      "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
                      "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
                    ],
                    "tls-min-version": "VersionTLS12"
                  }
                },
                "oauthServer": {
                  "corsAllowedOrigins": [
                    "//127\\.0\\.0\\.1(:|$)",
                    "//localhost(:|$)"
                  ],
                  "oauthConfig": {
                    "assetPublicURL": "https://console-openshift-console.apps.imeixner20210707.lab.upshift.rdu2.redhat.com",
                    "loginURL": "https://api.imeixner20210707.lab.upshift.rdu2.redhat.com:6443",
                    "templates": {
                      "error": "/var/config/system/secrets/v4-0-config-system-ocp-branding-template/errors.html",
                      "login": "/var/config/system/secrets/v4-0-config-system-ocp-branding-template/login.html",
                      "providerSelection": "/var/config/system/secrets/v4-0-config-system-ocp-branding-template/providers.html"
                    },
                    "tokenConfig": {
                      "accessTokenMaxAgeSeconds": 86400,
                      "authorizeTokenMaxAgeSeconds": 300
                    }
                  },
                  "servingInfo": {
                    "cipherSuites": [
                      "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                      "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                      "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                      "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                      "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
                      "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
                    ],
                    "minTLSVersion": "VersionTLS12",
                    "namedCertificates": [
                      {
                        "certFile": "/var/config/system/secrets/v4-0-config-system-router-certs/apps.imeixner20210707.lab.upshift.rdu2.redhat.com",
                        "keyFile": "/var/config/system/secrets/v4-0-config-system-router-certs/apps.imeixner20210707.lab.upshift.rdu2.redhat.com",
                        "names": [
                          "*.apps.imeixner20210707.lab.upshift.rdu2.redhat.com"
                        ]
                      }
                    ]
                  },
                  "volumesToMount": { "identityProviders": "{}" }
                }
              },
              "operatorLogLevel": "Normal",
              "unsupportedConfigOverrides": {
                "useUnsupportedUnsafeNonHANonProductionUnstableOAuthServer": true
              }
            }
          }
        },
        "cloudcredential": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "CloudCredential",
            "name": "cluster",
            "spec": {
              "credentialsMode": "",
              "logLevel": "Normal",
              "operatorLogLevel": "Normal"
            }
          }
        },
        "config": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "Config",
            "name": "cluster",
            "spec": {
              "logLevel": "Normal",
              "managementState": "Managed",
              "operatorLogLevel": "Normal"
            }
          }
        },
        "console": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "Console",
            "name": "cluster",
            "spec": {
              "logLevel": "Normal",
              "managementState": "Managed",
              "operatorLogLevel": "Normal"
            }
          }
        },
        "csisnapshotcontroller": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "CSISnapshotController",
            "name": "cluster",
            "spec": {
              "logLevel": "Normal",
              "managementState": "Managed",
              "operatorLogLevel": "Normal"
            }
          }
        },
        "dns": {
          "default.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "DNS",
            "name": "default",
            "spec": {}
          }
        },
        "etcd": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "Etcd",
            "name": "cluster",
            "spec": {
              "logLevel": "Normal",
              "managementState": "Managed",
              "operatorLogLevel": "Normal",
              "unsupportedConfigOverrides": {
                "useUnsupportedUnsafeNonHANonProductionUnstableEtcd": true
              }
            }
          }
        },
        "kubeapiserver": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "KubeAPIServer",
            "name": "cluster",
            "spec": {
              "logLevel": "Normal",
              "managementState": "Managed",
              "observedConfig": {
                "admission": {
                  "pluginConfig": {
                    "network.openshift.io/ExternalIPRanger": {
                      "configuration": {
                        "allowIngressIP": false,
                        "apiVersion": "network.openshift.io/v1",
                        "kind": "ExternalIPRangerAdmissionConfig"
                      }
                    },
                    "network.openshift.io/RestrictedEndpointsAdmission": {
                      "configuration": {
                        "apiVersion": "network.openshift.io/v1",
                        "kind": "RestrictedEndpointsAdmissionConfig",
                        "restrictedCIDRs": ["10.128.0.0/14", "172.30.0.0/16"]
                      }
                    }
                  }
                },
                "apiServerArguments": {
                  "audit-policy-file": [
                    "/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-audit-policies/default.yaml"
                  ],
                  "etcd-servers": [
                    "https://10.0.88.27:2379",
                    "https://localhost:2379"
                  ],
                  "feature-gates": [
                    "APIPriorityAndFairness=true",
                    "RotateKubeletServerCertificate=true",
                    "SupportPodPidsLimit=true",
                    "NodeDisruptionExclusion=true",
                    "ServiceNodeExclusion=true",
                    "SCTPSupport=true",
                    "LegacyNodeRoleBehavior=false",
                    "RemoveSelfLink=false"
                  ],
                  "service-account-jwks-uri": [
                    "https://api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443/openid/v1/jwks"
                  ]
                },
                "authConfig": {
                  "oauthMetadataFile": "/etc/kubernetes/static-pod-resources/configmaps/oauth-metadata/oauthMetadata"
                },
                "corsAllowedOrigins": [
                  "//127\\.0\\.0\\.1(:|$)",
                  "//localhost(:|$)"
                ],
                "imagePolicyConfig": {
                  "internalRegistryHostname": "image-registry.openshift-image-registry.svc:5000"
                },
                "servicesSubnet": "172.30.0.0/16",
                "servingInfo": {
                  "bindAddress": "0.0.0.0:6443",
                  "bindNetwork": "tcp4",
                  "cipherSuites": [
                    "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                    "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                    "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                    "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                    "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
                  ],
                  "minTLSVersion": "VersionTLS12",
                  "namedCertificates": [
                    {
                      "certFile": "/etc/kubernetes/static-pod-certs/secrets/localhost-serving-cert-certkey/tls.crt",
                      "keyFile": "/etc/kubernetes/static-pod-certs/secrets/localhost-serving-cert-certkey/tls.key"
                    },
                    {
                      "certFile": "/etc/kubernetes/static-pod-certs/secrets/service-network-serving-certkey/tls.crt",
                      "keyFile": "/etc/kubernetes/static-pod-certs/secrets/service-network-serving-certkey/tls.key"
                    },
                    {
                      "certFile": "/etc/kubernetes/static-pod-certs/secrets/external-loadbalancer-serving-certkey/tls.crt",
                      "keyFile": "/etc/kubernetes/static-pod-certs/secrets/external-loadbalancer-serving-certkey/tls.key"
                    },
                    {
                      "certFile": "/etc/kubernetes/static-pod-certs/secrets/internal-loadbalancer-serving-certkey/tls.crt",
                      "keyFile": "/etc/kubernetes/static-pod-certs/secrets/internal-loadbalancer-serving-certkey/tls.key"
                    },
                    {
                      "certFile": "/etc/kubernetes/static-pod-resources/secrets/localhost-recovery-serving-certkey/tls.crt",
                      "keyFile": "/etc/kubernetes/static-pod-resources/secrets/localhost-recovery-serving-certkey/tls.key"
                    }
                  ]
                }
              },
              "operatorLogLevel": "Normal",
              "unsupportedConfigOverrides": null
            }
          }
        },
        "kubecontrollermanager": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "KubeControllerManager",
            "name": "cluster",
            "spec": {
              "logLevel": "Normal",
              "managementState": "Managed",
              "observedConfig": {
                "extendedArguments": {
                  "cluster-cidr": ["10.128.0.0/14"],
                  "cluster-name": ["imeixner20210707-wnrhq"],
                  "feature-gates": [
                    "APIPriorityAndFairness=true",
                    "RotateKubeletServerCertificate=true",
                    "SupportPodPidsLimit=true",
                    "NodeDisruptionExclusion=true",
                    "ServiceNodeExclusion=true",
                    "SCTPSupport=true",
                    "LegacyNodeRoleBehavior=false",
                    "RemoveSelfLink=false"
                  ],
                  "service-cluster-ip-range": ["172.30.0.0/16"]
                },
                "serviceServingCert": {
                  "certFile": "/etc/kubernetes/static-pod-resources/configmaps/service-ca/ca-bundle.crt"
                }
              },
              "operatorLogLevel": "Normal",
              "unsupportedConfigOverrides": null
            }
          }
        },
        "kubescheduler": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "KubeScheduler",
            "name": "cluster",
            "spec": {
              "logLevel": "Normal",
              "managementState": "Managed",
              "operatorLogLevel": "Normal"
            }
          }
        },
        "kubestorageversionmigrator": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "KubeStorageVersionMigrator",
            "name": "cluster",
            "spec": {
              "logLevel": "Normal",
              "managementState": "Managed",
              "operatorLogLevel": "Normal"
            }
          }
        },
        "network": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "Network",
            "name": "cluster",
            "spec": {
              "clusterNetwork": [{ "cidr": "10.128.0.0/14", "hostPrefix": 23 }],
              "defaultNetwork": { "type": "OpenShiftSDN" },
              "disableNetworkDiagnostics": false,
              "logLevel": "Normal",
              "managementState": "Managed",
              "observedConfig": null,
              "operatorLogLevel": "Normal",
              "serviceNetwork": ["172.30.0.0/16"],
              "unsupportedConfigOverrides": null
            }
          }
        },
        "openshiftapiserver": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "OpenShiftAPIServer",
            "name": "cluster",
            "spec": {
              "logLevel": "Normal",
              "managementState": "Managed",
              "observedConfig": {
                "apiServerArguments": {
                  "audit-policy-file": [
                    "/var/run/configmaps/audit/secure-oauth-storage-default.yaml"
                  ]
                },
                "imagePolicyConfig": {
                  "internalRegistryHostname": "image-registry.openshift-image-registry.svc:5000"
                },
                "projectConfig": { "projectRequestMessage": "" },
                "routingConfig": {
                  "subdomain": "apps.imeixner20210707.lab.upshift.rdu2.redhat.com"
                },
                "servingInfo": {
                  "cipherSuites": [
                    "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                    "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                    "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                    "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
                    "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
                    "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
                  ],
                  "minTLSVersion": "VersionTLS12"
                },
                "storageConfig": { "urls": ["https://10.0.88.27:2379"] }
              },
              "operatorLogLevel": "Normal",
              "unsupportedConfigOverrides": null
            }
          }
        },
        "openshiftcontrollermanager": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "OpenShiftControllerManager",
            "name": "cluster",
            "spec": {
              "logLevel": "Normal",
              "managementState": "Managed",
              "observedConfig": {
                "build": {
                  "buildDefaults": { "resources": {} },
                  "imageTemplateFormat": {
                    "format": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:16564804f8a13796eb7b730c42b00ec2cc1c44aea41cc46de5e180be0b358163"
                  }
                },
                "deployer": {
                  "imageTemplateFormat": {
                    "format": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c88e172185957a75ab055ed2a80b787ff86b71ecc5e076efef851529c500313e"
                  }
                },
                "dockerPullSecret": {
                  "internalRegistryHostname": "image-registry.openshift-image-registry.svc:5000"
                },
                "ingress": { "ingressIPNetworkCIDR": "" }
              },
              "operatorLogLevel": "Normal",
              "unsupportedConfigOverrides": null
            }
          }
        },
        "serviceca": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "ServiceCA",
            "name": "cluster",
            "spec": {
              "logLevel": "Normal",
              "managementState": "Managed",
              "operatorLogLevel": "Normal"
            }
          }
        },
        "storage": {
          "cluster.json": {
            "apiVersion": "operator.openshift.io/v1",
            "kind": "Storage",
            "name": "cluster",
            "spec": {
              "logLevel": "Normal",
              "managementState": "Managed",
              "operatorLogLevel": "Normal"
            }
          }
        }
      },
      "samples.operator.openshift.io": {
        "config": {
          "cluster.json": {
            "apiVersion": "samples.operator.openshift.io/v1",
            "kind": "Config",
            "name": "cluster",
            "spec": {
              "architectures": ["x86_64"],
              "managementState": "Managed"
            }
          }
        }
      },
      "service-ca.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "service-ca",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/service-ca",
          "uid": "61f33632-20d6-4846-a72c-3e0cc0f72011",
          "resourceVersion": "5979",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/ibm-cloud-managed": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:28Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:36Z",
              "reason": "AsExpected",
              "message": "Progressing: All service-ca-operator deployments updated"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:32Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Upgradeable",
              "status": "Unknown",
              "lastTransitionTime": "2021-07-07T11:26:28Z",
              "reason": "NoData"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "operator.openshift.io",
              "resource": "servicecas",
              "name": "cluster"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-config-managed"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-service-ca-operator"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-service-ca"
            }
          ],
          "extension": null
        }
      },
      "storage.json": {
        "kind": "ClusterOperator",
        "apiVersion": "config.openshift.io/v1",
        "metadata": {
          "name": "storage",
          "selfLink": "/apis/config.openshift.io/v1/clusteroperators/storage",
          "uid": "301a5173-42f5-4c6c-8436-32cb8fe89bb2",
          "resourceVersion": "5378",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:02:54Z",
          "annotations": {
            "include.release.openshift.io/ibm-cloud-managed": "true",
            "include.release.openshift.io/self-managed-high-availability": "true",
            "include.release.openshift.io/single-node-developer": "true"
          }
        },
        "spec": {},
        "status": {
          "conditions": [
            {
              "type": "Degraded",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:28Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Progressing",
              "status": "False",
              "lastTransitionTime": "2021-07-07T11:26:30Z",
              "reason": "AsExpected",
              "message": "All is well"
            },
            {
              "type": "Available",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:30Z",
              "reason": "AsExpected",
              "message": "DefaultStorageClassControllerAvailable: No default StorageClass for this platform"
            },
            {
              "type": "Upgradeable",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "AsExpected",
              "message": "All is well"
            }
          ],
          "versions": [{ "name": "operator", "version": "4.7.16" }],
          "relatedObjects": [
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-cluster-storage-operator"
            },
            {
              "group": "",
              "resource": "namespaces",
              "name": "openshift-cluster-csi-drivers"
            },
            {
              "group": "operator.openshift.io",
              "resource": "storages",
              "name": "cluster"
            }
          ],
          "extension": null
        }
      }
    },
    "clusterrolebinding": {
      "system_openshift_scc_anyuid.json": {
        "metadata": {
          "name": "system:openshift:scc:anyuid",
          "selfLink": "/apis/authorization.openshift.io/v1/clusterrolebindings/system%3Aopenshift%3Ascc%3Aanyuid",
          "uid": "f22b605f-fcb3-43c5-8d06-b21bc53543ce",
          "resourceVersion": "3382727",
          "creationTimestamp": "2021-01-25T12:25:44Z"
        },
        "userNames": null,
        "groupNames": ["system:serviceaccounts:sdi"],
        "subjects": [
          { "kind": "SystemGroup", "name": "system:serviceaccounts:sdi" }
        ],
        "roleRef": { "name": "system:openshift:scc:anyuid" }
      },
      "system_openshift_scc_privileged.json": {
        "metadata": {
          "name": "system:openshift:scc:privileged",
          "selfLink": "/apis/authorization.openshift.io/v1/clusterrolebindings/system%3Aopenshift%3Ascc%3Aprivileged",
          "uid": "30ac5256-53b5-41d2-8806-16a7fd8861fe",
          "resourceVersion": "3383204",
          "creationTimestamp": "2021-01-25T12:25:51Z"
        },
        "userNames": [
          "system:serviceaccount:sdi:sdi-elasticsearch",
          "system:serviceaccount:sdi:sdi-fluentd",
          "system:serviceaccount:sdi:default",
          "system:serviceaccount:sdi:mlf-deployment-api",
          "system:serviceaccount:sdi:vora-vflow-server",
          "system:serviceaccount:sdi:vora-vsystem-sdi",
          "system:serviceaccount:sdi:vora-vsystem-sdi-vrep"
        ],
        "groupNames": null,
        "subjects": [
          {
            "kind": "ServiceAccount",
            "namespace": "sdi",
            "name": "sdi-elasticsearch"
          },
          {
            "kind": "ServiceAccount",
            "namespace": "sdi",
            "name": "sdi-fluentd"
          },
          { "kind": "ServiceAccount", "namespace": "sdi", "name": "default" },
          {
            "kind": "ServiceAccount",
            "namespace": "sdi",
            "name": "mlf-deployment-api"
          },
          {
            "kind": "ServiceAccount",
            "namespace": "sdi",
            "name": "vora-vflow-server"
          },
          {
            "kind": "ServiceAccount",
            "namespace": "sdi",
            "name": "vora-vsystem-sdi"
          },
          {
            "kind": "ServiceAccount",
            "namespace": "sdi",
            "name": "vora-vsystem-sdi-vrep"
          }
        ],
        "roleRef": { "name": "system:openshift:scc:privileged" }
      }
    },
    "configmaps": {
      "kube-system": {
        "cluster-config-v1.json": {
          "metadata": {
            "name": "cluster-config-v1",
            "namespace": "kube-system",
            "uid": "f1162de2-aed6-4100-bb69-bef918e3abfc",
            "resourceVersion": "231",
            "creationTimestamp": "2021-07-12T12:31:18Z",
            "managedFields": [
              {
                "manager": "cluster-bootstrap",
                "operation": "Update",
                "apiVersion": "v1",
                "time": "2021-07-12T12:31:18Z",
                "fieldsType": "FieldsV1",
                "fieldsV1": { "f:data": { ".": {}, "f:install-config": {} } }
              }
            ]
          },
          "data": {
            "install-config": "apiVersion: v1\nbaseDomain: xxxxxxxxxxxxxxxxxxx\ncompute:\n- hyperthreading: Enabled\n  name: worker\n  platform: {}\n  replicas: 3\ncontrolPlane:\n  hyperthreading: Enabled\n  name: master\n  platform: {}\n  replicas: 3\nmetadata:\n  creationTimestamp: null\n  name: tremes-testing.tremes.2021.07.12.ccxdev.devshift.net\nnetworking:\n  clusterNetwork:\n  - cidr: 10.128.0.0/14\n    hostPrefix: 23\n  machineNetwork:\n  - cidr: 10.0.0.0/16\n  networkType: OpenShiftSDN\n  serviceNetwork:\n  - 172.30.0.0/16\nplatform:\n  aws:\n    region: us-east-2\npublish: External\npullSecret: \"\"\n"
          }
        }
      },
      "openshift-config": {
        "admin-kubeconfig-client-ca": {},
        "cloud-provider-config": {},
        "etcd-ca-bundle": {},
        "etcd-metric-serving-ca": {},
        "etcd-serving-ca": {},
        "initial-etcd-ca": {},
        "initial-kube-apiserver-server-ca": {},
        "openshift-install": {},
        "openshift-install-manifests": {}
      },
      "openshift-monitoring": {
        "cluster-monitoring-config": {
          "config.json": { "prometheusK8s": { "retention": "7d" } }
        }
      }
    },
    "containerruntimeconfigs": {
      "set-log-and-pid.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "ContainerRuntimeConfig",
        "metadata": {
          "creationTimestamp": "2020-10-13T10:24:51Z",
          "generation": 1,
          "managedFields": [
            {
              "apiVersion": "machineconfiguration.openshift.io/v1",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:spec": {
                  ".": {},
                  "f:containerRuntimeConfig": {
                    ".": {},
                    "f:logLevel": {},
                    "f:pidsLimit": {}
                  },
                  "f:machineConfigPoolSelector": {
                    ".": {},
                    "f:matchLabels": { ".": {}, "f:debug-crio": {} }
                  }
                }
              },
              "manager": "kubectl-create",
              "operation": "Update",
              "time": "2020-10-13T10:24:51Z"
            },
            {
              "apiVersion": "machineconfiguration.openshift.io/v1",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:spec": {
                  "f:containerRuntimeConfig": {
                    "f:logSizeMax": {},
                    "f:overlaySize": {}
                  }
                },
                "f:status": {
                  ".": {},
                  "f:conditions": {},
                  "f:observedGeneration": {}
                }
              },
              "manager": "machine-config-controller",
              "operation": "Update",
              "time": "2020-10-13T10:25:12Z"
            }
          ],
          "name": "set-log-and-pid",
          "resourceVersion": "45056",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/containerruntimeconfigs/set-log-and-pid",
          "uid": "949e59e4-8b90-42e1-8467-6369aa1ea932"
        },
        "spec": {
          "containerRuntimeConfig": { "logLevel": "debug", "pidsLimit": 2048 },
          "machineConfigPoolSelector": {
            "matchLabels": { "debug-crio": "config-log-and-pid" }
          }
        },
        "status": {
          "conditions": [
            {
              "lastTransitionTime": "2020-10-13T10:25:11Z",
              "message": "Error: could not find any MachineConfigPool set for ContainerRuntimeConfig set-log-and-pid",
              "status": "False",
              "type": "Failure"
            }
          ],
          "observedGeneration": 1
        }
      }
    },
    "crd": {
      "volumesnapshotcontents.snapshot.storage.k8s.io.json": {
        "metadata": {
          "name": "volumesnapshotcontents.snapshot.storage.k8s.io",
          "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/volumesnapshotcontents.snapshot.storage.k8s.io",
          "uid": "74679aa5-fc33-4c66-b411-26ae0cea5fa5",
          "resourceVersion": "5370",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:26:30Z",
          "annotations": {
            "api-approved.kubernetes.io": "https://github.com/kubernetes-csi/external-snapshotter/pull/419",
            "controller-gen.kubebuilder.io/version": "v0.4.0"
          }
        },
        "spec": {
          "group": "snapshot.storage.k8s.io",
          "names": {
            "plural": "volumesnapshotcontents",
            "singular": "volumesnapshotcontent",
            "kind": "VolumeSnapshotContent",
            "listKind": "VolumeSnapshotContentList"
          },
          "scope": "Cluster",
          "versions": [
            {
              "name": "v1",
              "served": true,
              "storage": false,
              "schema": {
                "openAPIV3Schema": {
                  "description": "VolumeSnapshotContent represents the actual \"on-disk\" snapshot object in the underlying storage system",
                  "type": "object",
                  "required": ["spec"],
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "spec": {
                      "description": "spec defines properties of a VolumeSnapshotContent created by the underlying storage system. Required.",
                      "type": "object",
                      "required": [
                        "deletionPolicy",
                        "driver",
                        "source",
                        "volumeSnapshotRef"
                      ],
                      "properties": {
                        "deletionPolicy": {
                          "description": "deletionPolicy determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted. Supported values are \"Retain\" and \"Delete\". \"Retain\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. \"Delete\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. For dynamically provisioned snapshots, this field will automatically be filled in by the CSI snapshotter sidecar with the \"DeletionPolicy\" field defined in the corresponding VolumeSnapshotClass. For pre-existing snapshots, users MUST specify this field when creating the  VolumeSnapshotContent object. Required.",
                          "type": "string",
                          "enum": ["Delete", "Retain"]
                        },
                        "driver": {
                          "description": "driver is the name of the CSI driver used to create the physical snapshot on the underlying storage system. This MUST be the same as the name returned by the CSI GetPluginName() call for that driver. Required.",
                          "type": "string"
                        },
                        "source": {
                          "description": "source specifies whether the snapshot is (or should be) dynamically provisioned or already exists, and just requires a Kubernetes object representation. This field is immutable after creation. Required.",
                          "type": "object",
                          "oneOf": [
                            { "required": ["snapshotHandle"] },
                            { "required": ["volumeHandle"] }
                          ],
                          "properties": {
                            "snapshotHandle": {
                              "description": "snapshotHandle specifies the CSI \"snapshot_id\" of a pre-existing snapshot on the underlying storage system for which a Kubernetes object representation was (or should be) created. This field is immutable.",
                              "type": "string"
                            },
                            "volumeHandle": {
                              "description": "volumeHandle specifies the CSI \"volume_id\" of the volume from which a snapshot should be dynamically taken from. This field is immutable.",
                              "type": "string"
                            }
                          }
                        },
                        "volumeSnapshotClassName": {
                          "description": "name of the VolumeSnapshotClass from which this snapshot was (or will be) created. Note that after provisioning, the VolumeSnapshotClass may be deleted or recreated with different set of values, and as such, should not be referenced post-snapshot creation.",
                          "type": "string"
                        },
                        "volumeSnapshotRef": {
                          "description": "volumeSnapshotRef specifies the VolumeSnapshot object to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName field must reference to this VolumeSnapshotContent's name for the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent object, name and namespace of the VolumeSnapshot object MUST be provided for binding to happen. This field is immutable after creation. Required.",
                          "type": "object",
                          "properties": {
                            "apiVersion": {
                              "description": "API version of the referent.",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                              "type": "string"
                            },
                            "resourceVersion": {
                              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                              "type": "string"
                            },
                            "uid": {
                              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "description": "status represents the current information of a snapshot.",
                      "type": "object",
                      "properties": {
                        "creationTime": {
                          "description": "creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"creation_time\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it indicates the creation time is unknown. The format of this field is a Unix nanoseconds time encoded as an int64. On Unix, the command `date +%s%N` returns the current time in nanoseconds since 1970-01-01 00:00:00 UTC.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "error": {
                          "description": "error is the last observed error during snapshot creation, if any. Upon success after retry, this error field will be cleared.",
                          "type": "object",
                          "properties": {
                            "message": {
                              "description": "message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.",
                              "type": "string"
                            },
                            "time": {
                              "description": "time is the timestamp when the error was encountered.",
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "readyToUse": {
                          "description": "readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"ready_to_use\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.",
                          "type": "boolean"
                        },
                        "restoreSize": {
                          "description": "restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"size_bytes\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.",
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0
                        },
                        "snapshotHandle": {
                          "description": "snapshotHandle is the CSI \"snapshot_id\" of a snapshot on the underlying storage system. If not specified, it indicates that dynamic snapshot creation has either failed or it is still in progress.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "subresources": { "status": {} },
              "additionalPrinterColumns": [
                {
                  "name": "ReadyToUse",
                  "type": "boolean",
                  "description": "Indicates if the snapshot is ready to be used to restore a volume.",
                  "jsonPath": ".status.readyToUse"
                },
                {
                  "name": "RestoreSize",
                  "type": "integer",
                  "description": "Represents the complete size of the snapshot in bytes",
                  "jsonPath": ".status.restoreSize"
                },
                {
                  "name": "DeletionPolicy",
                  "type": "string",
                  "description": "Determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted.",
                  "jsonPath": ".spec.deletionPolicy"
                },
                {
                  "name": "Driver",
                  "type": "string",
                  "description": "Name of the CSI driver used to create the physical snapshot on the underlying storage system.",
                  "jsonPath": ".spec.driver"
                },
                {
                  "name": "VolumeSnapshotClass",
                  "type": "string",
                  "description": "Name of the VolumeSnapshotClass to which this snapshot belongs.",
                  "jsonPath": ".spec.volumeSnapshotClassName"
                },
                {
                  "name": "VolumeSnapshot",
                  "type": "string",
                  "description": "Name of the VolumeSnapshot object to which this VolumeSnapshotContent object is bound.",
                  "jsonPath": ".spec.volumeSnapshotRef.name"
                },
                {
                  "name": "Age",
                  "type": "date",
                  "jsonPath": ".metadata.creationTimestamp"
                }
              ]
            },
            {
              "name": "v1beta1",
              "served": true,
              "storage": true,
              "schema": {
                "openAPIV3Schema": {
                  "description": "VolumeSnapshotContent represents the actual \"on-disk\" snapshot object in the underlying storage system",
                  "type": "object",
                  "required": ["spec"],
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "spec": {
                      "description": "spec defines properties of a VolumeSnapshotContent created by the underlying storage system. Required.",
                      "type": "object",
                      "required": [
                        "deletionPolicy",
                        "driver",
                        "source",
                        "volumeSnapshotRef"
                      ],
                      "properties": {
                        "deletionPolicy": {
                          "description": "deletionPolicy determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted. Supported values are \"Retain\" and \"Delete\". \"Retain\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. \"Delete\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. For dynamically provisioned snapshots, this field will automatically be filled in by the CSI snapshotter sidecar with the \"DeletionPolicy\" field defined in the corresponding VolumeSnapshotClass. For pre-existing snapshots, users MUST specify this field when creating the  VolumeSnapshotContent object. Required.",
                          "type": "string",
                          "enum": ["Delete", "Retain"]
                        },
                        "driver": {
                          "description": "driver is the name of the CSI driver used to create the physical snapshot on the underlying storage system. This MUST be the same as the name returned by the CSI GetPluginName() call for that driver. Required.",
                          "type": "string"
                        },
                        "source": {
                          "description": "source specifies whether the snapshot is (or should be) dynamically provisioned or already exists, and just requires a Kubernetes object representation. This field is immutable after creation. Required.",
                          "type": "object",
                          "properties": {
                            "snapshotHandle": {
                              "description": "snapshotHandle specifies the CSI \"snapshot_id\" of a pre-existing snapshot on the underlying storage system for which a Kubernetes object representation was (or should be) created. This field is immutable.",
                              "type": "string"
                            },
                            "volumeHandle": {
                              "description": "volumeHandle specifies the CSI \"volume_id\" of the volume from which a snapshot should be dynamically taken from. This field is immutable.",
                              "type": "string"
                            }
                          }
                        },
                        "volumeSnapshotClassName": {
                          "description": "name of the VolumeSnapshotClass from which this snapshot was (or will be) created. Note that after provisioning, the VolumeSnapshotClass may be deleted or recreated with different set of values, and as such, should not be referenced post-snapshot creation.",
                          "type": "string"
                        },
                        "volumeSnapshotRef": {
                          "description": "volumeSnapshotRef specifies the VolumeSnapshot object to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName field must reference to this VolumeSnapshotContent's name for the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent object, name and namespace of the VolumeSnapshot object MUST be provided for binding to happen. This field is immutable after creation. Required.",
                          "type": "object",
                          "properties": {
                            "apiVersion": {
                              "description": "API version of the referent.",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                              "type": "string"
                            },
                            "resourceVersion": {
                              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                              "type": "string"
                            },
                            "uid": {
                              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "description": "status represents the current information of a snapshot.",
                      "type": "object",
                      "properties": {
                        "creationTime": {
                          "description": "creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"creation_time\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it indicates the creation time is unknown. The format of this field is a Unix nanoseconds time encoded as an int64. On Unix, the command `date +%s%N` returns the current time in nanoseconds since 1970-01-01 00:00:00 UTC.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "error": {
                          "description": "error is the last observed error during snapshot creation, if any. Upon success after retry, this error field will be cleared.",
                          "type": "object",
                          "properties": {
                            "message": {
                              "description": "message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.",
                              "type": "string"
                            },
                            "time": {
                              "description": "time is the timestamp when the error was encountered.",
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "readyToUse": {
                          "description": "readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"ready_to_use\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.",
                          "type": "boolean"
                        },
                        "restoreSize": {
                          "description": "restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"size_bytes\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.",
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0
                        },
                        "snapshotHandle": {
                          "description": "snapshotHandle is the CSI \"snapshot_id\" of a snapshot on the underlying storage system. If not specified, it indicates that dynamic snapshot creation has either failed or it is still in progress.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "subresources": { "status": {} },
              "additionalPrinterColumns": [
                {
                  "name": "ReadyToUse",
                  "type": "boolean",
                  "description": "Indicates if the snapshot is ready to be used to restore a volume.",
                  "jsonPath": ".status.readyToUse"
                },
                {
                  "name": "RestoreSize",
                  "type": "integer",
                  "description": "Represents the complete size of the snapshot in bytes",
                  "jsonPath": ".status.restoreSize"
                },
                {
                  "name": "DeletionPolicy",
                  "type": "string",
                  "description": "Determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted.",
                  "jsonPath": ".spec.deletionPolicy"
                },
                {
                  "name": "Driver",
                  "type": "string",
                  "description": "Name of the CSI driver used to create the physical snapshot on the underlying storage system.",
                  "jsonPath": ".spec.driver"
                },
                {
                  "name": "VolumeSnapshotClass",
                  "type": "string",
                  "description": "Name of the VolumeSnapshotClass to which this snapshot belongs.",
                  "jsonPath": ".spec.volumeSnapshotClassName"
                },
                {
                  "name": "VolumeSnapshot",
                  "type": "string",
                  "description": "Name of the VolumeSnapshot object to which this VolumeSnapshotContent object is bound.",
                  "jsonPath": ".spec.volumeSnapshotRef.name"
                },
                {
                  "name": "Age",
                  "type": "date",
                  "jsonPath": ".metadata.creationTimestamp"
                }
              ]
            }
          ],
          "conversion": { "strategy": "None" }
        },
        "status": {
          "conditions": [
            {
              "type": "KubernetesAPIApprovalPolicyConformant",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:30Z",
              "reason": "ApprovedAnnotation",
              "message": "approved in https://github.com/kubernetes-csi/external-snapshotter/pull/419"
            },
            {
              "type": "NamesAccepted",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:30Z",
              "reason": "NoConflicts",
              "message": "no conflicts found"
            },
            {
              "type": "Established",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:30Z",
              "reason": "InitialNamesAccepted",
              "message": "the initial names have been accepted"
            }
          ],
          "acceptedNames": {
            "plural": "volumesnapshotcontents",
            "singular": "volumesnapshotcontent",
            "kind": "VolumeSnapshotContent",
            "listKind": "VolumeSnapshotContentList"
          },
          "storedVersions": ["v1beta1"]
        }
      },
      "volumesnapshots.snapshot.storage.k8s.io.json": {
        "metadata": {
          "name": "volumesnapshots.snapshot.storage.k8s.io",
          "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/volumesnapshots.snapshot.storage.k8s.io",
          "uid": "378f9c38-3940-4a09-ab8b-36baf32c9b35",
          "resourceVersion": "5217",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:26:29Z",
          "annotations": {
            "api-approved.kubernetes.io": "https://github.com/kubernetes-csi/external-snapshotter/pull/419",
            "controller-gen.kubebuilder.io/version": "v0.4.0"
          }
        },
        "spec": {
          "group": "snapshot.storage.k8s.io",
          "names": {
            "plural": "volumesnapshots",
            "singular": "volumesnapshot",
            "kind": "VolumeSnapshot",
            "listKind": "VolumeSnapshotList"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "name": "v1",
              "served": true,
              "storage": false,
              "schema": {
                "openAPIV3Schema": {
                  "description": "VolumeSnapshot is a user's request for either creating a point-in-time snapshot of a persistent volume, or binding to a pre-existing snapshot.",
                  "type": "object",
                  "required": ["spec"],
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "spec": {
                      "description": "spec defines the desired characteristics of a snapshot requested by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots Required.",
                      "type": "object",
                      "required": ["source"],
                      "properties": {
                        "source": {
                          "description": "source specifies where a snapshot will be created from. This field is immutable after creation. Required.",
                          "type": "object",
                          "oneOf": [
                            { "required": ["persistentVolumeClaimName"] },
                            { "required": ["volumeSnapshotContentName"] }
                          ],
                          "properties": {
                            "persistentVolumeClaimName": {
                              "description": "persistentVolumeClaimName specifies the name of the PersistentVolumeClaim object representing the volume from which a snapshot should be created. This PVC is assumed to be in the same namespace as the VolumeSnapshot object. This field should be set if the snapshot does not exists, and needs to be created. This field is immutable.",
                              "type": "string"
                            },
                            "volumeSnapshotContentName": {
                              "description": "volumeSnapshotContentName specifies the name of a pre-existing VolumeSnapshotContent object representing an existing volume snapshot. This field should be set if the snapshot already exists and only needs a representation in Kubernetes. This field is immutable.",
                              "type": "string"
                            }
                          }
                        },
                        "volumeSnapshotClassName": {
                          "description": "VolumeSnapshotClassName is the name of the VolumeSnapshotClass requested by the VolumeSnapshot. VolumeSnapshotClassName may be left nil to indicate that the default SnapshotClass should be used. A given cluster may have multiple default Volume SnapshotClasses: one default per CSI Driver. If a VolumeSnapshot does not specify a SnapshotClass, VolumeSnapshotSource will be checked to figure out what the associated CSI Driver is, and the default VolumeSnapshotClass associated with that CSI Driver will be used. If more than one VolumeSnapshotClass exist for a given CSI Driver and more than one have been marked as default, CreateSnapshot will fail and generate an event. Empty string is not allowed for this field.",
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "description": "status represents the current information of a snapshot. Consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.",
                      "type": "object",
                      "properties": {
                        "boundVolumeSnapshotContentName": {
                          "description": "boundVolumeSnapshotContentName is the name of the VolumeSnapshotContent object to which this VolumeSnapshot object intends to bind to. If not specified, it indicates that the VolumeSnapshot object has not been successfully bound to a VolumeSnapshotContent object yet. NOTE: To avoid possible security issues, consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.",
                          "type": "string"
                        },
                        "creationTime": {
                          "description": "creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"creation_time\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it may indicate that the creation time of the snapshot is unknown.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "error": {
                          "description": "error is the last observed error during snapshot creation, if any. This field could be helpful to upper level controllers(i.e., application controller) to decide whether they should continue on waiting for the snapshot to be created based on the type of error reported. The snapshot controller will keep retrying when an error occurrs during the snapshot creation. Upon success, this error field will be cleared.",
                          "type": "object",
                          "properties": {
                            "message": {
                              "description": "message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.",
                              "type": "string"
                            },
                            "time": {
                              "description": "time is the timestamp when the error was encountered.",
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "readyToUse": {
                          "description": "readyToUse indicates if the snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"ready_to_use\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.",
                          "type": "boolean"
                        },
                        "restoreSize": {
                          "description": "restoreSize represents the minimum size of volume required to create a volume from this snapshot. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"size_bytes\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.",
                          "type": "string",
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    }
                  }
                }
              },
              "subresources": { "status": {} },
              "additionalPrinterColumns": [
                {
                  "name": "ReadyToUse",
                  "type": "boolean",
                  "description": "Indicates if the snapshot is ready to be used to restore a volume.",
                  "jsonPath": ".status.readyToUse"
                },
                {
                  "name": "SourcePVC",
                  "type": "string",
                  "description": "If a new snapshot needs to be created, this contains the name of the source PVC from which this snapshot was (or will be) created.",
                  "jsonPath": ".spec.source.persistentVolumeClaimName"
                },
                {
                  "name": "SourceSnapshotContent",
                  "type": "string",
                  "description": "If a snapshot already exists, this contains the name of the existing VolumeSnapshotContent object representing the existing snapshot.",
                  "jsonPath": ".spec.source.volumeSnapshotContentName"
                },
                {
                  "name": "RestoreSize",
                  "type": "string",
                  "description": "Represents the minimum size of volume required to rehydrate from this snapshot.",
                  "jsonPath": ".status.restoreSize"
                },
                {
                  "name": "SnapshotClass",
                  "type": "string",
                  "description": "The name of the VolumeSnapshotClass requested by the VolumeSnapshot.",
                  "jsonPath": ".spec.volumeSnapshotClassName"
                },
                {
                  "name": "SnapshotContent",
                  "type": "string",
                  "description": "Name of the VolumeSnapshotContent object to which the VolumeSnapshot object intends to bind to. Please note that verification of binding actually requires checking both VolumeSnapshot and VolumeSnapshotContent to ensure both are pointing at each other. Binding MUST be verified prior to usage of this object.",
                  "jsonPath": ".status.boundVolumeSnapshotContentName"
                },
                {
                  "name": "CreationTime",
                  "type": "date",
                  "description": "Timestamp when the point-in-time snapshot was taken by the underlying storage system.",
                  "jsonPath": ".status.creationTime"
                },
                {
                  "name": "Age",
                  "type": "date",
                  "jsonPath": ".metadata.creationTimestamp"
                }
              ]
            },
            {
              "name": "v1beta1",
              "served": true,
              "storage": true,
              "schema": {
                "openAPIV3Schema": {
                  "description": "VolumeSnapshot is a user's request for either creating a point-in-time snapshot of a persistent volume, or binding to a pre-existing snapshot.",
                  "type": "object",
                  "required": ["spec"],
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "spec": {
                      "description": "spec defines the desired characteristics of a snapshot requested by a user. More info: https://kubernetes.io/docs/concepts/storage/volume-snapshots#volumesnapshots Required.",
                      "type": "object",
                      "required": ["source"],
                      "properties": {
                        "source": {
                          "description": "source specifies where a snapshot will be created from. This field is immutable after creation. Required.",
                          "type": "object",
                          "properties": {
                            "persistentVolumeClaimName": {
                              "description": "persistentVolumeClaimName specifies the name of the PersistentVolumeClaim object representing the volume from which a snapshot should be created. This PVC is assumed to be in the same namespace as the VolumeSnapshot object. This field should be set if the snapshot does not exists, and needs to be created. This field is immutable.",
                              "type": "string"
                            },
                            "volumeSnapshotContentName": {
                              "description": "volumeSnapshotContentName specifies the name of a pre-existing VolumeSnapshotContent object representing an existing volume snapshot. This field should be set if the snapshot already exists and only needs a representation in Kubernetes. This field is immutable.",
                              "type": "string"
                            }
                          }
                        },
                        "volumeSnapshotClassName": {
                          "description": "VolumeSnapshotClassName is the name of the VolumeSnapshotClass requested by the VolumeSnapshot. VolumeSnapshotClassName may be left nil to indicate that the default SnapshotClass should be used. A given cluster may have multiple default Volume SnapshotClasses: one default per CSI Driver. If a VolumeSnapshot does not specify a SnapshotClass, VolumeSnapshotSource will be checked to figure out what the associated CSI Driver is, and the default VolumeSnapshotClass associated with that CSI Driver will be used. If more than one VolumeSnapshotClass exist for a given CSI Driver and more than one have been marked as default, CreateSnapshot will fail and generate an event. Empty string is not allowed for this field.",
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "description": "status represents the current information of a snapshot. Consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.",
                      "type": "object",
                      "properties": {
                        "boundVolumeSnapshotContentName": {
                          "description": "boundVolumeSnapshotContentName is the name of the VolumeSnapshotContent object to which this VolumeSnapshot object intends to bind to. If not specified, it indicates that the VolumeSnapshot object has not been successfully bound to a VolumeSnapshotContent object yet. NOTE: To avoid possible security issues, consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.",
                          "type": "string"
                        },
                        "creationTime": {
                          "description": "creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"creation_time\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it may indicate that the creation time of the snapshot is unknown.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "error": {
                          "description": "error is the last observed error during snapshot creation, if any. This field could be helpful to upper level controllers(i.e., application controller) to decide whether they should continue on waiting for the snapshot to be created based on the type of error reported. The snapshot controller will keep retrying when an error occurrs during the snapshot creation. Upon success, this error field will be cleared.",
                          "type": "object",
                          "properties": {
                            "message": {
                              "description": "message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.",
                              "type": "string"
                            },
                            "time": {
                              "description": "time is the timestamp when the error was encountered.",
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        },
                        "readyToUse": {
                          "description": "readyToUse indicates if the snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"ready_to_use\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.",
                          "type": "boolean"
                        },
                        "restoreSize": {
                          "description": "restoreSize represents the minimum size of volume required to create a volume from this snapshot. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"size_bytes\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.",
                          "type": "string",
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    }
                  }
                }
              },
              "subresources": { "status": {} },
              "additionalPrinterColumns": [
                {
                  "name": "ReadyToUse",
                  "type": "boolean",
                  "description": "Indicates if the snapshot is ready to be used to restore a volume.",
                  "jsonPath": ".status.readyToUse"
                },
                {
                  "name": "SourcePVC",
                  "type": "string",
                  "description": "If a new snapshot needs to be created, this contains the name of the source PVC from which this snapshot was (or will be) created.",
                  "jsonPath": ".spec.source.persistentVolumeClaimName"
                },
                {
                  "name": "SourceSnapshotContent",
                  "type": "string",
                  "description": "If a snapshot already exists, this contains the name of the existing VolumeSnapshotContent object representing the existing snapshot.",
                  "jsonPath": ".spec.source.volumeSnapshotContentName"
                },
                {
                  "name": "RestoreSize",
                  "type": "string",
                  "description": "Represents the minimum size of volume required to rehydrate from this snapshot.",
                  "jsonPath": ".status.restoreSize"
                },
                {
                  "name": "SnapshotClass",
                  "type": "string",
                  "description": "The name of the VolumeSnapshotClass requested by the VolumeSnapshot.",
                  "jsonPath": ".spec.volumeSnapshotClassName"
                },
                {
                  "name": "SnapshotContent",
                  "type": "string",
                  "description": "Name of the VolumeSnapshotContent object to which the VolumeSnapshot object intends to bind to. Please note that verification of binding actually requires checking both VolumeSnapshot and VolumeSnapshotContent to ensure both are pointing at each other. Binding MUST be verified prior to usage of this object.",
                  "jsonPath": ".status.boundVolumeSnapshotContentName"
                },
                {
                  "name": "CreationTime",
                  "type": "date",
                  "description": "Timestamp when the point-in-time snapshot was taken by the underlying storage system.",
                  "jsonPath": ".status.creationTime"
                },
                {
                  "name": "Age",
                  "type": "date",
                  "jsonPath": ".metadata.creationTimestamp"
                }
              ]
            }
          ],
          "conversion": { "strategy": "None" }
        },
        "status": {
          "conditions": [
            {
              "type": "NamesAccepted",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "NoConflicts",
              "message": "no conflicts found"
            },
            {
              "type": "Established",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "InitialNamesAccepted",
              "message": "the initial names have been accepted"
            },
            {
              "type": "KubernetesAPIApprovalPolicyConformant",
              "status": "True",
              "lastTransitionTime": "2021-07-07T11:26:29Z",
              "reason": "ApprovedAnnotation",
              "message": "approved in https://github.com/kubernetes-csi/external-snapshotter/pull/419"
            }
          ],
          "acceptedNames": {
            "plural": "volumesnapshots",
            "singular": "volumesnapshot",
            "kind": "VolumeSnapshot",
            "listKind": "VolumeSnapshotList"
          },
          "storedVersions": ["v1beta1"]
        }
      }
    },
    "featuregate.json": {
      "metadata": {
        "name": "cluster",
        "selfLink": "/apis/config.openshift.io/v1/featuregates/cluster",
        "uid": "226abba6-f53b-4ca7-b35b-748c70c08bc9",
        "resourceVersion": "1681",
        "generation": 1,
        "creationTimestamp": "2021-07-07T11:03:28Z",
        "annotations": {
          "include.release.openshift.io/self-managed-high-availability": "true",
          "include.release.openshift.io/single-node-developer": "true",
          "release.openshift.io/create-only": "true"
        }
      },
      "spec": {},
      "status": {}
    },
    "hostsubnet": {
      "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.json": {
        "kind": "HostSubnet",
        "apiVersion": "network.openshift.io/v1",
        "metadata": {
          "name": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
          "selfLink": "/apis/network.openshift.io/v1/hostsubnets/master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
          "uid": "a59870c8-cdb7-49f3-9d39-95098dbaec3c",
          "resourceVersion": "4284",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:25:39Z",
          "annotations": {
            "pod.network.openshift.io/node-uid": "7b9db4ae-6ec2-45b7-ba44-dd0df8e32466"
          }
        },
        "host": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
        "hostIP": "10.0.88.27",
        "subnet": "10.128.0.0/23"
      },
      "worker-0.imeixner20210707.lab.upshift.rdu2.redhat.com.json": {
        "kind": "HostSubnet",
        "apiVersion": "network.openshift.io/v1",
        "metadata": {
          "name": "worker-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
          "selfLink": "/apis/network.openshift.io/v1/hostsubnets/worker-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
          "uid": "9749efb0-7bdd-47c6-a271-0b336675aed2",
          "resourceVersion": "11745",
          "generation": 1,
          "creationTimestamp": "2021-07-07T11:32:20Z",
          "annotations": {
            "pod.network.openshift.io/node-uid": "c60afb88-bd0b-464d-af1e-e1465bf90f84"
          }
        },
        "host": "worker-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
        "hostIP": "10.0.89.93",
        "subnet": "10.129.0.0/23"
      }
    },
    "infrastructure.json": {
      "metadata": {
        "name": "cluster",
        "selfLink": "/apis/config.openshift.io/v1/infrastructures/cluster",
        "uid": "6c9e1a5e-b2da-49cc-b3df-b61a75a743a0",
        "resourceVersion": "588",
        "generation": 1,
        "creationTimestamp": "2021-07-07T11:02:51Z"
      },
      "spec": {
        "cloudConfig": { "name": "" },
        "platformSpec": { "type": "None" }
      },
      "status": {
        "infrastructureName": "xxxxxxxxxxxxxxxx-xxxxx",
        "platform": "None",
        "platformStatus": { "type": "None" },
        "etcdDiscoveryDomain": "",
        "apiServerURL": "https://api.imeixner20210707.lab.upshift.rdu2.redhat.com:6443",
        "apiServerInternalURI": "https://api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443",
        "controlPlaneTopology": "",
        "infrastructureTopology": ""
      }
    },
    "ingress.json": {
      "metadata": {
        "name": "cluster",
        "selfLink": "/apis/config.openshift.io/v1/ingresses/cluster",
        "uid": "1209cc5d-6b63-435c-a94c-fdcc039d01fa",
        "resourceVersion": "591",
        "generation": 1,
        "creationTimestamp": "2021-07-07T11:02:51Z"
      },
      "spec": { "domain": "apps.imeixner20210707.lab.upshift.rdu2.redhat.com" },
      "status": {}
    },
    "installplans.json": {
      "items": null,
      "stats": { "TOTAL_COUNT": 0, "TOTAL_NONUNIQ_COUNT": 0 }
    },
    "logging": {
      "openshift-logging": {
        "instance.json": {
          "apiVersion": "logging.openshift.io/v1",
          "kind": "ClusterLogging",
          "metadata": {
            "creationTimestamp": "2021-07-28T07:49:15Z",
            "generation": 2,
            "name": "instance",
            "namespace": "openshift-logging",
            "resourceVersion": "760730",
            "selfLink": "/apis/logging.openshift.io/v1/namespaces/openshift-logging/clusterloggings/instance",
            "uid": "8fcebeca-3ee0-4243-b309-02ffd90f3422"
          },
          "spec": {
            "collection": { "logs": { "fluentd": {}, "type": "fluentd" } },
            "curation": {
              "curator": { "schedule": "30 3 * * *" },
              "type": "curator"
            },
            "logStore": {
              "elasticsearch": {
                "nodeCount": 2,
                "proxy": {
                  "resources": {
                    "limits": { "memory": "256Mi" },
                    "requests": { "memory": "256Mi" }
                  }
                },
                "redundancyPolicy": "SingleRedundancy",
                "resources": { "requests": { "memory": "2Gi" } },
                "storage": { "size": "1G", "storageClassName": "gp2" }
              },
              "retentionPolicy": {
                "application": { "maxAge": "1d" },
                "audit": { "maxAge": "7d" },
                "infra": { "maxAge": "7d" }
              },
              "type": "elasticsearch"
            },
            "managementState": "Managed",
            "visualization": { "kibana": { "replicas": 1 }, "type": "kibana" }
          },
          "status": {
            "clusterConditions": [
              {
                "lastTransitionTime": "2021-07-28T07:49:20Z",
                "status": "False",
                "type": "CollectorDeadEnd"
              },
              {
                "lastTransitionTime": "2021-07-28T07:49:20Z",
                "message": "curator is deprecated in favor of defining retention policy",
                "reason": "ResourceDeprecated",
                "status": "True",
                "type": "CuratorRemoved"
              }
            ],
            "collection": {
              "logs": {
                "fluentdStatus": {
                  "daemonSet": "fluentd",
                  "nodes": {
                    "fluentd-5vg2p": "ip-10-0-216-131.us-east-2.compute.internal",
                    "fluentd-cvc86": "ip-10-0-135-21.us-east-2.compute.internal",
                    "fluentd-dnhnf": "ip-10-0-167-19.us-east-2.compute.internal",
                    "fluentd-jdxsk": "ip-10-0-159-230.us-east-2.compute.internal",
                    "fluentd-jtq56": "ip-10-0-174-55.us-east-2.compute.internal",
                    "fluentd-tgtrl": "ip-10-0-210-205.us-east-2.compute.internal"
                  },
                  "pods": {
                    "failed": [],
                    "notReady": [],
                    "ready": [
                      "fluentd-5vg2p",
                      "fluentd-cvc86",
                      "fluentd-dnhnf",
                      "fluentd-jdxsk",
                      "fluentd-jtq56",
                      "fluentd-tgtrl"
                    ]
                  }
                }
              }
            },
            "curation": {},
            "logStore": {
              "elasticsearchStatus": [
                {
                  "cluster": {
                    "activePrimaryShards": 6,
                    "activeShards": 12,
                    "initializingShards": 0,
                    "numDataNodes": 2,
                    "numNodes": 2,
                    "pendingTasks": 0,
                    "relocatingShards": 0,
                    "status": "red",
                    "unassignedShards": 4
                  },
                  "clusterName": "elasticsearch",
                  "nodeConditions": {
                    "elasticsearch-cdm-sxgmtsq6-1": [
                      {
                        "lastTransitionTime": "2021-07-28T08:29:03Z",
                        "message": "Disk storage usage for node is 975.90Mb (100%). Shards will be relocated from this node.",
                        "reason": "Disk Watermark High",
                        "status": "True",
                        "type": "NodeStorage"
                      }
                    ],
                    "elasticsearch-cdm-sxgmtsq6-2": [
                      {
                        "lastTransitionTime": "2021-07-28T08:29:03Z",
                        "message": "Disk storage usage for node is 942.08Mb (96.53484369371172%). Shards will be relocated from this node.",
                        "reason": "Disk Watermark High",
                        "status": "True",
                        "type": "NodeStorage"
                      }
                    ]
                  },
                  "nodeCount": 2,
                  "pods": {
                    "client": {
                      "failed": [],
                      "notReady": [],
                      "ready": [
                        "elasticsearch-cdm-sxgmtsq6-1-66bf986cf4-tcc44",
                        "elasticsearch-cdm-sxgmtsq6-2-68775688f9-nt6df"
                      ]
                    },
                    "data": {
                      "failed": [],
                      "notReady": [],
                      "ready": [
                        "elasticsearch-cdm-sxgmtsq6-1-66bf986cf4-tcc44",
                        "elasticsearch-cdm-sxgmtsq6-2-68775688f9-nt6df"
                      ]
                    },
                    "master": {
                      "failed": [],
                      "notReady": [],
                      "ready": [
                        "elasticsearch-cdm-sxgmtsq6-1-66bf986cf4-tcc44",
                        "elasticsearch-cdm-sxgmtsq6-2-68775688f9-nt6df"
                      ]
                    }
                  },
                  "shardAllocationEnabled": "all"
                }
              ]
            },
            "visualization": {
              "kibanaStatus": [
                {
                  "deployment": "kibana",
                  "pods": {
                    "failed": [],
                    "notReady": [],
                    "ready": ["kibana-7f7b4d49dd-b5pr9"]
                  },
                  "replicaSets": ["kibana-7f7b4d49dd"],
                  "replicas": 1
                }
              ]
            }
          }
        }
      }
    },
    "machineautoscalers": {
      "openshift-machine-api": {
        "worker-us-east-1a.json": {
          "apiVersion": "autoscaling.openshift.io/v1beta1",
          "kind": "MachineAutoscaler",
          "metadata": {
            "annotations": {
              "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"autoscaling.openshift.io/v1beta1\",\"kind\":\"MachineAutoscaler\",\"metadata\":{\"annotations\":{},\"name\":\"worker-us-east-1a\",\"namespace\":\"openshift-machine-api\"},\"spec\":{\"maxReplicas\":12,\"minReplicas\":1,\"scaleTargetRef\":{\"apiVersion\":\"machine.openshift.io/v1beta1\",\"kind\":\"MachineSet\",\"name\":\"worker-us-east-1a\"}}}\n"
            },
            "creationTimestamp": "2021-05-13T14:08:05Z",
            "generation": 1,
            "managedFields": [
              {
                "apiVersion": "autoscaling.openshift.io/v1beta1",
                "fieldsType": "FieldsV1",
                "fieldsV1": {
                  "f:metadata": {
                    "f:annotations": {
                      ".": {},
                      "f:kubectl.kubernetes.io/last-applied-configuration": {}
                    }
                  },
                  "f:spec": {
                    ".": {},
                    "f:maxReplicas": {},
                    "f:minReplicas": {},
                    "f:scaleTargetRef": {
                      ".": {},
                      "f:apiVersion": {},
                      "f:kind": {},
                      "f:name": {}
                    }
                  }
                },
                "manager": "oc",
                "operation": "Update",
                "time": "2021-05-13T14:08:05Z"
              }
            ],
            "name": "worker-us-east-1a",
            "namespace": "openshift-machine-api",
            "resourceVersion": "1153922",
            "selfLink": "/apis/autoscaling.openshift.io/v1beta1/namespaces/openshift-machine-api/machineautoscalers/worker-us-east-1a",
            "uid": "09aeb9ea-7312-4ba6-8410-6b6a49ec64d9"
          },
          "spec": {
            "maxReplicas": 12,
            "minReplicas": 1,
            "scaleTargetRef": {
              "apiVersion": "machine.openshift.io/v1beta1",
              "kind": "MachineSet",
              "name": "worker-us-east-1a"
            }
          }
        }
      }
    },
    "machineconfigpools": {
      "master.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfigPool",
        "metadata": {
          "creationTimestamp": "2021-07-07T11:26:15Z",
          "generation": 2,
          "labels": {
            "machineconfiguration.openshift.io/mco-built-in": "",
            "pools.operator.machineconfiguration.openshift.io/worker": ""
          },
          "name": "worker",
          "resourceVersion": "1782281",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigpools/worker",
          "uid": "f1696051-daa7-4372-ae68-120ae99c92a2"
        },
        "spec": {
          "configuration": {
            "name": "rendered-worker-39c9df4a2c026c3149a02abe6f88cfc8",
            "source": [
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "00-worker"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "01-worker-container-runtime"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "01-worker-kubelet"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "99-worker-generated-registries"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "99-worker-ssh"
              }
            ]
          },
          "machineConfigSelector": {
            "matchLabels": {
              "machineconfiguration.openshift.io/role": "worker"
            }
          },
          "nodeSelector": {
            "matchLabels": { "node-role.kubernetes.io/worker": "" }
          },
          "paused": false
        },
        "status": {
          "conditions": [
            {
              "lastTransitionTime": "2021-07-07T11:27:03Z",
              "message": "",
              "reason": "",
              "status": "False",
              "type": "RenderDegraded"
            },
            {
              "lastTransitionTime": "2021-07-07T11:27:08Z",
              "message": "",
              "reason": "",
              "status": "False",
              "type": "NodeDegraded"
            },
            {
              "lastTransitionTime": "2021-07-07T11:27:08Z",
              "message": "",
              "reason": "",
              "status": "False",
              "type": "Degraded"
            },
            {
              "lastTransitionTime": "2021-07-12T21:20:49Z",
              "message": "All nodes are updated with rendered-worker-39c9df4a2c026c3149a02abe6f88cfc8",
              "reason": "",
              "status": "True",
              "type": "Updated"
            },
            {
              "lastTransitionTime": "2021-07-12T21:20:49Z",
              "message": "",
              "reason": "",
              "status": "False",
              "type": "Updating"
            }
          ],
          "configuration": {
            "name": "rendered-worker-39c9df4a2c026c3149a02abe6f88cfc8",
            "source": [
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "00-worker"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "01-worker-container-runtime"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "01-worker-kubelet"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "99-worker-generated-registries"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "99-worker-ssh"
              }
            ]
          },
          "degradedMachineCount": 0,
          "machineCount": 1,
          "observedGeneration": 2,
          "readyMachineCount": 1,
          "unavailableMachineCount": 0,
          "updatedMachineCount": 1
        }
      },
      "worker.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfigPool",
        "metadata": {
          "creationTimestamp": "2021-07-07T11:26:15Z",
          "generation": 2,
          "labels": {
            "machineconfiguration.openshift.io/mco-built-in": "",
            "pools.operator.machineconfiguration.openshift.io/worker": ""
          },
          "name": "worker",
          "resourceVersion": "1782281",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigpools/worker",
          "uid": "f1696051-daa7-4372-ae68-120ae99c92a2"
        },
        "spec": {
          "configuration": {
            "name": "rendered-worker-39c9df4a2c026c3149a02abe6f88cfc8",
            "source": [
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "00-worker"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "01-worker-container-runtime"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "01-worker-kubelet"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "99-worker-generated-registries"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "99-worker-ssh"
              }
            ]
          },
          "machineConfigSelector": {
            "matchLabels": {
              "machineconfiguration.openshift.io/role": "worker"
            }
          },
          "nodeSelector": {
            "matchLabels": { "node-role.kubernetes.io/worker": "" }
          },
          "paused": false
        },
        "status": {
          "conditions": [
            {
              "lastTransitionTime": "2021-07-07T11:27:03Z",
              "message": "",
              "reason": "",
              "status": "False",
              "type": "RenderDegraded"
            },
            {
              "lastTransitionTime": "2021-07-07T11:27:08Z",
              "message": "",
              "reason": "",
              "status": "False",
              "type": "NodeDegraded"
            },
            {
              "lastTransitionTime": "2021-07-07T11:27:08Z",
              "message": "",
              "reason": "",
              "status": "False",
              "type": "Degraded"
            },
            {
              "lastTransitionTime": "2021-07-12T21:20:49Z",
              "message": "All nodes are updated with rendered-worker-39c9df4a2c026c3149a02abe6f88cfc8",
              "reason": "",
              "status": "True",
              "type": "Updated"
            },
            {
              "lastTransitionTime": "2021-07-12T21:20:49Z",
              "message": "",
              "reason": "",
              "status": "False",
              "type": "Updating"
            }
          ],
          "configuration": {
            "name": "rendered-worker-39c9df4a2c026c3149a02abe6f88cfc8",
            "source": [
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "00-worker"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "01-worker-container-runtime"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "01-worker-kubelet"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "99-worker-generated-registries"
              },
              {
                "apiVersion": "machineconfiguration.openshift.io/v1",
                "kind": "MachineConfig",
                "name": "99-worker-ssh"
              }
            ]
          },
          "degradedMachineCount": 0,
          "machineCount": 1,
          "observedGeneration": 2,
          "readyMachineCount": 1,
          "unavailableMachineCount": 0,
          "updatedMachineCount": 1
        }
      }
    },
    "machineconfigs": {
      "00-master.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfig",
        "metadata": {
          "annotations": {
            "machineconfiguration.openshift.io/generated-by-controller-version": "3c1fc49624d0a9edbbd4ac20223afbdbd4b5ccf4"
          },
          "creationTimestamp": "2021-07-07T11:26:59Z",
          "generation": 1,
          "labels": { "machineconfiguration.openshift.io/role": "master" },
          "name": "00-master",
          "ownerReferences": [
            {
              "apiVersion": "machineconfiguration.openshift.io/v1",
              "blockOwnerDeletion": true,
              "controller": true,
              "kind": "ControllerConfig",
              "name": "machine-config-controller",
              "uid": "07498a84-c3bf-4eec-9cc3-8cb0ad1e32c2"
            }
          ],
          "resourceVersion": "7288",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigs/00-master",
          "uid": "54c9a604-5a10-49c4-b89b-c84f3d71f568"
        },
        "spec": {
          "config": {
            "ignition": { "version": "3.2.0" },
            "passwd": { "users": null },
            "storage": { "files": null },
            "systemd": {
              "units": [
                {
                  "dropins": [
                    { "contents": "", "name": "10-mco-default-env.conf" },
                    {
                      "contents": "[Service]\nEnvironment=\"ENABLE_PROFILE_UNIX_SOCKET=true\"\n",
                      "name": "10-mco-profile-unix-socket.conf"
                    },
                    {
                      "contents": "[Service]\nEnvironment=\"GODEBUG=x509ignoreCN=0,madvdontneed=1\"\n",
                      "name": "10-mco-default-madv.conf"
                    }
                  ],
                  "name": "crio.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Unit]\nConditionPathExists=/enoent\n",
                      "name": "mco-disabled.conf"
                    }
                  ],
                  "name": "docker.socket"
                },
                {
                  "dropins": [
                    { "contents": "", "name": "10-mco-default-env.conf" },
                    {
                      "contents": "[Service]\nEnvironment=\"GODEBUG=x509ignoreCN=0,madvdontneed=1\"\n",
                      "name": "10-mco-default-madv.conf"
                    }
                  ],
                  "name": "kubelet.service"
                },
                {
                  "contents": "[Unit]\nDescription=Machine Config Daemon Firstboot\n# Make sure it runs only on OSTree booted system\nConditionPathExists=/run/ostree-booted\n# Removal of this file signals firstboot completion\nConditionPathExists=/etc/ignition-machine-config-encapsulated.json\nAfter=machine-config-daemon-pull.service\nBefore=crio.service crio-wipe.service\nBefore=kubelet.service\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n# Disable existing repos (if any) so that OS extensions would use embedded RPMs only\nExecStartPre=-/usr/bin/sh -c \"sed -i 's/enabled=1/enabled=0/' /etc/yum.repos.d/*.repo\"\nExecStart=/run/bin/machine-config-daemon firstboot-complete-machineconfig\n[Install]\nWantedBy=multi-user.target\nRequiredBy=crio.service kubelet.service\n",
                  "enabled": true,
                  "name": "machine-config-daemon-firstboot.service"
                },
                {
                  "contents": "[Unit]\nDescription=Machine Config Daemon Pull\n# Make sure it runs only on OSTree booted system\nConditionPathExists=/run/ostree-booted\n# This \"stamp file\" is unlinked when we complete\n# machine-config-daemon-firstboot.service\nConditionPathExists=/etc/ignition-machine-config-encapsulated.json\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n# See https://github.com/coreos/fedora-coreos-tracker/issues/354\nExecStart=/bin/sh -c '/bin/mkdir -p /run/bin && chcon --reference=/usr/bin /run/bin'\nExecStart=/bin/sh -c \"while ! /usr/bin/podman pull --authfile=/var/lib/kubelet/config.json --quiet 'quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa'; do sleep 1; done\"\nExecStart=/bin/sh -c \"/usr/bin/podman run --rm --quiet --net=host --entrypoint=cat 'quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa' /usr/bin/machine-config-daemon > /run/bin/machine-config-daemon.tmp\"\nExecStart=/bin/sh -c '/usr/bin/chmod a+x /run/bin/machine-config-daemon.tmp && mv /run/bin/machine-config-daemon.tmp /run/bin/machine-config-daemon'\n[Install]\nRequiredBy=machine-config-daemon-firstboot.service\n",
                  "enabled": true,
                  "name": "machine-config-daemon-pull.service"
                },
                {
                  "contents": "[Unit]\nBefore=NetworkManager.service\nAfter=systemd-tmpfiles-setup.service\n[Mount]\nWhere=/etc/NetworkManager/system-connections-merged\nWhat=overlay\nType=overlay\nOptions=lowerdir=/etc/NetworkManager/system-connections,upperdir=/run/nm-system-connections,workdir=/run/nm-system-connections-work\n[Install]\nWantedBy=multi-user.target\n",
                  "enabled": true,
                  "name": "etc-NetworkManager-system\\x2dconnections\\x2dmerged.mount"
                },
                {
                  "contents": "[Unit]\nDescription=Ensure the node hostname is valid for the cluster\nBefore=network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nUser=root\n\n# SystemD prevents direct execution of the script in /usr/local/sbin,\n# so it is sourced. See the script for functionality.\nExecStart=/bin/bash -c \"source /usr/local/sbin/set-valid-hostname.sh; wait_localhost; set_valid_hostname `hostname`\"\n\n# Wait up to 5min for the node to get a real hostname.\nTimeoutSec=300\n\n[Install]\nWantedBy=multi-user.target\n# Ensure that network-online.target will not complete until the node has a real hostname.\nRequiredBy=network-online.target\n",
                  "enabled": true,
                  "name": "node-valid-hostname.service"
                },
                {
                  "contents": "[Unit]\nDescription=Writes IP address configuration so that kubelet and crio services select a valid node IP\nWants=network-online.target\nAfter=network-online.target ignition-firstboot-complete.service\nBefore=kubelet.service crio.service\n\n[Service]\n# Need oneshot to delay kubelet\nType=oneshot\n# Would prefer to do Restart=on-failure instead of this bash retry loop, but\n# the version of systemd we have right now doesn't support it. It should be\n# available in systemd v244 and higher.\nExecStart=/bin/bash -c \" \\\n  until \\\n  /usr/bin/podman run --rm \\\n  --authfile /var/lib/kubelet/config.json \\\n  --net=host \\\n  --volume /etc/systemd/system:/etc/systemd/system:z \\\n  quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8a21ea74995438c48d0c1d04e9919668ae33ee80f756632f6718ccb6ac4ac8bd \\\n  node-ip \\\n  set \\\n  --retry-on-failure; \\\n  do \\\n  sleep 5; \\\n  done\"\nExecStart=/bin/systemctl daemon-reload\n\n[Install]\nRequiredBy=kubelet.service\n",
                  "enabled": true,
                  "name": "nodeip-configuration.service"
                },
                { "enabled": true, "name": "openvswitch.service" },
                {
                  "contents": "[Unit]\nDescription=Configures OVS with proper host networking configuration\n# Removal of this file signals firstboot completion\nConditionPathExists=!/etc/ignition-machine-config-encapsulated.json\n# This service is used to move a physical NIC into OVS and reconfigure OVS to use the host IP\nRequires=openvswitch.service\nWants=NetworkManager-wait-online.service\nAfter=NetworkManager-wait-online.service openvswitch.service network.service\nBefore=network-online.target kubelet.service crio.service node-valid-hostname.service\n\n[Service]\n# Need oneshot to delay kubelet\nType=oneshot\nExecStart=/usr/local/bin/configure-ovs.sh OpenShiftSDN\nStandardOutput=journal+console\nStandardError=journal+console\n\n[Install]\nWantedBy=network-online.target\n",
                  "enabled": true,
                  "name": "ovs-configuration.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Service]\nRestart=always\nExecStartPre=-/bin/sh -c '/usr/bin/chown -R :$${OVS_USER_ID##*:} /var/lib/openvswitch'\nExecStartPre=-/bin/sh -c '/usr/bin/chown -R :$${OVS_USER_ID##*:} /etc/openvswitch'\nExecStartPre=-/bin/sh -c '/usr/bin/chown -R :$${OVS_USER_ID##*:} /run/openvswitch'\n",
                      "name": "10-ovs-vswitchd-restart.conf"
                    }
                  ],
                  "name": "ovs-vswitchd.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Service]\nRestart=always\n",
                      "name": "10-ovsdb-restart.conf"
                    }
                  ],
                  "enabled": true,
                  "name": "ovsdb-server.service"
                },
                {
                  "dropins": [
                    { "contents": "", "name": "10-mco-default-env.conf" }
                  ],
                  "name": "pivot.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "# See https://github.com/openshift/machine-config-operator/issues/1897\n[Service]\nNice=10\nIOSchedulingClass=best-effort\nIOSchedulingPriority=6\n",
                      "name": "mco-controlplane-nice.conf"
                    }
                  ],
                  "name": "rpm-ostreed.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Unit]\nConditionPathExists=/enoent\n",
                      "name": "mco-disabled.conf"
                    }
                  ],
                  "name": "zincati.service"
                }
              ]
            }
          },
          "extensions": null,
          "fips": false,
          "kernelArguments": null,
          "kernelType": "",
          "osImageURL": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1c91baf8b4498144cfd87383a712639ebe14639c1dfd163c37c423713c935958"
        }
      },
      "00-worker.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfig",
        "metadata": {
          "annotations": {
            "machineconfiguration.openshift.io/generated-by-controller-version": "3c1fc49624d0a9edbbd4ac20223afbdbd4b5ccf4"
          },
          "creationTimestamp": "2021-07-07T11:26:59Z",
          "generation": 1,
          "labels": { "machineconfiguration.openshift.io/role": "worker" },
          "name": "00-worker",
          "ownerReferences": [
            {
              "apiVersion": "machineconfiguration.openshift.io/v1",
              "blockOwnerDeletion": true,
              "controller": true,
              "kind": "ControllerConfig",
              "name": "machine-config-controller",
              "uid": "07498a84-c3bf-4eec-9cc3-8cb0ad1e32c2"
            }
          ],
          "resourceVersion": "7289",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigs/00-worker",
          "uid": "e9332f26-63f7-44d4-9ecd-915d12123821"
        },
        "spec": {
          "config": {
            "ignition": { "version": "3.2.0" },
            "passwd": { "users": null },
            "storage": { "files": null },
            "systemd": {
              "units": [
                {
                  "dropins": [
                    { "contents": "", "name": "10-mco-default-env.conf" },
                    {
                      "contents": "[Service]\nEnvironment=\"ENABLE_PROFILE_UNIX_SOCKET=true\"\n",
                      "name": "10-mco-profile-unix-socket.conf"
                    },
                    {
                      "contents": "[Service]\nEnvironment=\"GODEBUG=x509ignoreCN=0,madvdontneed=1\"\n",
                      "name": "10-mco-default-madv.conf"
                    }
                  ],
                  "name": "crio.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Unit]\nConditionPathExists=/enoent\n",
                      "name": "mco-disabled.conf"
                    }
                  ],
                  "name": "docker.socket"
                },
                {
                  "dropins": [
                    { "contents": "", "name": "10-mco-default-env.conf" },
                    {
                      "contents": "[Service]\nEnvironment=\"GODEBUG=x509ignoreCN=0,madvdontneed=1\"\n",
                      "name": "10-mco-default-madv.conf"
                    }
                  ],
                  "name": "kubelet.service"
                },
                {
                  "contents": "[Unit]\nDescription=Machine Config Daemon Firstboot\n# Make sure it runs only on OSTree booted system\nConditionPathExists=/run/ostree-booted\n# Removal of this file signals firstboot completion\nConditionPathExists=/etc/ignition-machine-config-encapsulated.json\nAfter=machine-config-daemon-pull.service\nBefore=crio.service crio-wipe.service\nBefore=kubelet.service\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n# Disable existing repos (if any) so that OS extensions would use embedded RPMs only\nExecStartPre=-/usr/bin/sh -c \"sed -i 's/enabled=1/enabled=0/' /etc/yum.repos.d/*.repo\"\nExecStart=/run/bin/machine-config-daemon firstboot-complete-machineconfig\n[Install]\nWantedBy=multi-user.target\nRequiredBy=crio.service kubelet.service\n",
                  "enabled": true,
                  "name": "machine-config-daemon-firstboot.service"
                },
                {
                  "contents": "[Unit]\nDescription=Machine Config Daemon Pull\n# Make sure it runs only on OSTree booted system\nConditionPathExists=/run/ostree-booted\n# This \"stamp file\" is unlinked when we complete\n# machine-config-daemon-firstboot.service\nConditionPathExists=/etc/ignition-machine-config-encapsulated.json\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n# See https://github.com/coreos/fedora-coreos-tracker/issues/354\nExecStart=/bin/sh -c '/bin/mkdir -p /run/bin && chcon --reference=/usr/bin /run/bin'\nExecStart=/bin/sh -c \"while ! /usr/bin/podman pull --authfile=/var/lib/kubelet/config.json --quiet 'quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa'; do sleep 1; done\"\nExecStart=/bin/sh -c \"/usr/bin/podman run --rm --quiet --net=host --entrypoint=cat 'quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa' /usr/bin/machine-config-daemon > /run/bin/machine-config-daemon.tmp\"\nExecStart=/bin/sh -c '/usr/bin/chmod a+x /run/bin/machine-config-daemon.tmp && mv /run/bin/machine-config-daemon.tmp /run/bin/machine-config-daemon'\n[Install]\nRequiredBy=machine-config-daemon-firstboot.service\n",
                  "enabled": true,
                  "name": "machine-config-daemon-pull.service"
                },
                {
                  "contents": "[Unit]\nBefore=NetworkManager.service\nAfter=systemd-tmpfiles-setup.service\n[Mount]\nWhere=/etc/NetworkManager/system-connections-merged\nWhat=overlay\nType=overlay\nOptions=lowerdir=/etc/NetworkManager/system-connections,upperdir=/run/nm-system-connections,workdir=/run/nm-system-connections-work\n[Install]\nWantedBy=multi-user.target\n",
                  "enabled": true,
                  "name": "etc-NetworkManager-system\\x2dconnections\\x2dmerged.mount"
                },
                {
                  "contents": "[Unit]\nDescription=Ensure the node hostname is valid for the cluster\nBefore=network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nUser=root\n\n# SystemD prevents direct execution of the script in /usr/local/sbin,\n# so it is sourced. See the script for functionality.\nExecStart=/bin/bash -c \"source /usr/local/sbin/set-valid-hostname.sh; wait_localhost; set_valid_hostname `hostname`\"\n\n# Wait up to 5min for the node to get a real hostname.\nTimeoutSec=300\n\n[Install]\nWantedBy=multi-user.target\n# Ensure that network-online.target will not complete until the node has a real hostname.\nRequiredBy=network-online.target\n",
                  "enabled": true,
                  "name": "node-valid-hostname.service"
                },
                {
                  "contents": "[Unit]\nDescription=Writes IP address configuration so that kubelet and crio services select a valid node IP\nWants=network-online.target\nAfter=network-online.target ignition-firstboot-complete.service\nBefore=kubelet.service crio.service\n\n[Service]\n# Need oneshot to delay kubelet\nType=oneshot\n# Would prefer to do Restart=on-failure instead of this bash retry loop, but\n# the version of systemd we have right now doesn't support it. It should be\n# available in systemd v244 and higher.\nExecStart=/bin/bash -c \" \\\n  until \\\n  /usr/bin/podman run --rm \\\n  --authfile /var/lib/kubelet/config.json \\\n  --net=host \\\n  --volume /etc/systemd/system:/etc/systemd/system:z \\\n  quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8a21ea74995438c48d0c1d04e9919668ae33ee80f756632f6718ccb6ac4ac8bd \\\n  node-ip \\\n  set \\\n  --retry-on-failure; \\\n  do \\\n  sleep 5; \\\n  done\"\nExecStart=/bin/systemctl daemon-reload\n\n[Install]\nRequiredBy=kubelet.service\n",
                  "enabled": true,
                  "name": "nodeip-configuration.service"
                },
                { "enabled": true, "name": "openvswitch.service" },
                {
                  "contents": "[Unit]\nDescription=Configures OVS with proper host networking configuration\n# Removal of this file signals firstboot completion\nConditionPathExists=!/etc/ignition-machine-config-encapsulated.json\n# This service is used to move a physical NIC into OVS and reconfigure OVS to use the host IP\nRequires=openvswitch.service\nWants=NetworkManager-wait-online.service\nAfter=NetworkManager-wait-online.service openvswitch.service network.service\nBefore=network-online.target kubelet.service crio.service node-valid-hostname.service\n\n[Service]\n# Need oneshot to delay kubelet\nType=oneshot\nExecStart=/usr/local/bin/configure-ovs.sh OpenShiftSDN\nStandardOutput=journal+console\nStandardError=journal+console\n\n[Install]\nWantedBy=network-online.target\n",
                  "enabled": true,
                  "name": "ovs-configuration.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Service]\nRestart=always\nExecStartPre=-/bin/sh -c '/usr/bin/chown -R :$${OVS_USER_ID##*:} /var/lib/openvswitch'\nExecStartPre=-/bin/sh -c '/usr/bin/chown -R :$${OVS_USER_ID##*:} /etc/openvswitch'\nExecStartPre=-/bin/sh -c '/usr/bin/chown -R :$${OVS_USER_ID##*:} /run/openvswitch'\n",
                      "name": "10-ovs-vswitchd-restart.conf"
                    }
                  ],
                  "name": "ovs-vswitchd.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Service]\nRestart=always\n",
                      "name": "10-ovsdb-restart.conf"
                    }
                  ],
                  "enabled": true,
                  "name": "ovsdb-server.service"
                },
                {
                  "dropins": [
                    { "contents": "", "name": "10-mco-default-env.conf" }
                  ],
                  "name": "pivot.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Unit]\nConditionPathExists=/enoent\n",
                      "name": "mco-disabled.conf"
                    }
                  ],
                  "name": "zincati.service"
                }
              ]
            }
          },
          "extensions": null,
          "fips": false,
          "kernelArguments": null,
          "kernelType": "",
          "osImageURL": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1c91baf8b4498144cfd87383a712639ebe14639c1dfd163c37c423713c935958"
        }
      },
      "01-master-container-runtime.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfig",
        "metadata": {
          "annotations": {
            "machineconfiguration.openshift.io/generated-by-controller-version": "3c1fc49624d0a9edbbd4ac20223afbdbd4b5ccf4"
          },
          "creationTimestamp": "2021-07-07T11:26:59Z",
          "generation": 1,
          "labels": { "machineconfiguration.openshift.io/role": "master" },
          "name": "01-master-container-runtime",
          "ownerReferences": [
            {
              "apiVersion": "machineconfiguration.openshift.io/v1",
              "blockOwnerDeletion": true,
              "controller": true,
              "kind": "ControllerConfig",
              "name": "machine-config-controller",
              "uid": "07498a84-c3bf-4eec-9cc3-8cb0ad1e32c2"
            }
          ],
          "resourceVersion": "7292",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigs/01-master-container-runtime",
          "uid": "2c5dae71-973b-42fa-a4b3-c4eb6db04e44"
        },
        "spec": {
          "config": {
            "ignition": { "version": "3.2.0" },
            "passwd": { "users": null },
            "storage": { "files": null }
          },
          "extensions": null,
          "fips": false,
          "kernelArguments": null,
          "kernelType": "",
          "osImageURL": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1c91baf8b4498144cfd87383a712639ebe14639c1dfd163c37c423713c935958"
        }
      },
      "01-master-kubelet.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfig",
        "metadata": {
          "annotations": {
            "machineconfiguration.openshift.io/generated-by-controller-version": "3c1fc49624d0a9edbbd4ac20223afbdbd4b5ccf4"
          },
          "creationTimestamp": "2021-07-07T11:26:59Z",
          "generation": 1,
          "labels": { "machineconfiguration.openshift.io/role": "master" },
          "name": "01-master-kubelet",
          "ownerReferences": [
            {
              "apiVersion": "machineconfiguration.openshift.io/v1",
              "blockOwnerDeletion": true,
              "controller": true,
              "kind": "ControllerConfig",
              "name": "machine-config-controller",
              "uid": "07498a84-c3bf-4eec-9cc3-8cb0ad1e32c2"
            }
          ],
          "resourceVersion": "7295",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigs/01-master-kubelet",
          "uid": "37301880-7feb-4e87-b1f4-98fa305ee5cd"
        },
        "spec": {
          "config": {
            "ignition": { "version": "3.2.0" },
            "passwd": { "users": null },
            "storage": { "files": null },
            "systemd": {
              "units": [
                {
                  "contents": "[Unit]\nDescription=Kubernetes Kubelet\nWants=rpc-statd.service network-online.target crio.service\nAfter=network-online.target crio.service\nAfter=ostree-finalize-staged.service\n\n[Service]\nType=notify\nExecStartPre=/bin/mkdir --parents /etc/kubernetes/manifests\nExecStartPre=/bin/rm -f /var/lib/kubelet/cpu_manager_state\nEnvironmentFile=/etc/os-release\nEnvironmentFile=-/etc/kubernetes/kubelet-workaround\nEnvironmentFile=-/etc/kubernetes/kubelet-env\n\nExecStart=/usr/bin/hyperkube \\\n    kubelet \\\n      --config=/etc/kubernetes/kubelet.conf \\\n      --bootstrap-kubeconfig=/etc/kubernetes/kubeconfig \\\n      --kubeconfig=/var/lib/kubelet/kubeconfig \\\n      --container-runtime=remote \\\n      --container-runtime-endpoint=/var/run/crio/crio.sock \\\n      --runtime-cgroups=/system.slice/crio.service \\\n      --node-labels=node-role.kubernetes.io/master,node.openshift.io/os_id=${ID} \\\n      --node-ip=${KUBELET_NODE_IP} \\\n      --minimum-container-ttl-duration=6m0s \\\n      --cloud-provider= \\\n      --volume-plugin-dir=/etc/kubernetes/kubelet-plugins/volume/exec \\\n       \\\n      --register-with-taints=node-role.kubernetes.io/master=:NoSchedule \\\n      --pod-infra-container-image=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f2cd141d802e4be7d223f16b810522921e8e1ecf020b6b6d6591fcd68617df40 \\\n      --v=${KUBELET_LOG_LEVEL}\n\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n",
                  "enabled": true,
                  "name": "kubelet.service"
                }
              ]
            }
          },
          "extensions": null,
          "fips": false,
          "kernelArguments": null,
          "kernelType": "",
          "osImageURL": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1c91baf8b4498144cfd87383a712639ebe14639c1dfd163c37c423713c935958"
        }
      },
      "01-worker-container-runtime.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfig",
        "metadata": {
          "annotations": {
            "machineconfiguration.openshift.io/generated-by-controller-version": "3c1fc49624d0a9edbbd4ac20223afbdbd4b5ccf4"
          },
          "creationTimestamp": "2021-07-07T11:26:59Z",
          "generation": 1,
          "labels": { "machineconfiguration.openshift.io/role": "worker" },
          "name": "01-worker-container-runtime",
          "ownerReferences": [
            {
              "apiVersion": "machineconfiguration.openshift.io/v1",
              "blockOwnerDeletion": true,
              "controller": true,
              "kind": "ControllerConfig",
              "name": "machine-config-controller",
              "uid": "07498a84-c3bf-4eec-9cc3-8cb0ad1e32c2"
            }
          ],
          "resourceVersion": "7297",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigs/01-worker-container-runtime",
          "uid": "e67a99d8-8498-413b-972a-94b420add08f"
        },
        "spec": {
          "config": {
            "ignition": { "version": "3.2.0" },
            "passwd": { "users": null },
            "storage": { "files": null }
          },
          "extensions": null,
          "fips": false,
          "kernelArguments": null,
          "kernelType": "",
          "osImageURL": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1c91baf8b4498144cfd87383a712639ebe14639c1dfd163c37c423713c935958"
        }
      },
      "01-worker-kubelet.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfig",
        "metadata": {
          "annotations": {
            "machineconfiguration.openshift.io/generated-by-controller-version": "3c1fc49624d0a9edbbd4ac20223afbdbd4b5ccf4"
          },
          "creationTimestamp": "2021-07-07T11:26:59Z",
          "generation": 1,
          "labels": { "machineconfiguration.openshift.io/role": "worker" },
          "name": "01-worker-kubelet",
          "ownerReferences": [
            {
              "apiVersion": "machineconfiguration.openshift.io/v1",
              "blockOwnerDeletion": true,
              "controller": true,
              "kind": "ControllerConfig",
              "name": "machine-config-controller",
              "uid": "07498a84-c3bf-4eec-9cc3-8cb0ad1e32c2"
            }
          ],
          "resourceVersion": "7317",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigs/01-worker-kubelet",
          "uid": "05c84894-7f6b-4b8f-ae41-a7a76282e5e3"
        },
        "spec": {
          "config": {
            "ignition": { "version": "3.2.0" },
            "passwd": { "users": null },
            "storage": { "files": null },
            "systemd": {
              "units": [
                {
                  "contents": "[Unit]\nDescription=Kubernetes Kubelet\nWants=rpc-statd.service network-online.target crio.service\nAfter=network-online.target crio.service\nAfter=ostree-finalize-staged.service\n\n[Service]\nType=notify\nExecStartPre=/bin/mkdir --parents /etc/kubernetes/manifests\nExecStartPre=/bin/rm -f /var/lib/kubelet/cpu_manager_state\nEnvironmentFile=/etc/os-release\nEnvironmentFile=-/etc/kubernetes/kubelet-workaround\nEnvironmentFile=-/etc/kubernetes/kubelet-env\n\nExecStart=/usr/bin/hyperkube \\\n    kubelet \\\n      --config=/etc/kubernetes/kubelet.conf \\\n      --bootstrap-kubeconfig=/etc/kubernetes/kubeconfig \\\n      --kubeconfig=/var/lib/kubelet/kubeconfig \\\n      --container-runtime=remote \\\n      --container-runtime-endpoint=/var/run/crio/crio.sock \\\n      --runtime-cgroups=/system.slice/crio.service \\\n      --node-labels=node-role.kubernetes.io/worker,node.openshift.io/os_id=${ID} \\\n      --node-ip=${KUBELET_NODE_IP} \\\n      --minimum-container-ttl-duration=6m0s \\\n      --volume-plugin-dir=/etc/kubernetes/kubelet-plugins/volume/exec \\\n      --cloud-provider= \\\n       \\\n      --pod-infra-container-image=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f2cd141d802e4be7d223f16b810522921e8e1ecf020b6b6d6591fcd68617df40 \\\n      --v=${KUBELET_LOG_LEVEL}\n\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n",
                  "enabled": true,
                  "name": "kubelet.service"
                }
              ]
            }
          },
          "extensions": null,
          "fips": false,
          "kernelArguments": null,
          "kernelType": "",
          "osImageURL": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1c91baf8b4498144cfd87383a712639ebe14639c1dfd163c37c423713c935958"
        }
      },
      "99-master-generated-registries.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfig",
        "metadata": {
          "annotations": {
            "machineconfiguration.openshift.io/generated-by-controller-version": "3c1fc49624d0a9edbbd4ac20223afbdbd4b5ccf4"
          },
          "creationTimestamp": "2021-07-07T11:26:59Z",
          "generation": 1,
          "labels": { "machineconfiguration.openshift.io/role": "master" },
          "name": "99-master-generated-registries",
          "ownerReferences": [
            {
              "apiVersion": "config.openshift.io/v1",
              "kind": "Image",
              "name": "cluster",
              "uid": "b9bec110-098d-4c5c-9cff-0d23a814e4cb"
            }
          ],
          "resourceVersion": "7309",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigs/99-master-generated-registries",
          "uid": "a96d0f16-1662-42f0-99d9-97b1d9fb814c"
        },
        "spec": {
          "config": {
            "ignition": { "version": "3.2.0" },
            "passwd": { "users": null },
            "storage": { "files": null }
          },
          "extensions": null,
          "fips": false,
          "kernelArguments": null,
          "kernelType": "",
          "osImageURL": ""
        }
      },
      "99-master-ssh.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfig",
        "metadata": {
          "creationTimestamp": "2021-07-07T11:03:36Z",
          "generation": 1,
          "labels": { "machineconfiguration.openshift.io/role": "master" },
          "name": "99-master-ssh",
          "resourceVersion": "1965",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigs/99-master-ssh",
          "uid": "9bf91333-b9c1-4f9d-8e8d-076fead7fb30"
        },
        "spec": {
          "config": {
            "ignition": { "version": "3.2.0" },
            "passwd": { "users": null },
            "storage": { "files": null }
          },
          "extensions": null,
          "fips": false,
          "kernelArguments": null,
          "kernelType": "",
          "osImageURL": ""
        }
      },
      "99-worker-generated-registries.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfig",
        "metadata": {
          "annotations": {
            "machineconfiguration.openshift.io/generated-by-controller-version": "3c1fc49624d0a9edbbd4ac20223afbdbd4b5ccf4"
          },
          "creationTimestamp": "2021-07-07T11:26:59Z",
          "generation": 1,
          "labels": { "machineconfiguration.openshift.io/role": "worker" },
          "name": "99-worker-generated-registries",
          "ownerReferences": [
            {
              "apiVersion": "config.openshift.io/v1",
              "kind": "Image",
              "name": "cluster",
              "uid": "b9bec110-098d-4c5c-9cff-0d23a814e4cb"
            }
          ],
          "resourceVersion": "7307",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigs/99-worker-generated-registries",
          "uid": "2452cee7-0883-44ac-a66d-ce090bf0e70c"
        },
        "spec": {
          "config": {
            "ignition": { "version": "3.2.0" },
            "passwd": { "users": null },
            "storage": { "files": null }
          },
          "extensions": null,
          "fips": false,
          "kernelArguments": null,
          "kernelType": "",
          "osImageURL": ""
        }
      },
      "99-worker-ssh.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfig",
        "metadata": {
          "creationTimestamp": "2021-07-07T11:03:36Z",
          "generation": 1,
          "labels": { "machineconfiguration.openshift.io/role": "worker" },
          "name": "99-worker-ssh",
          "resourceVersion": "1967",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigs/99-worker-ssh",
          "uid": "46948a76-6813-43fe-985b-a0141c983860"
        },
        "spec": {
          "config": {
            "ignition": { "version": "3.2.0" },
            "passwd": { "users": null },
            "storage": { "files": null }
          },
          "extensions": null,
          "fips": false,
          "kernelArguments": null,
          "kernelType": "",
          "osImageURL": ""
        }
      },
      "rendered-master-025110333ea44423ccb1052723956671.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfig",
        "metadata": {
          "annotations": {
            "machineconfiguration.openshift.io/generated-by-controller-version": "3c1fc49624d0a9edbbd4ac20223afbdbd4b5ccf4"
          },
          "creationTimestamp": "2021-07-07T11:27:03Z",
          "generation": 1,
          "name": "rendered-master-025110333ea44423ccb1052723956671",
          "ownerReferences": [
            {
              "apiVersion": "machineconfiguration.openshift.io/v1",
              "blockOwnerDeletion": true,
              "controller": true,
              "kind": "MachineConfigPool",
              "name": "master",
              "uid": "a6aba62c-d1fc-4059-96f1-d7ad5f18027f"
            }
          ],
          "resourceVersion": "7444",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigs/rendered-master-025110333ea44423ccb1052723956671",
          "uid": "a2c3b33f-4fea-41ec-ba4c-604563741e23"
        },
        "spec": {
          "config": {
            "ignition": { "version": "3.2.0" },
            "passwd": { "users": null },
            "storage": { "files": null },
            "systemd": {
              "units": [
                {
                  "dropins": [
                    { "contents": "", "name": "10-mco-default-env.conf" },
                    {
                      "contents": "[Service]\nEnvironment=\"ENABLE_PROFILE_UNIX_SOCKET=true\"\n",
                      "name": "10-mco-profile-unix-socket.conf"
                    },
                    {
                      "contents": "[Service]\nEnvironment=\"GODEBUG=x509ignoreCN=0,madvdontneed=1\"\n",
                      "name": "10-mco-default-madv.conf"
                    }
                  ],
                  "name": "crio.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Unit]\nConditionPathExists=/enoent\n",
                      "name": "mco-disabled.conf"
                    }
                  ],
                  "name": "docker.socket"
                },
                {
                  "contents": "[Unit]\nDescription=Kubernetes Kubelet\nWants=rpc-statd.service network-online.target crio.service\nAfter=network-online.target crio.service\nAfter=ostree-finalize-staged.service\n\n[Service]\nType=notify\nExecStartPre=/bin/mkdir --parents /etc/kubernetes/manifests\nExecStartPre=/bin/rm -f /var/lib/kubelet/cpu_manager_state\nEnvironmentFile=/etc/os-release\nEnvironmentFile=-/etc/kubernetes/kubelet-workaround\nEnvironmentFile=-/etc/kubernetes/kubelet-env\n\nExecStart=/usr/bin/hyperkube \\\n    kubelet \\\n      --config=/etc/kubernetes/kubelet.conf \\\n      --bootstrap-kubeconfig=/etc/kubernetes/kubeconfig \\\n      --kubeconfig=/var/lib/kubelet/kubeconfig \\\n      --container-runtime=remote \\\n      --container-runtime-endpoint=/var/run/crio/crio.sock \\\n      --runtime-cgroups=/system.slice/crio.service \\\n      --node-labels=node-role.kubernetes.io/master,node.openshift.io/os_id=${ID} \\\n      --node-ip=${KUBELET_NODE_IP} \\\n      --minimum-container-ttl-duration=6m0s \\\n      --cloud-provider= \\\n      --volume-plugin-dir=/etc/kubernetes/kubelet-plugins/volume/exec \\\n       \\\n      --register-with-taints=node-role.kubernetes.io/master=:NoSchedule \\\n      --pod-infra-container-image=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f2cd141d802e4be7d223f16b810522921e8e1ecf020b6b6d6591fcd68617df40 \\\n      --v=${KUBELET_LOG_LEVEL}\n\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n",
                  "dropins": [
                    { "contents": "", "name": "10-mco-default-env.conf" },
                    {
                      "contents": "[Service]\nEnvironment=\"GODEBUG=x509ignoreCN=0,madvdontneed=1\"\n",
                      "name": "10-mco-default-madv.conf"
                    }
                  ],
                  "enabled": true,
                  "name": "kubelet.service"
                },
                {
                  "contents": "[Unit]\nDescription=Machine Config Daemon Firstboot\n# Make sure it runs only on OSTree booted system\nConditionPathExists=/run/ostree-booted\n# Removal of this file signals firstboot completion\nConditionPathExists=/etc/ignition-machine-config-encapsulated.json\nAfter=machine-config-daemon-pull.service\nBefore=crio.service crio-wipe.service\nBefore=kubelet.service\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n# Disable existing repos (if any) so that OS extensions would use embedded RPMs only\nExecStartPre=-/usr/bin/sh -c \"sed -i 's/enabled=1/enabled=0/' /etc/yum.repos.d/*.repo\"\nExecStart=/run/bin/machine-config-daemon firstboot-complete-machineconfig\n[Install]\nWantedBy=multi-user.target\nRequiredBy=crio.service kubelet.service\n",
                  "enabled": true,
                  "name": "machine-config-daemon-firstboot.service"
                },
                {
                  "contents": "[Unit]\nDescription=Machine Config Daemon Pull\n# Make sure it runs only on OSTree booted system\nConditionPathExists=/run/ostree-booted\n# This \"stamp file\" is unlinked when we complete\n# machine-config-daemon-firstboot.service\nConditionPathExists=/etc/ignition-machine-config-encapsulated.json\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n# See https://github.com/coreos/fedora-coreos-tracker/issues/354\nExecStart=/bin/sh -c '/bin/mkdir -p /run/bin && chcon --reference=/usr/bin /run/bin'\nExecStart=/bin/sh -c \"while ! /usr/bin/podman pull --authfile=/var/lib/kubelet/config.json --quiet 'quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa'; do sleep 1; done\"\nExecStart=/bin/sh -c \"/usr/bin/podman run --rm --quiet --net=host --entrypoint=cat 'quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa' /usr/bin/machine-config-daemon > /run/bin/machine-config-daemon.tmp\"\nExecStart=/bin/sh -c '/usr/bin/chmod a+x /run/bin/machine-config-daemon.tmp && mv /run/bin/machine-config-daemon.tmp /run/bin/machine-config-daemon'\n[Install]\nRequiredBy=machine-config-daemon-firstboot.service\n",
                  "enabled": true,
                  "name": "machine-config-daemon-pull.service"
                },
                {
                  "contents": "[Unit]\nBefore=NetworkManager.service\nAfter=systemd-tmpfiles-setup.service\n[Mount]\nWhere=/etc/NetworkManager/system-connections-merged\nWhat=overlay\nType=overlay\nOptions=lowerdir=/etc/NetworkManager/system-connections,upperdir=/run/nm-system-connections,workdir=/run/nm-system-connections-work\n[Install]\nWantedBy=multi-user.target\n",
                  "enabled": true,
                  "name": "etc-NetworkManager-system\\x2dconnections\\x2dmerged.mount"
                },
                {
                  "contents": "[Unit]\nDescription=Ensure the node hostname is valid for the cluster\nBefore=network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nUser=root\n\n# SystemD prevents direct execution of the script in /usr/local/sbin,\n# so it is sourced. See the script for functionality.\nExecStart=/bin/bash -c \"source /usr/local/sbin/set-valid-hostname.sh; wait_localhost; set_valid_hostname `hostname`\"\n\n# Wait up to 5min for the node to get a real hostname.\nTimeoutSec=300\n\n[Install]\nWantedBy=multi-user.target\n# Ensure that network-online.target will not complete until the node has a real hostname.\nRequiredBy=network-online.target\n",
                  "enabled": true,
                  "name": "node-valid-hostname.service"
                },
                {
                  "contents": "[Unit]\nDescription=Writes IP address configuration so that kubelet and crio services select a valid node IP\nWants=network-online.target\nAfter=network-online.target ignition-firstboot-complete.service\nBefore=kubelet.service crio.service\n\n[Service]\n# Need oneshot to delay kubelet\nType=oneshot\n# Would prefer to do Restart=on-failure instead of this bash retry loop, but\n# the version of systemd we have right now doesn't support it. It should be\n# available in systemd v244 and higher.\nExecStart=/bin/bash -c \" \\\n  until \\\n  /usr/bin/podman run --rm \\\n  --authfile /var/lib/kubelet/config.json \\\n  --net=host \\\n  --volume /etc/systemd/system:/etc/systemd/system:z \\\n  quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8a21ea74995438c48d0c1d04e9919668ae33ee80f756632f6718ccb6ac4ac8bd \\\n  node-ip \\\n  set \\\n  --retry-on-failure; \\\n  do \\\n  sleep 5; \\\n  done\"\nExecStart=/bin/systemctl daemon-reload\n\n[Install]\nRequiredBy=kubelet.service\n",
                  "enabled": true,
                  "name": "nodeip-configuration.service"
                },
                { "enabled": true, "name": "openvswitch.service" },
                {
                  "contents": "[Unit]\nDescription=Configures OVS with proper host networking configuration\n# Removal of this file signals firstboot completion\nConditionPathExists=!/etc/ignition-machine-config-encapsulated.json\n# This service is used to move a physical NIC into OVS and reconfigure OVS to use the host IP\nRequires=openvswitch.service\nWants=NetworkManager-wait-online.service\nAfter=NetworkManager-wait-online.service openvswitch.service network.service\nBefore=network-online.target kubelet.service crio.service node-valid-hostname.service\n\n[Service]\n# Need oneshot to delay kubelet\nType=oneshot\nExecStart=/usr/local/bin/configure-ovs.sh OpenShiftSDN\nStandardOutput=journal+console\nStandardError=journal+console\n\n[Install]\nWantedBy=network-online.target\n",
                  "enabled": true,
                  "name": "ovs-configuration.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Service]\nRestart=always\nExecStartPre=-/bin/sh -c '/usr/bin/chown -R :$${OVS_USER_ID##*:} /var/lib/openvswitch'\nExecStartPre=-/bin/sh -c '/usr/bin/chown -R :$${OVS_USER_ID##*:} /etc/openvswitch'\nExecStartPre=-/bin/sh -c '/usr/bin/chown -R :$${OVS_USER_ID##*:} /run/openvswitch'\n",
                      "name": "10-ovs-vswitchd-restart.conf"
                    }
                  ],
                  "name": "ovs-vswitchd.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Service]\nRestart=always\n",
                      "name": "10-ovsdb-restart.conf"
                    }
                  ],
                  "enabled": true,
                  "name": "ovsdb-server.service"
                },
                {
                  "dropins": [
                    { "contents": "", "name": "10-mco-default-env.conf" }
                  ],
                  "name": "pivot.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "# See https://github.com/openshift/machine-config-operator/issues/1897\n[Service]\nNice=10\nIOSchedulingClass=best-effort\nIOSchedulingPriority=6\n",
                      "name": "mco-controlplane-nice.conf"
                    }
                  ],
                  "name": "rpm-ostreed.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Unit]\nConditionPathExists=/enoent\n",
                      "name": "mco-disabled.conf"
                    }
                  ],
                  "name": "zincati.service"
                }
              ]
            }
          },
          "extensions": [],
          "fips": false,
          "kernelArguments": [],
          "kernelType": "default",
          "osImageURL": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1c91baf8b4498144cfd87383a712639ebe14639c1dfd163c37c423713c935958"
        }
      },
      "rendered-worker-39c9df4a2c026c3149a02abe6f88cfc8.json": {
        "apiVersion": "machineconfiguration.openshift.io/v1",
        "kind": "MachineConfig",
        "metadata": {
          "annotations": {
            "machineconfiguration.openshift.io/generated-by-controller-version": "3c1fc49624d0a9edbbd4ac20223afbdbd4b5ccf4"
          },
          "creationTimestamp": "2021-07-07T11:27:03Z",
          "generation": 1,
          "name": "rendered-worker-39c9df4a2c026c3149a02abe6f88cfc8",
          "ownerReferences": [
            {
              "apiVersion": "machineconfiguration.openshift.io/v1",
              "blockOwnerDeletion": true,
              "controller": true,
              "kind": "MachineConfigPool",
              "name": "worker",
              "uid": "f1696051-daa7-4372-ae68-120ae99c92a2"
            }
          ],
          "resourceVersion": "7445",
          "selfLink": "/apis/machineconfiguration.openshift.io/v1/machineconfigs/rendered-worker-39c9df4a2c026c3149a02abe6f88cfc8",
          "uid": "84556b48-1666-44d5-a720-b4c49acfc969"
        },
        "spec": {
          "config": {
            "ignition": { "version": "3.2.0" },
            "passwd": { "users": null },
            "storage": { "files": null },
            "systemd": {
              "units": [
                {
                  "dropins": [
                    { "contents": "", "name": "10-mco-default-env.conf" },
                    {
                      "contents": "[Service]\nEnvironment=\"ENABLE_PROFILE_UNIX_SOCKET=true\"\n",
                      "name": "10-mco-profile-unix-socket.conf"
                    },
                    {
                      "contents": "[Service]\nEnvironment=\"GODEBUG=x509ignoreCN=0,madvdontneed=1\"\n",
                      "name": "10-mco-default-madv.conf"
                    }
                  ],
                  "name": "crio.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Unit]\nConditionPathExists=/enoent\n",
                      "name": "mco-disabled.conf"
                    }
                  ],
                  "name": "docker.socket"
                },
                {
                  "contents": "[Unit]\nDescription=Kubernetes Kubelet\nWants=rpc-statd.service network-online.target crio.service\nAfter=network-online.target crio.service\nAfter=ostree-finalize-staged.service\n\n[Service]\nType=notify\nExecStartPre=/bin/mkdir --parents /etc/kubernetes/manifests\nExecStartPre=/bin/rm -f /var/lib/kubelet/cpu_manager_state\nEnvironmentFile=/etc/os-release\nEnvironmentFile=-/etc/kubernetes/kubelet-workaround\nEnvironmentFile=-/etc/kubernetes/kubelet-env\n\nExecStart=/usr/bin/hyperkube \\\n    kubelet \\\n      --config=/etc/kubernetes/kubelet.conf \\\n      --bootstrap-kubeconfig=/etc/kubernetes/kubeconfig \\\n      --kubeconfig=/var/lib/kubelet/kubeconfig \\\n      --container-runtime=remote \\\n      --container-runtime-endpoint=/var/run/crio/crio.sock \\\n      --runtime-cgroups=/system.slice/crio.service \\\n      --node-labels=node-role.kubernetes.io/worker,node.openshift.io/os_id=${ID} \\\n      --node-ip=${KUBELET_NODE_IP} \\\n      --minimum-container-ttl-duration=6m0s \\\n      --volume-plugin-dir=/etc/kubernetes/kubelet-plugins/volume/exec \\\n      --cloud-provider= \\\n       \\\n      --pod-infra-container-image=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f2cd141d802e4be7d223f16b810522921e8e1ecf020b6b6d6591fcd68617df40 \\\n      --v=${KUBELET_LOG_LEVEL}\n\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n",
                  "dropins": [
                    { "contents": "", "name": "10-mco-default-env.conf" },
                    {
                      "contents": "[Service]\nEnvironment=\"GODEBUG=x509ignoreCN=0,madvdontneed=1\"\n",
                      "name": "10-mco-default-madv.conf"
                    }
                  ],
                  "enabled": true,
                  "name": "kubelet.service"
                },
                {
                  "contents": "[Unit]\nDescription=Machine Config Daemon Firstboot\n# Make sure it runs only on OSTree booted system\nConditionPathExists=/run/ostree-booted\n# Removal of this file signals firstboot completion\nConditionPathExists=/etc/ignition-machine-config-encapsulated.json\nAfter=machine-config-daemon-pull.service\nBefore=crio.service crio-wipe.service\nBefore=kubelet.service\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n# Disable existing repos (if any) so that OS extensions would use embedded RPMs only\nExecStartPre=-/usr/bin/sh -c \"sed -i 's/enabled=1/enabled=0/' /etc/yum.repos.d/*.repo\"\nExecStart=/run/bin/machine-config-daemon firstboot-complete-machineconfig\n[Install]\nWantedBy=multi-user.target\nRequiredBy=crio.service kubelet.service\n",
                  "enabled": true,
                  "name": "machine-config-daemon-firstboot.service"
                },
                {
                  "contents": "[Unit]\nDescription=Machine Config Daemon Pull\n# Make sure it runs only on OSTree booted system\nConditionPathExists=/run/ostree-booted\n# This \"stamp file\" is unlinked when we complete\n# machine-config-daemon-firstboot.service\nConditionPathExists=/etc/ignition-machine-config-encapsulated.json\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n# See https://github.com/coreos/fedora-coreos-tracker/issues/354\nExecStart=/bin/sh -c '/bin/mkdir -p /run/bin && chcon --reference=/usr/bin /run/bin'\nExecStart=/bin/sh -c \"while ! /usr/bin/podman pull --authfile=/var/lib/kubelet/config.json --quiet 'quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa'; do sleep 1; done\"\nExecStart=/bin/sh -c \"/usr/bin/podman run --rm --quiet --net=host --entrypoint=cat 'quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa' /usr/bin/machine-config-daemon > /run/bin/machine-config-daemon.tmp\"\nExecStart=/bin/sh -c '/usr/bin/chmod a+x /run/bin/machine-config-daemon.tmp && mv /run/bin/machine-config-daemon.tmp /run/bin/machine-config-daemon'\n[Install]\nRequiredBy=machine-config-daemon-firstboot.service\n",
                  "enabled": true,
                  "name": "machine-config-daemon-pull.service"
                },
                {
                  "contents": "[Unit]\nBefore=NetworkManager.service\nAfter=systemd-tmpfiles-setup.service\n[Mount]\nWhere=/etc/NetworkManager/system-connections-merged\nWhat=overlay\nType=overlay\nOptions=lowerdir=/etc/NetworkManager/system-connections,upperdir=/run/nm-system-connections,workdir=/run/nm-system-connections-work\n[Install]\nWantedBy=multi-user.target\n",
                  "enabled": true,
                  "name": "etc-NetworkManager-system\\x2dconnections\\x2dmerged.mount"
                },
                {
                  "contents": "[Unit]\nDescription=Ensure the node hostname is valid for the cluster\nBefore=network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nUser=root\n\n# SystemD prevents direct execution of the script in /usr/local/sbin,\n# so it is sourced. See the script for functionality.\nExecStart=/bin/bash -c \"source /usr/local/sbin/set-valid-hostname.sh; wait_localhost; set_valid_hostname `hostname`\"\n\n# Wait up to 5min for the node to get a real hostname.\nTimeoutSec=300\n\n[Install]\nWantedBy=multi-user.target\n# Ensure that network-online.target will not complete until the node has a real hostname.\nRequiredBy=network-online.target\n",
                  "enabled": true,
                  "name": "node-valid-hostname.service"
                },
                {
                  "contents": "[Unit]\nDescription=Writes IP address configuration so that kubelet and crio services select a valid node IP\nWants=network-online.target\nAfter=network-online.target ignition-firstboot-complete.service\nBefore=kubelet.service crio.service\n\n[Service]\n# Need oneshot to delay kubelet\nType=oneshot\n# Would prefer to do Restart=on-failure instead of this bash retry loop, but\n# the version of systemd we have right now doesn't support it. It should be\n# available in systemd v244 and higher.\nExecStart=/bin/bash -c \" \\\n  until \\\n  /usr/bin/podman run --rm \\\n  --authfile /var/lib/kubelet/config.json \\\n  --net=host \\\n  --volume /etc/systemd/system:/etc/systemd/system:z \\\n  quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8a21ea74995438c48d0c1d04e9919668ae33ee80f756632f6718ccb6ac4ac8bd \\\n  node-ip \\\n  set \\\n  --retry-on-failure; \\\n  do \\\n  sleep 5; \\\n  done\"\nExecStart=/bin/systemctl daemon-reload\n\n[Install]\nRequiredBy=kubelet.service\n",
                  "enabled": true,
                  "name": "nodeip-configuration.service"
                },
                { "enabled": true, "name": "openvswitch.service" },
                {
                  "contents": "[Unit]\nDescription=Configures OVS with proper host networking configuration\n# Removal of this file signals firstboot completion\nConditionPathExists=!/etc/ignition-machine-config-encapsulated.json\n# This service is used to move a physical NIC into OVS and reconfigure OVS to use the host IP\nRequires=openvswitch.service\nWants=NetworkManager-wait-online.service\nAfter=NetworkManager-wait-online.service openvswitch.service network.service\nBefore=network-online.target kubelet.service crio.service node-valid-hostname.service\n\n[Service]\n# Need oneshot to delay kubelet\nType=oneshot\nExecStart=/usr/local/bin/configure-ovs.sh OpenShiftSDN\nStandardOutput=journal+console\nStandardError=journal+console\n\n[Install]\nWantedBy=network-online.target\n",
                  "enabled": true,
                  "name": "ovs-configuration.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Service]\nRestart=always\nExecStartPre=-/bin/sh -c '/usr/bin/chown -R :$${OVS_USER_ID##*:} /var/lib/openvswitch'\nExecStartPre=-/bin/sh -c '/usr/bin/chown -R :$${OVS_USER_ID##*:} /etc/openvswitch'\nExecStartPre=-/bin/sh -c '/usr/bin/chown -R :$${OVS_USER_ID##*:} /run/openvswitch'\n",
                      "name": "10-ovs-vswitchd-restart.conf"
                    }
                  ],
                  "name": "ovs-vswitchd.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Service]\nRestart=always\n",
                      "name": "10-ovsdb-restart.conf"
                    }
                  ],
                  "enabled": true,
                  "name": "ovsdb-server.service"
                },
                {
                  "dropins": [
                    { "contents": "", "name": "10-mco-default-env.conf" }
                  ],
                  "name": "pivot.service"
                },
                {
                  "dropins": [
                    {
                      "contents": "[Unit]\nConditionPathExists=/enoent\n",
                      "name": "mco-disabled.conf"
                    }
                  ],
                  "name": "zincati.service"
                }
              ]
            }
          },
          "extensions": [],
          "fips": false,
          "kernelArguments": [],
          "kernelType": "default",
          "osImageURL": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1c91baf8b4498144cfd87383a712639ebe14639c1dfd163c37c423713c935958"
        }
      }
    },
    "machinehealthchecks": {
      "openshift-machine-api": {
        "machine-api-termination-handler.json": {
          "apiVersion": "machine.openshift.io/v1beta1",
          "kind": "MachineHealthCheck",
          "metadata": {
            "annotations": {
              "exclude.release.openshift.io/internal-openshift-hosted": "true",
              "include.release.openshift.io/self-managed-high-availability": "true"
            },
            "creationTimestamp": "2021-07-07T11:27:29Z",
            "generation": 1,
            "labels": { "api": "clsuterapi", "k8s-app": "termination-handler" },
            "name": "machine-api-termination-handler",
            "namespace": "openshift-machine-api",
            "resourceVersion": "8415",
            "selfLink": "/apis/machine.openshift.io/v1beta1/namespaces/openshift-machine-api/machinehealthchecks/machine-api-termination-handler",
            "uid": "b2408d9a-014f-4027-8cb4-20688fbf90da"
          },
          "spec": {
            "maxUnhealthy": "100%",
            "nodeStartupTimeout": "10m",
            "selector": {
              "matchLabels": {
                "machine.openshift.io/interruptible-instance": ""
              }
            },
            "unhealthyConditions": [
              { "status": "True", "timeout": "0s", "type": "Terminating" }
            ]
          }
        }
      }
    },
    "netnamespaces.json": [
      { "name": "default", "egressIPs": null, "netID": 0 },
      { "name": "kube-node-lease", "egressIPs": null, "netID": 14329116 },
      { "name": "kube-public", "egressIPs": null, "netID": 146556 },
      { "name": "kube-system", "egressIPs": null, "netID": 12197669 },
      { "name": "openshift", "egressIPs": null, "netID": 5920059 },
      { "name": "openshift-apiserver", "egressIPs": null, "netID": 10290991 },
      {
        "name": "openshift-apiserver-operator",
        "egressIPs": null,
        "netID": 15789168
      },
      {
        "name": "openshift-authentication",
        "egressIPs": null,
        "netID": 11640194
      },
      {
        "name": "openshift-authentication-operator",
        "egressIPs": null,
        "netID": 12928683
      },
      {
        "name": "openshift-cloud-credential-operator",
        "egressIPs": null,
        "netID": 9063971
      },
      {
        "name": "openshift-cluster-csi-drivers",
        "egressIPs": null,
        "netID": 1800598
      },
      {
        "name": "openshift-cluster-machine-approver",
        "egressIPs": null,
        "netID": 9772690
      },
      {
        "name": "openshift-cluster-node-tuning-operator",
        "egressIPs": null,
        "netID": 13946381
      },
      {
        "name": "openshift-cluster-samples-operator",
        "egressIPs": null,
        "netID": 12618716
      },
      {
        "name": "openshift-cluster-storage-operator",
        "egressIPs": null,
        "netID": 14283740
      },
      {
        "name": "openshift-cluster-version",
        "egressIPs": null,
        "netID": 4121845
      },
      { "name": "openshift-config", "egressIPs": null, "netID": 7125546 },
      {
        "name": "openshift-config-managed",
        "egressIPs": null,
        "netID": 9725884
      },
      {
        "name": "openshift-config-operator",
        "egressIPs": null,
        "netID": 13939580
      },
      { "name": "openshift-console", "egressIPs": null, "netID": 13482456 },
      {
        "name": "openshift-console-operator",
        "egressIPs": null,
        "netID": 1385791
      },
      {
        "name": "openshift-console-user-settings",
        "egressIPs": null,
        "netID": 3855101
      },
      {
        "name": "openshift-controller-manager",
        "egressIPs": null,
        "netID": 3130848
      },
      {
        "name": "openshift-controller-manager-operator",
        "egressIPs": null,
        "netID": 14162311
      },
      { "name": "openshift-dns", "egressIPs": null, "netID": 10730294 },
      {
        "name": "openshift-dns-operator",
        "egressIPs": null,
        "netID": 15905317
      },
      { "name": "openshift-etcd", "egressIPs": null, "netID": 5062241 },
      {
        "name": "openshift-etcd-operator",
        "egressIPs": null,
        "netID": 16294976
      },
      {
        "name": "openshift-host-network",
        "egressIPs": null,
        "netID": 13276767
      },
      {
        "name": "openshift-image-registry",
        "egressIPs": null,
        "netID": 8748734
      },
      { "name": "openshift-infra", "egressIPs": null, "netID": 8123275 },
      { "name": "openshift-ingress", "egressIPs": null, "netID": 5771782 },
      {
        "name": "openshift-ingress-canary",
        "egressIPs": null,
        "netID": 12761486
      },
      {
        "name": "openshift-ingress-operator",
        "egressIPs": null,
        "netID": 16547621
      },
      { "name": "openshift-insights", "egressIPs": null, "netID": 15352144 },
      { "name": "openshift-kni-infra", "egressIPs": null, "netID": 14832803 },
      {
        "name": "openshift-kube-apiserver",
        "egressIPs": null,
        "netID": 14207819
      },
      {
        "name": "openshift-kube-apiserver-operator",
        "egressIPs": null,
        "netID": 10437809
      },
      {
        "name": "openshift-kube-controller-manager",
        "egressIPs": null,
        "netID": 10912579
      },
      {
        "name": "openshift-kube-controller-manager-operator",
        "egressIPs": null,
        "netID": 9861794
      },
      {
        "name": "openshift-kube-scheduler",
        "egressIPs": null,
        "netID": 16001745
      },
      {
        "name": "openshift-kube-scheduler-operator",
        "egressIPs": null,
        "netID": 2548840
      },
      {
        "name": "openshift-kube-storage-version-migrator",
        "egressIPs": null,
        "netID": 9974393
      },
      {
        "name": "openshift-kube-storage-version-migrator-operator",
        "egressIPs": null,
        "netID": 16538657
      },
      {
        "name": "openshift-kubevirt-infra",
        "egressIPs": null,
        "netID": 2818549
      },
      { "name": "openshift-machine-api", "egressIPs": null, "netID": 16262607 },
      {
        "name": "openshift-machine-config-operator",
        "egressIPs": null,
        "netID": 3626746
      },
      { "name": "openshift-marketplace", "egressIPs": null, "netID": 12589253 },
      { "name": "openshift-monitoring", "egressIPs": null, "netID": 60041 },
      { "name": "openshift-multus", "egressIPs": null, "netID": 12969 },
      {
        "name": "openshift-network-diagnostics",
        "egressIPs": null,
        "netID": 4478336
      },
      {
        "name": "openshift-network-operator",
        "egressIPs": null,
        "netID": 2458417
      },
      { "name": "openshift-node", "egressIPs": null, "netID": 5240835 },
      {
        "name": "openshift-oauth-apiserver",
        "egressIPs": null,
        "netID": 12564056
      },
      {
        "name": "openshift-openstack-infra",
        "egressIPs": null,
        "netID": 3135233
      },
      {
        "name": "openshift-operator-lifecycle-manager",
        "egressIPs": null,
        "netID": 15603609
      },
      { "name": "openshift-operators", "egressIPs": null, "netID": 4087566 },
      { "name": "openshift-ovirt-infra", "egressIPs": null, "netID": 281144 },
      { "name": "openshift-sdn", "egressIPs": null, "netID": 4074120 },
      { "name": "openshift-service-ca", "egressIPs": null, "netID": 7397877 },
      {
        "name": "openshift-service-ca-operator",
        "egressIPs": null,
        "netID": 12872035
      },
      {
        "name": "openshift-user-workload-monitoring",
        "egressIPs": null,
        "netID": 1093487
      },
      { "name": "openshift-vsphere-infra", "egressIPs": null, "netID": 5879322 }
    ],
    "network.json": {
      "metadata": {
        "name": "cluster",
        "selfLink": "/apis/config.openshift.io/v1/networks/cluster",
        "uid": "b8d891f1-7e1f-42c8-abba-d2d314a13e01",
        "resourceVersion": "3955",
        "generation": 2,
        "creationTimestamp": "2021-07-07T11:02:52Z"
      },
      "spec": {
        "clusterNetwork": [{ "cidr": "10.128.0.0/14", "hostPrefix": 23 }],
        "serviceNetwork": ["172.30.0.0/16"],
        "networkType": "OpenShiftSDN",
        "externalIP": { "policy": {} }
      },
      "status": {
        "clusterNetwork": [{ "cidr": "10.128.0.0/14", "hostPrefix": 23 }],
        "serviceNetwork": ["172.30.0.0/16"],
        "networkType": "OpenShiftSDN",
        "clusterNetworkMTU": 1450
      }
    },
    "node": {
      "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.json": {
        "metadata": {
          "name": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
          "selfLink": "/api/v1/nodes/master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
          "uid": "7b9db4ae-6ec2-45b7-ba44-dd0df8e32466",
          "resourceVersion": "1917241",
          "creationTimestamp": "2021-07-07T11:23:18Z",
          "labels": {
            "beta.kubernetes.io/arch": "amd64",
            "beta.kubernetes.io/os": "linux",
            "kubernetes.io/arch": "amd64",
            "kubernetes.io/hostname": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "kubernetes.io/os": "linux",
            "node-role.kubernetes.io/master": "",
            "node.openshift.io/os_id": "rhcos"
          },
          "annotations": {
            "machineconfiguration.openshift.io/currentConfig": "rendered-master-025110333ea44423ccb1052723956671",
            "machineconfiguration.openshift.io/desiredConfig": "rendered-master-025110333ea44423ccb1052723956671",
            "machineconfiguration.openshift.io/reason": "",
            "machineconfiguration.openshift.io/state": "Done",
            "volumes.kubernetes.io/controller-managed-attach-detach": "true"
          }
        },
        "spec": {
          "taints": [
            { "key": "node-role.kubernetes.io/master", "effect": "NoSchedule" }
          ]
        },
        "status": {
          "capacity": {
            "cpu": "8",
            "ephemeral-storage": "41407468Ki",
            "hugepages-1Gi": "0",
            "hugepages-2Mi": "0",
            "memory": "16409932Ki",
            "pods": "250"
          },
          "allocatable": {
            "cpu": "7500m",
            "ephemeral-storage": "37087380622",
            "hugepages-1Gi": "0",
            "hugepages-2Mi": "0",
            "memory": "15258956Ki",
            "pods": "250"
          },
          "conditions": [
            {
              "type": "MemoryPressure",
              "status": "False",
              "lastHeartbeatTime": "2021-07-13T07:18:14Z",
              "lastTransitionTime": "2021-07-07T11:23:18Z",
              "reason": "KubeletHasSufficientMemory",
              "message": "kubelet has sufficient memory available"
            },
            {
              "type": "DiskPressure",
              "status": "False",
              "lastHeartbeatTime": "2021-07-13T07:18:14Z",
              "lastTransitionTime": "2021-07-07T11:23:18Z",
              "reason": "KubeletHasNoDiskPressure",
              "message": "kubelet has no disk pressure"
            },
            {
              "type": "PIDPressure",
              "status": "False",
              "lastHeartbeatTime": "2021-07-13T07:18:14Z",
              "lastTransitionTime": "2021-07-07T11:23:18Z",
              "reason": "KubeletHasSufficientPID",
              "message": "kubelet has sufficient PID available"
            },
            {
              "type": "Ready",
              "status": "True",
              "lastHeartbeatTime": "2021-07-13T07:18:14Z",
              "lastTransitionTime": "2021-07-07T11:26:08Z",
              "reason": "KubeletReady",
              "message": "kubelet is posting ready status"
            }
          ],
          "addresses": [
            { "type": "InternalIP", "address": "10.0.88.27" },
            {
              "type": "Hostname",
              "address": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com"
            }
          ],
          "daemonEndpoints": { "kubeletEndpoint": { "Port": 10250 } },
          "nodeInfo": {
            "machineID": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "systemUUID": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "bootID": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "kernelVersion": "4.18.0-240.22.1.el8_3.x86_64",
            "osImage": "Red Hat Enterprise Linux CoreOS 47.83.202106032343-0 (Ootpa)",
            "containerRuntimeVersion": "cri-o://1.20.3-2.rhaos4.7.gitb53fa9d.el8",
            "kubeletVersion": "v1.20.0+2817867",
            "kubeProxyVersion": "v1.20.0+2817867",
            "operatingSystem": "linux",
            "architecture": "amd64"
          }
        }
      },
      "worker-0.imeixner20210707.lab.upshift.rdu2.redhat.com.json": {
        "metadata": {
          "name": "worker-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
          "selfLink": "/api/v1/nodes/worker-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
          "uid": "c60afb88-bd0b-464d-af1e-e1465bf90f84",
          "resourceVersion": "1916880",
          "creationTimestamp": "2021-07-07T11:32:20Z",
          "labels": {
            "beta.kubernetes.io/arch": "amd64",
            "beta.kubernetes.io/os": "linux",
            "kubernetes.io/arch": "amd64",
            "kubernetes.io/hostname": "worker-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "kubernetes.io/os": "linux",
            "node-role.kubernetes.io/worker": "",
            "node.openshift.io/os_id": "rhcos"
          },
          "annotations": {
            "machineconfiguration.openshift.io/currentConfig": "rendered-worker-39c9df4a2c026c3149a02abe6f88cfc8",
            "machineconfiguration.openshift.io/desiredConfig": "rendered-worker-39c9df4a2c026c3149a02abe6f88cfc8",
            "machineconfiguration.openshift.io/reason": "",
            "machineconfiguration.openshift.io/state": "Done",
            "volumes.kubernetes.io/controller-managed-attach-detach": "true"
          }
        },
        "spec": {},
        "status": {
          "capacity": {
            "cpu": "4",
            "ephemeral-storage": "41407468Ki",
            "hugepages-1Gi": "0",
            "hugepages-2Mi": "0",
            "memory": "8153256Ki",
            "pods": "250"
          },
          "allocatable": {
            "cpu": "3500m",
            "ephemeral-storage": "37087380622",
            "hugepages-1Gi": "0",
            "hugepages-2Mi": "0",
            "memory": "7002280Ki",
            "pods": "250"
          },
          "conditions": [
            {
              "type": "MemoryPressure",
              "status": "False",
              "lastHeartbeatTime": "2021-07-13T07:16:44Z",
              "lastTransitionTime": "2021-07-12T21:20:44Z",
              "reason": "KubeletHasSufficientMemory",
              "message": "kubelet has sufficient memory available"
            },
            {
              "type": "DiskPressure",
              "status": "False",
              "lastHeartbeatTime": "2021-07-13T07:16:44Z",
              "lastTransitionTime": "2021-07-12T21:20:44Z",
              "reason": "KubeletHasNoDiskPressure",
              "message": "kubelet has no disk pressure"
            },
            {
              "type": "PIDPressure",
              "status": "False",
              "lastHeartbeatTime": "2021-07-13T07:16:44Z",
              "lastTransitionTime": "2021-07-12T21:20:44Z",
              "reason": "KubeletHasSufficientPID",
              "message": "kubelet has sufficient PID available"
            },
            {
              "type": "Ready",
              "status": "True",
              "lastHeartbeatTime": "2021-07-13T07:16:44Z",
              "lastTransitionTime": "2021-07-12T21:20:44Z",
              "reason": "KubeletReady",
              "message": "kubelet is posting ready status"
            }
          ],
          "addresses": [
            { "type": "InternalIP", "address": "10.0.89.93" },
            {
              "type": "Hostname",
              "address": "worker-0.imeixner20210707.lab.upshift.rdu2.redhat.com"
            }
          ],
          "daemonEndpoints": { "kubeletEndpoint": { "Port": 10250 } },
          "nodeInfo": {
            "machineID": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "systemUUID": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "bootID": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "kernelVersion": "4.18.0-240.22.1.el8_3.x86_64",
            "osImage": "Red Hat Enterprise Linux CoreOS 47.83.202106032343-0 (Ootpa)",
            "containerRuntimeVersion": "cri-o://1.20.3-2.rhaos4.7.gitb53fa9d.el8",
            "kubeletVersion": "v1.20.0+2817867",
            "kubeProxyVersion": "v1.20.0+2817867",
            "operatingSystem": "linux",
            "architecture": "amd64"
          }
        }
      }
    },
    "oauth.json": {
      "metadata": {
        "name": "cluster",
        "selfLink": "/apis/config.openshift.io/v1/oauths/cluster",
        "uid": "0f9221ab-aac1-4417-aa3e-08983dc3a900",
        "resourceVersion": "1954",
        "generation": 1,
        "creationTimestamp": "2021-07-07T11:03:36Z",
        "annotations": {
          "include.release.openshift.io/self-managed-high-availability": "true",
          "include.release.openshift.io/single-node-developer": "true",
          "release.openshift.io/create-only": "true"
        }
      },
      "spec": {
        "tokenConfig": {},
        "templates": {
          "login": { "name": "" },
          "providerSelection": { "name": "" },
          "error": { "name": "" }
        }
      },
      "status": {}
    },
    "olm_operators.json": [
      {
        "name": "eap.openshift-operators",
        "displayName": "JBoss EAP",
        "version": "v2.1.1",
        "csv_conditions": [
          {
            "lastTransitionTime": "2021-03-02T08:52:24Z",
            "lastUpdateTime": "2021-03-02T08:52:24Z",
            "message": "requirements not yet checked",
            "phase": "Pending",
            "reason": "RequirementsUnknown"
          },
          {
            "lastTransitionTime": "2021-03-02T08:52:24Z",
            "lastUpdateTime": "2021-03-02T08:52:24Z",
            "message": "all requirements found, attempting install",
            "phase": "InstallReady",
            "reason": "AllRequirementsMet"
          },
          {
            "lastTransitionTime": "2021-03-02T08:52:24Z",
            "lastUpdateTime": "2021-03-02T08:52:24Z",
            "message": "waiting for install components to report healthy",
            "phase": "Installing",
            "reason": "InstallSucceeded"
          },
          {
            "lastTransitionTime": "2021-03-02T08:52:24Z",
            "lastUpdateTime": "2021-03-02T08:52:25Z",
            "message": "installing: waiting for deployment eap-operator to become ready: Waiting for rollout to finish: 0 of 1 updated replicas are available...\n",
            "phase": "Installing",
            "reason": "InstallWaiting"
          },
          {
            "lastTransitionTime": "2021-03-02T08:52:46Z",
            "lastUpdateTime": "2021-03-02T08:52:46Z",
            "message": "install strategy completed with no errors",
            "phase": "Succeeded",
            "reason": "InstallSucceeded"
          }
        ]
      },
      {
        "name": "elasticsearch-operator.openshift-operators-redhat",
        "displayName": "OpenShift Elasticsearch Operator",
        "version": "4.6.0-202102200141.p0",
        "csv_conditions": [
          {
            "lastTransitionTime": "2021-03-02T06:38:14Z",
            "lastUpdateTime": "2021-03-02T06:38:14Z",
            "message": "requirements not yet checked",
            "phase": "Pending",
            "reason": "RequirementsUnknown"
          },
          {
            "lastTransitionTime": "2021-03-02T06:38:15Z",
            "lastUpdateTime": "2021-03-02T06:38:15Z",
            "message": "all requirements found, attempting install",
            "phase": "InstallReady",
            "reason": "AllRequirementsMet"
          },
          {
            "lastTransitionTime": "2021-03-02T06:38:16Z",
            "lastUpdateTime": "2021-03-02T06:38:16Z",
            "message": "waiting for install components to report healthy",
            "phase": "Installing",
            "reason": "InstallSucceeded"
          },
          {
            "lastTransitionTime": "2021-03-02T06:38:16Z",
            "lastUpdateTime": "2021-03-02T06:38:17Z",
            "message": "installing: waiting for deployment elasticsearch-operator to become ready: Waiting for rollout to finish: 1 old replicas are pending termination...\n",
            "phase": "Installing",
            "reason": "InstallWaiting"
          },
          {
            "lastTransitionTime": "2021-03-02T06:38:26Z",
            "lastUpdateTime": "2021-03-02T06:38:26Z",
            "message": "install strategy completed with no errors",
            "phase": "Succeeded",
            "reason": "InstallSucceeded"
          }
        ]
      },
      {
        "name": "kiali-ossm.openshift-operators",
        "displayName": "Kiali Operator",
        "version": "v1.24.5",
        "csv_conditions": [
          {
            "lastTransitionTime": "2021-03-02T08:52:09Z",
            "lastUpdateTime": "2021-03-02T08:52:09Z",
            "message": "requirements not yet checked",
            "phase": "Pending",
            "reason": "RequirementsUnknown"
          },
          {
            "lastTransitionTime": "2021-03-02T08:52:09Z",
            "lastUpdateTime": "2021-03-02T08:52:09Z",
            "message": "all requirements found, attempting install",
            "phase": "InstallReady",
            "reason": "AllRequirementsMet"
          },
          {
            "lastTransitionTime": "2021-03-02T08:52:09Z",
            "lastUpdateTime": "2021-03-02T08:52:09Z",
            "message": "waiting for install components to report healthy",
            "phase": "Installing",
            "reason": "InstallSucceeded"
          },
          {
            "lastTransitionTime": "2021-03-02T08:52:09Z",
            "lastUpdateTime": "2021-03-02T08:52:10Z",
            "message": "installing: waiting for deployment kiali-operator to become ready: Waiting for rollout to finish: 0 of 1 updated replicas are available...\n",
            "phase": "Installing",
            "reason": "InstallWaiting"
          },
          {
            "lastTransitionTime": "2021-03-02T08:52:29Z",
            "lastUpdateTime": "2021-03-02T08:52:29Z",
            "message": "install strategy completed with no errors",
            "phase": "Succeeded",
            "reason": "InstallSucceeded"
          }
        ]
      },
      {
        "name": "postgresql-operator-dev4devs-com.psql-test",
        "displayName": "PostgreSQL Operator by Dev4Ddevs.com",
        "version": "v0.1.1",
        "csv_conditions": [
          {
            "lastTransitionTime": "2021-03-02T08:53:34Z",
            "lastUpdateTime": "2021-03-02T08:53:34Z",
            "message": "requirements not yet checked",
            "phase": "Pending",
            "reason": "RequirementsUnknown"
          },
          {
            "lastTransitionTime": "2021-03-02T08:53:35Z",
            "lastUpdateTime": "2021-03-02T08:53:35Z",
            "message": "all requirements found, attempting install",
            "phase": "InstallReady",
            "reason": "AllRequirementsMet"
          },
          {
            "lastTransitionTime": "2021-03-02T08:53:35Z",
            "lastUpdateTime": "2021-03-02T08:53:35Z",
            "message": "waiting for install components to report healthy",
            "phase": "Installing",
            "reason": "InstallSucceeded"
          },
          {
            "lastTransitionTime": "2021-03-02T08:53:35Z",
            "lastUpdateTime": "2021-03-02T08:53:36Z",
            "message": "installing: waiting for deployment postgresql-operator to become ready: Waiting for rollout to finish: 0 of 1 updated replicas are available...\n",
            "phase": "Installing",
            "reason": "InstallWaiting"
          },
          {
            "lastTransitionTime": "2021-03-02T08:53:47Z",
            "lastUpdateTime": "2021-03-02T08:53:47Z",
            "message": "install strategy completed with no errors",
            "phase": "Succeeded",
            "reason": "InstallSucceeded"
          }
        ]
      },
      {
        "name": "radanalytics-spark.openshift-operators",
        "displayName": "Apache Spark Operator",
        "version": "v1.1.0",
        "csv_conditions": [
          {
            "lastTransitionTime": "2021-03-02T08:55:36Z",
            "lastUpdateTime": "2021-03-02T08:55:36Z",
            "message": "requirements not yet checked",
            "phase": "Pending",
            "reason": "RequirementsUnknown"
          },
          {
            "lastTransitionTime": "2021-03-02T08:55:37Z",
            "lastUpdateTime": "2021-03-02T08:55:37Z",
            "message": "all requirements found, attempting install",
            "phase": "InstallReady",
            "reason": "AllRequirementsMet"
          },
          {
            "lastTransitionTime": "2021-03-02T08:55:38Z",
            "lastUpdateTime": "2021-03-02T08:55:38Z",
            "message": "waiting for install components to report healthy",
            "phase": "Installing",
            "reason": "InstallSucceeded"
          },
          {
            "lastTransitionTime": "2021-03-02T08:55:38Z",
            "lastUpdateTime": "2021-03-02T08:55:38Z",
            "message": "installing: waiting for deployment spark-operator to become ready: Waiting for rollout to finish: 0 of 1 updated replicas are available...\n",
            "phase": "Installing",
            "reason": "InstallWaiting"
          },
          {
            "lastTransitionTime": "2021-03-02T08:55:51Z",
            "lastUpdateTime": "2021-03-02T08:55:51Z",
            "message": "install strategy completed with no errors",
            "phase": "Succeeded",
            "reason": "InstallSucceeded"
          }
        ]
      }
    ],
    "pdbs": {
      "openshift-machine-config-operator": {
        "etcd-quorum-guard.json": {
          "kind": "PodDisruptionBudget",
          "apiVersion": "policy/v1beta1",
          "metadata": {
            "name": "etcd-quorum-guard",
            "namespace": "openshift-machine-config-operator",
            "selfLink": "/apis/policy/v1beta1/namespaces/openshift-machine-config-operator/poddisruptionbudgets/etcd-quorum-guard",
            "uid": "f7f51516-48f5-4893-867e-c786e2e95a4b",
            "resourceVersion": "7328",
            "generation": 1,
            "creationTimestamp": "2020-10-14T06:53:45Z",
            "annotations": {
              "exclude.release.openshift.io/internal-openshift-hosted": "true"
            }
          },
          "spec": {
            "selector": { "matchLabels": { "k8s-app": "etcd-quorum-guard" } },
            "maxUnavailable": 1
          },
          "status": {
            "observedGeneration": 1,
            "disruptionsAllowed": 1,
            "currentHealthy": 3,
            "desiredHealthy": 2,
            "expectedPods": 3
          }
        }
      }
    },
    "persistentvolumes": {
      "task-pv-volume.json": {
        "metadata": {
          "name": "task-pv-volume",
          "selfLink": "/api/v1/persistentvolumes/task-pv-volume",
          "uid": "e34bbfc2-1541-444a-b4b5-70d52d2bca50",
          "resourceVersion": "345113",
          "creationTimestamp": "2021-04-23T07:25:31Z",
          "labels": { "type": "local" },
          "annotations": { "pv.kubernetes.io/bound-by-controller": "yes" },
          "finalizers": ["kubernetes.io/pv-protection"],
          "managedFields": [
            {
              "manager": "oc",
              "operation": "Update",
              "apiVersion": "v1",
              "time": "2021-04-23T07:25:31Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:metadata": { "f:labels": { ".": {}, "f:type": {} } },
                "f:spec": {
                  "f:accessModes": {},
                  "f:capacity": { ".": {}, "f:storage": {} },
                  "f:hostPath": { ".": {}, "f:path": {}, "f:type": {} },
                  "f:persistentVolumeReclaimPolicy": {},
                  "f:storageClassName": {},
                  "f:volumeMode": {}
                }
              }
            },
            {
              "manager": "kube-controller-manager",
              "operation": "Update",
              "apiVersion": "v1",
              "time": "2021-04-23T07:43:48Z",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:metadata": {
                  "f:annotations": {
                    ".": {},
                    "f:pv.kubernetes.io/bound-by-controller": {}
                  }
                },
                "f:spec": {
                  "f:claimRef": {
                    ".": {},
                    "f:apiVersion": {},
                    "f:kind": {},
                    "f:name": {},
                    "f:namespace": {},
                    "f:resourceVersion": {},
                    "f:uid": {}
                  }
                },
                "f:status": { "f:phase": {} }
              }
            }
          ]
        },
        "spec": {
          "capacity": { "storage": "50Mi" },
          "hostPath": { "path": "/tmp/data", "type": "" },
          "accessModes": ["ReadWriteOnce"],
          "claimRef": {
            "kind": "PersistentVolumeClaim",
            "namespace": "openshift-sdn",
            "name": "task-pvc-volume",
            "uid": "70d530a3-cde6-44a4-b7a9-b0eeb6a9a895",
            "apiVersion": "v1",
            "resourceVersion": "345110"
          },
          "persistentVolumeReclaimPolicy": "Retain",
          "storageClassName": "manual",
          "volumeMode": "Filesystem"
        },
        "status": { "phase": "Bound" }
      }
    },
    "pod": {
      "openshift-apiserver-operator": {
        "logs": { "openshift-apiserver-operator-6ddb679b87-4kn55": {} },
        "openshift-apiserver-operator-57d7d6cb7c-r94lw.json": {
          "metadata": {
            "name": "openshift-apiserver-operator-57d7d6cb7c-r94lw",
            "generateName": "openshift-apiserver-operator-57d7d6cb7c-",
            "namespace": "openshift-apiserver-operator",
            "selfLink": "/api/v1/namespaces/openshift-apiserver-operator/pods/openshift-apiserver-operator-57d7d6cb7c-r94lw",
            "uid": "2bc88ac2-18a1-4d83-9bfb-282038475db2",
            "resourceVersion": "339759",
            "creationTimestamp": "2021-07-07T11:03:19Z",
            "labels": {
              "app": "openshift-apiserver-operator",
              "pod-template-hash": "57d7d6cb7c"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.14\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.14\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "anyuid"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "openshift-apiserver-operator-57d7d6cb7c",
                "uid": "e40d309d-7b98-41f5-a441-b6e711ae29f7",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "serving-cert",
                "secret": {
                  "secretName": "openshift-apiserver-operator-serving-cert",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "config",
                "configMap": {
                  "name": "openshift-apiserver-operator-config",
                  "defaultMode": 420
                }
              },
              {
                "name": "openshift-apiserver-operator-token-42jxl",
                "secret": {
                  "secretName": "openshift-apiserver-operator-token-42jxl",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "openshift-apiserver-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c8b313300e021ae2b4729f01f121d9a497c3127b1a433555ce962874cc27feef",
                "command": ["cluster-openshift-apiserver-operator", "operator"],
                "args": ["--config=/var/run/configmaps/config/config.yaml"],
                "ports": [
                  {
                    "name": "metrics",
                    "containerPort": 8443,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f4431f91f1c5bdbee3dab1784751a8c5e9fb52ec823fac43e2a6233fb5730d51"
                  },
                  {
                    "name": "OPERATOR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c8b313300e021ae2b4729f01f121d9a497c3127b1a433555ce962874cc27feef"
                  },
                  { "name": "OPERATOR_IMAGE_VERSION", "value": "4.7.16" },
                  { "name": "OPERAND_IMAGE_VERSION", "value": "4.7.16" },
                  {
                    "name": "KUBE_APISERVER_OPERATOR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:216036695cfba60c95e392ac8d439bd2f1e519d9cfa32f4bfa691e8796bc5e17"
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/var/run/configmaps/config"
                  },
                  {
                    "name": "serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "openshift-apiserver-operator-token-42jxl",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "capabilities": { "drop": ["MKNOD"] } }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "openshift-apiserver-operator",
            "serviceAccount": "openshift-apiserver-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": { "seLinuxOptions": { "level": "s0:c15,c10" } },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:19Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:19Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.14",
            "podIPs": [{ "ip": "10.128.0.14" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "openshift-apiserver-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:19Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc0010dcc00)\n\t/go/src/github.com/openshift/cluster-openshift-apiserver-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\t/go/src/github.com/openshift/cluster-openshift-apiserver-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:58 +0x135\n\ngoroutine 401 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0010dcd20)\n\t/go/src/github.com/openshift/cluster-openshift-apiserver-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\t/go/src/github.com/openshift/cluster-openshift-apiserver-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 407 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000f6fa40)\n\t/go/src/github.com/openshift/cluster-openshift-apiserver-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\t/go/src/github.com/openshift/cluster-openshift-apiserver-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:58 +0x135\n\ngoroutine 408 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000f6fb60)\n\t/go/src/github.com/openshift/cluster-openshift-apiserver-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\t/go/src/github.com/openshift/cluster-openshift-apiserver-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 409 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000f6fbc0)\n\t/go/src/github.com/openshift/cluster-openshift-apiserver-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\t/go/src/github.com/openshift/cluster-openshift-apiserver-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:58 +0x135\n",
                    "startedAt": "2021-07-08T10:59:32Z",
                    "finishedAt": "2021-07-08T11:00:03Z",
                    "containerID": "cri-o://f3af7eb572edb91e3307f4b217f80153059c564352ecc031daf37c3026a421d1"
                  }
                },
                "ready": true,
                "restartCount": 10,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c8b313300e021ae2b4729f01f121d9a497c3127b1a433555ce962874cc27feef",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c8b313300e021ae2b4729f01f121d9a497c3127b1a433555ce962874cc27feef",
                "containerID": "cri-o://ab03aa5ad5bd120b27e02c1156a909914bda6c39e5b9cb5f43f888e9497fc5bc",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-authentication": {
        "logs": { "oauth-openshift-6c98668d5b-ftt5n": {} }
      },
      "openshift-authentication-operator": {
        "authentication-operator-6d65456dc7-9d2qx.json": {
          "metadata": {
            "name": "authentication-operator-6d65456dc7-9d2qx",
            "generateName": "authentication-operator-6d65456dc7-",
            "namespace": "openshift-authentication-operator",
            "selfLink": "/api/v1/namespaces/openshift-authentication-operator/pods/authentication-operator-6d65456dc7-9d2qx",
            "uid": "9f988334-54c4-4297-b70d-5c46ccd04cc4",
            "resourceVersion": "339768",
            "creationTimestamp": "2021-07-07T11:03:22Z",
            "labels": {
              "app": "authentication-operator",
              "pod-template-hash": "6d65456dc7"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.5\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.5\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "anyuid"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "authentication-operator-6d65456dc7",
                "uid": "f304922c-de67-45f8-bc86-c1802c75f49f",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "config",
                "configMap": {
                  "name": "authentication-operator-config",
                  "defaultMode": 440
                }
              },
              {
                "name": "trusted-ca-bundle",
                "configMap": {
                  "name": "trusted-ca-bundle",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "serving-cert",
                "secret": {
                  "secretName": "serving-cert",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "service-ca-bundle",
                "configMap": {
                  "name": "service-ca-bundle",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "authentication-operator-token-9qq5j",
                "secret": {
                  "secretName": "authentication-operator-token-9qq5j",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "authentication-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b5e62dd6be4bab839191829af08b76efe2e92aff12f1670cf97ae8e1813acd8b",
                "command": ["/bin/bash", "-ec"],
                "args": [
                  "if [ -s /var/run/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then\n    echo \"Copying system trust bundle\"\n    cp -f /var/run/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem\nfi\nexec authentication-operator operator --config=/var/run/configmaps/config/operator-config.yaml --v=2 --terminate-on-files=/var/run/configmaps/trusted-ca-bundle/ca-bundle.crt\n"
                ],
                "env": [
                  {
                    "name": "IMAGE_OAUTH_SERVER",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e64890e4c5c66107fc522f8789d39f9b601533d7a665a4edd6cec31174e19bdf"
                  },
                  {
                    "name": "IMAGE_OAUTH_APISERVER",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bf73093ae0c7497d54da40d5acc6aeba596f1190fe2315854d4654e3a868335c"
                  },
                  { "name": "OPERATOR_IMAGE_VERSION", "value": "4.7.16" },
                  {
                    "name": "OPERAND_OAUTH_SERVER_IMAGE_VERSION",
                    "value": "4.7.16_openshift"
                  },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/var/run/configmaps/config"
                  },
                  {
                    "name": "serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "trusted-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/var/run/configmaps/trusted-ca-bundle"
                  },
                  {
                    "name": "service-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/var/run/configmaps/service-ca-bundle"
                  },
                  {
                    "name": "authentication-operator-token-9qq5j",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "healthz",
                    "port": 8443,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 30,
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": { "drop": ["MKNOD"] },
                  "readOnlyRootFilesystem": false
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "authentication-operator",
            "serviceAccount": "authentication-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": { "seLinuxOptions": { "level": "s0:c14,c4" } },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:22Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:22Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.5",
            "podIPs": [{ "ip": "10.128.0.5" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "authentication-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:22Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": " 385 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0007ff560)\n\t/go/src/github.com/openshift/cluster-authentication-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\t/go/src/github.com/openshift/cluster-authentication-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 402 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc0007ff5c0)\n\t/go/src/github.com/openshift/cluster-authentication-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\t/go/src/github.com/openshift/cluster-authentication-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:58 +0x135\n\ngoroutine 403 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0007ff6e0)\n\t/go/src/github.com/openshift/cluster-authentication-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\t/go/src/github.com/openshift/cluster-authentication-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 404 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc0007ff740)\n\t/go/src/github.com/openshift/cluster-authentication-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\t/go/src/github.com/openshift/cluster-authentication-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:58 +0x135\n\ngoroutine 405 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0007ff860)\n\t/go/src/github.com/openshift/cluster-authentication-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\t/go/src/github.com/openshift/cluster-authentication-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:68 +0x185\n",
                    "startedAt": "2021-07-08T10:59:30Z",
                    "finishedAt": "2021-07-08T11:00:01Z",
                    "containerID": "cri-o://131a62520b2f498ad1230134a2182e25ecf03169c9838b67c71045a6b8c5f849"
                  }
                },
                "ready": true,
                "restartCount": 12,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b5e62dd6be4bab839191829af08b76efe2e92aff12f1670cf97ae8e1813acd8b",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b5e62dd6be4bab839191829af08b76efe2e92aff12f1670cf97ae8e1813acd8b",
                "containerID": "cri-o://f98574a291a1f02ba637fdd5c1d3f6d7c313889f3feef1c0bab7676ee595f834",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-cluster-storage-operator": {
        "cluster-storage-operator-6974bfb5c6-tppp7.json": {
          "metadata": {
            "name": "cluster-storage-operator-6974bfb5c6-tppp7",
            "generateName": "cluster-storage-operator-6974bfb5c6-",
            "namespace": "openshift-cluster-storage-operator",
            "selfLink": "/api/v1/namespaces/openshift-cluster-storage-operator/pods/cluster-storage-operator-6974bfb5c6-tppp7",
            "uid": "ec110705-59e4-4302-b30c-63c281f9f230",
            "resourceVersion": "339751",
            "creationTimestamp": "2021-07-07T11:03:40Z",
            "labels": {
              "name": "cluster-storage-operator",
              "pod-template-hash": "6974bfb5c6"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.8\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.8\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "anyuid"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "cluster-storage-operator-6974bfb5c6",
                "uid": "84400df9-7149-4b65-afdc-fb8471c6d897",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "cluster-storage-operator-serving-cert",
                "secret": {
                  "secretName": "cluster-storage-operator-serving-cert",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "cluster-storage-operator-token-qkxs6",
                "secret": {
                  "secretName": "cluster-storage-operator-token-qkxs6",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "cluster-storage-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7dc3fae0713765e88ee02d522063ba2a424cac97086104915fe468aa570ff76c",
                "command": ["cluster-storage-operator", "start"],
                "ports": [
                  {
                    "name": "metrics",
                    "containerPort": 8443,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  { "name": "OPERATOR_IMAGE_VERSION", "value": "4.7.16" },
                  { "name": "OPERAND_IMAGE_VERSION", "value": "4.7.16" },
                  {
                    "name": "AWS_EBS_DRIVER_OPERATOR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:73da253379dc2aee5568c514c2d4903c427573eb12115e3f7ffda2082554295d"
                  },
                  {
                    "name": "AWS_EBS_DRIVER_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:548f9ad022e90dddd03565542232c448e5213723f6ea7ff1ea8f09f6db905ffd"
                  },
                  {
                    "name": "GCP_PD_DRIVER_OPERATOR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:10a75e47deb29e1619e2ceeeda8608aff95564dbf69143957cfe756b121e29bf"
                  },
                  {
                    "name": "GCP_PD_DRIVER_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1f5598e17b38847e2707493bf8d7cce1e93e36cfa0c33093a915e690609298e1"
                  },
                  {
                    "name": "OPENSTACK_CINDER_DRIVER_OPERATOR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:736bdb0eb5c7a3ede3c6e4b043471bcdb6de5e6ba7f608946228ae617e18150d"
                  },
                  {
                    "name": "OPENSTACK_CINDER_DRIVER_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:13c0a3c18f854a922567519c2f79a9a7e42460bac858671b5881bce839f7c393"
                  },
                  {
                    "name": "OVIRT_DRIVER_OPERATOR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:82259f3ce06abb5f086b8e8febd367f0281c9e75a4344d5a473cfdd508d4cbd7"
                  },
                  {
                    "name": "OVIRT_DRIVER_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c4d3479f8070393d00fad901fc9517bbd7b5ba444e7b38d50a596660f79239ae"
                  },
                  {
                    "name": "MANILA_DRIVER_OPERATOR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:09e8322ece1c45b8504acd5befc4308797e27d2218238b6b9996473e474b7953"
                  },
                  {
                    "name": "MANILA_DRIVER_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:feae8afdc2b394011193d1e30e8c0804abc46b86a3e728ad09b37ad47319d3f1"
                  },
                  {
                    "name": "MANILA_NFS_DRIVER_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:51a1abb252cb59e849f58ce935445f95f388e31d1eafdf4720796d6c0885ca73"
                  },
                  {
                    "name": "PROVISIONER_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:395a5a4aa4cfe3a0093d2225ce2e67acdcec0fd894e4b61e30a750f22931448d"
                  },
                  {
                    "name": "ATTACHER_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:53b0f48eeecaa3ff1e211a2a413cd49266b7be85a5aa3a0431ab72d32e3a4e5c"
                  },
                  {
                    "name": "RESIZER_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ba217e7e51f0748b54f477486263ff4983b0029635fd1f7ccc67160a09f81608"
                  },
                  {
                    "name": "SNAPSHOTTER_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bba872052e42fe0d6cbb2eea6541bf57f035575cbc7d838a3260b8582b8fe572"
                  },
                  {
                    "name": "NODE_DRIVER_REGISTRAR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:91cfe63acc12c91c3053ba7cc12d72cce404d33aab4afcfac285311f5ddfc7fe"
                  },
                  {
                    "name": "LIVENESS_PROBE_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8e52a6b31f9f3834d709dbca3614c2110b8ebb4af382c76b7056921221c87600"
                  },
                  {
                    "name": "VSPHERE_PROBLEM_DETECTOR_OPERATOR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ee72eabe22baf7cdc4dc0898944cfaed619cc3eb79246c79a839804363b590aa"
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "20Mi" } },
                "volumeMounts": [
                  {
                    "name": "cluster-storage-operator-serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "cluster-storage-operator-token-qkxs6",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "capabilities": { "drop": ["MKNOD"] } }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "cluster-storage-operator",
            "serviceAccount": "cluster-storage-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {
              "seLinuxOptions": { "level": "s0:c13,c2" },
              "runAsUser": 10400,
              "runAsGroup": 10400,
              "fsGroup": 10400
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:17Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:17Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.8",
            "podIPs": [{ "ip": "10.128.0.8" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "cluster-storage-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:17Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "31 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v12.0.0+incompatible/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 390 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000a6fb00)\n\tk8s.io/client-go@v12.0.0+incompatible/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v12.0.0+incompatible/util/workqueue/queue.go:58 +0x135\n\ngoroutine 391 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000a6fc20)\n\tk8s.io/client-go@v12.0.0+incompatible/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v12.0.0+incompatible/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 348 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc00056be00)\n\tk8s.io/client-go@v12.0.0+incompatible/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v12.0.0+incompatible/util/workqueue/queue.go:58 +0x135\n\ngoroutine 349 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc00056bf20)\n\tk8s.io/client-go@v12.0.0+incompatible/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v12.0.0+incompatible/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 364 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000212a20)\n\tk8s.io/client-go@v12.0.0+incompatible/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v12.0.0+incompatible/util/workqueue/queue.go:58 +0x135\n\ngoroutine 365 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000212b40)\n\tk8s.io/client-go@v12.0.0+incompatible/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v12.0.0+incompatible/util/workqueue/delaying_queue.go:68 +0x185\n",
                    "startedAt": "2021-07-08T10:59:32Z",
                    "finishedAt": "2021-07-08T11:00:03Z",
                    "containerID": "cri-o://722914f5e5c8462a7ab6a142d26823188d9c39e1719bd7080620f45e535a285f"
                  }
                },
                "ready": true,
                "restartCount": 10,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7dc3fae0713765e88ee02d522063ba2a424cac97086104915fe468aa570ff76c",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7dc3fae0713765e88ee02d522063ba2a424cac97086104915fe468aa570ff76c",
                "containerID": "cri-o://5a0600b1a4a05e87dc662088e030c4d7fed169b26293b61cc54beecfcf0c26fd",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        },
        "csi-snapshot-controller-fc56779c7-lbsmx.json": {
          "metadata": {
            "name": "csi-snapshot-controller-fc56779c7-lbsmx",
            "generateName": "csi-snapshot-controller-fc56779c7-",
            "namespace": "openshift-cluster-storage-operator",
            "selfLink": "/api/v1/namespaces/openshift-cluster-storage-operator/pods/csi-snapshot-controller-fc56779c7-lbsmx",
            "uid": "e85a54d0-49ae-4e61-93e3-fa9660502ad3",
            "resourceVersion": "339742",
            "creationTimestamp": "2021-07-07T11:26:32Z",
            "labels": {
              "app": "csi-snapshot-controller",
              "pod-template-hash": "fc56779c7"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.20\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.20\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "restricted"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "csi-snapshot-controller-fc56779c7",
                "uid": "8b271771-6a6d-4a6e-bc14-ee015efbddd9",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "csi-snapshot-controller-token-vf4mf",
                "secret": {
                  "secretName": "csi-snapshot-controller-token-vf4mf",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "snapshot-controller",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98578c4e81ec2da96f1de6bb114410fa7b5f2b71c68eed8b6152d918f0610bd5",
                "args": ["--v=2", "--leader-election=true"],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "csi-snapshot-controller-token-vf4mf",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  },
                  "runAsUser": 1000160000
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "csi-snapshot-controller",
            "serviceAccount": "csi-snapshot-controller",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {
              "seLinuxOptions": { "level": "s0:c13,c2" },
              "fsGroup": 1000160000
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:32Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T10:59:07Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T10:59:07Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:32Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.20",
            "podIPs": [{ "ip": "10.128.0.20" }],
            "startTime": "2021-07-07T11:26:32Z",
            "containerStatuses": [
              {
                "name": "snapshot-controller",
                "state": { "running": { "startedAt": "2021-07-08T10:59:06Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "startedAt": "2021-07-08T06:17:17Z",
                    "finishedAt": "2021-07-08T10:59:05Z",
                    "containerID": "cri-o://4770a0fb7aecf76ca22141556df6dd9c1624f85e840d465325fb3c06e3e2ffab"
                  }
                },
                "ready": true,
                "restartCount": 8,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98578c4e81ec2da96f1de6bb114410fa7b5f2b71c68eed8b6152d918f0610bd5",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98578c4e81ec2da96f1de6bb114410fa7b5f2b71c68eed8b6152d918f0610bd5",
                "containerID": "cri-o://ef019fb79001cb5b2a9df62c060b8526ddd0e7230065875567a591f1b25fa233",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        },
        "csi-snapshot-controller-operator-c9886b54b-d5j84.json": {
          "metadata": {
            "name": "csi-snapshot-controller-operator-c9886b54b-d5j84",
            "generateName": "csi-snapshot-controller-operator-c9886b54b-",
            "namespace": "openshift-cluster-storage-operator",
            "selfLink": "/api/v1/namespaces/openshift-cluster-storage-operator/pods/csi-snapshot-controller-operator-c9886b54b-d5j84",
            "uid": "1d95eaca-66e0-4dbc-9568-61163d01a60c",
            "resourceVersion": "339754",
            "creationTimestamp": "2021-07-07T11:03:30Z",
            "labels": {
              "app": "csi-snapshot-controller-operator",
              "pod-template-hash": "c9886b54b"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.17\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.17\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "anyuid"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "csi-snapshot-controller-operator-c9886b54b",
                "uid": "bdc5d2d4-b1de-4922-9ba6-d0649e475f87",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "config",
                "configMap": {
                  "name": "csi-snapshot-controller-operator-config",
                  "defaultMode": 440
                }
              },
              {
                "name": "csi-snapshot-controller-operator-token-8gdnq",
                "secret": {
                  "secretName": "csi-snapshot-controller-operator-token-8gdnq",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "csi-snapshot-controller-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b2185de7b5a6b89375c08151be2aa2bfb85880d432b25156db2c3afdffd86d4a",
                "args": [
                  "start",
                  "-v",
                  "5",
                  "--config=/var/run/configmaps/config/operator-config.yaml"
                ],
                "env": [
                  {
                    "name": "OPERAND_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98578c4e81ec2da96f1de6bb114410fa7b5f2b71c68eed8b6152d918f0610bd5"
                  },
                  {
                    "name": "WEBHOOK_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c913d6d126373059f2cbe50765714cb07a9371784813e33581817c77c4b1eae7"
                  },
                  { "name": "OPERATOR_IMAGE_VERSION", "value": "4.7.16" },
                  { "name": "OPERAND_IMAGE_VERSION", "value": "4.7.16" },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "65Mi" } },
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/var/run/configmaps/config"
                  },
                  {
                    "name": "csi-snapshot-controller-operator-token-8gdnq",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "capabilities": { "drop": ["MKNOD"] } }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "csi-snapshot-controller-operator",
            "serviceAccount": "csi-snapshot-controller-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {
              "seLinuxOptions": { "level": "s0:c13,c2" },
              "runAsUser": 10400,
              "runAsGroup": 10400,
              "fsGroup": 10400
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:20Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:20Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.17",
            "podIPs": [{ "ip": "10.128.0.17" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "csi-snapshot-controller-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:20Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "/go/src/github.com/openshift/cluster-csi-snapshot-controller-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\t/go/src/github.com/openshift/cluster-csi-snapshot-controller-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 400 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc0006b4960)\n\t/go/src/github.com/openshift/cluster-csi-snapshot-controller-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\t/go/src/github.com/openshift/cluster-csi-snapshot-controller-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:58 +0x135\n\ngoroutine 401 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0006b4ba0)\n\t/go/src/github.com/openshift/cluster-csi-snapshot-controller-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\t/go/src/github.com/openshift/cluster-csi-snapshot-controller-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 402 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc0006b4c00)\n\t/go/src/github.com/openshift/cluster-csi-snapshot-controller-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\t/go/src/github.com/openshift/cluster-csi-snapshot-controller-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:58 +0x135\n\ngoroutine 403 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0006b4f00)\n\t/go/src/github.com/openshift/cluster-csi-snapshot-controller-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\t/go/src/github.com/openshift/cluster-csi-snapshot-controller-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:68 +0x185\n",
                    "startedAt": "2021-07-08T10:59:32Z",
                    "finishedAt": "2021-07-08T11:00:03Z",
                    "containerID": "cri-o://31c78ce7ec0fb1eaaa2e60b114e2b4172198649ed31551f16613a7f8c58d1ba9"
                  }
                },
                "ready": true,
                "restartCount": 9,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b2185de7b5a6b89375c08151be2aa2bfb85880d432b25156db2c3afdffd86d4a",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b2185de7b5a6b89375c08151be2aa2bfb85880d432b25156db2c3afdffd86d4a",
                "containerID": "cri-o://0a69fab3abd0b5de480a8b8e5512e46658321169f4dde9e910ad8c2ccdc74ebe",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-config-operator": {
        "openshift-config-operator-7db5898cdf-m9bqf.json": {
          "metadata": {
            "name": "openshift-config-operator-7db5898cdf-m9bqf",
            "generateName": "openshift-config-operator-7db5898cdf-",
            "namespace": "openshift-config-operator",
            "selfLink": "/api/v1/namespaces/openshift-config-operator/pods/openshift-config-operator-7db5898cdf-m9bqf",
            "uid": "c7596821-9a26-4d8d-b15e-59ad3507dee9",
            "resourceVersion": "339799",
            "creationTimestamp": "2021-07-07T11:03:30Z",
            "labels": {
              "app": "openshift-config-operator",
              "pod-template-hash": "7db5898cdf"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.9\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.9\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "anyuid"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "openshift-config-operator-7db5898cdf",
                "uid": "2dad1fca-8992-4dd1-a609-eb61326f77cb",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "serving-cert",
                "secret": {
                  "secretName": "config-operator-serving-cert",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "openshift-config-operator-token-6b2fk",
                "secret": {
                  "secretName": "openshift-config-operator-token-6b2fk",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "openshift-config-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:00706b91e03f7daa9efcbefc34b41996b4ec9779988a2ae8a80c26c887cdb43f",
                "command": ["cluster-config-operator", "operator"],
                "ports": [
                  {
                    "name": "metrics",
                    "containerPort": 8443,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:00706b91e03f7daa9efcbefc34b41996b4ec9779988a2ae8a80c26c887cdb43f"
                  },
                  { "name": "OPERATOR_IMAGE_VERSION", "value": "4.7.16" },
                  { "name": "OPERAND_IMAGE_VERSION", "value": "4.7.16" }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "openshift-config-operator-token-6b2fk",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8443,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 3,
                  "timeoutSeconds": 1,
                  "periodSeconds": 3,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8443,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 3,
                  "timeoutSeconds": 1,
                  "periodSeconds": 3,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "capabilities": { "drop": ["MKNOD"] } }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "openshift-config-operator",
            "serviceAccount": "openshift-config-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": { "seLinuxOptions": { "level": "s0:c13,c7" } },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priority": 0,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:27Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:27Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.9",
            "podIPs": [{ "ip": "10.128.0.9" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "openshift-config-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:24Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "68 +0x185\n\ngoroutine 188 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc0003811a0)\n\tk8s.io/client-go@v0.20.0/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.0/util/workqueue/queue.go:58 +0x135\n\ngoroutine 189 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0003812c0)\n\tk8s.io/client-go@v0.20.0/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.0/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 190 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc0003816e0)\n\tk8s.io/client-go@v0.20.0/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.0/util/workqueue/queue.go:58 +0x135\n\ngoroutine 191 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000381800)\n\tk8s.io/client-go@v0.20.0/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.0/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 226 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0008fd320)\n\tk8s.io/client-go@v0.20.0/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.0/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 227 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc0008fd380)\n\tk8s.io/client-go@v0.20.0/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.0/util/workqueue/queue.go:58 +0x135\n\ngoroutine 228 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0008fd4a0)\n\tk8s.io/client-go@v0.20.0/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.0/util/workqueue/delaying_queue.go:68 +0x185\n",
                    "startedAt": "2021-07-08T10:59:46Z",
                    "finishedAt": "2021-07-08T10:59:57Z",
                    "containerID": "cri-o://a752c0d945c19a9e6ce742762854e6fc70555c89b1de3b77a2651d7b1f16089a"
                  }
                },
                "ready": true,
                "restartCount": 14,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:00706b91e03f7daa9efcbefc34b41996b4ec9779988a2ae8a80c26c887cdb43f",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:00706b91e03f7daa9efcbefc34b41996b4ec9779988a2ae8a80c26c887cdb43f",
                "containerID": "cri-o://10341e93b48dbfa5447f6d85b55675e1066d5471659dc1ff96e904c461b60c03",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-console-operator": {
        "console-operator-946dbb485-g67fq.json": {
          "metadata": {
            "name": "console-operator-946dbb485-g67fq",
            "generateName": "console-operator-946dbb485-",
            "namespace": "openshift-console-operator",
            "selfLink": "/api/v1/namespaces/openshift-console-operator/pods/console-operator-946dbb485-g67fq",
            "uid": "1733f37e-4619-4a7a-b899-975698a985d0",
            "resourceVersion": "339800",
            "creationTimestamp": "2021-07-07T11:33:02Z",
            "labels": {
              "name": "console-operator",
              "pod-template-hash": "946dbb485"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.61\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.61\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "restricted"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "console-operator-946dbb485",
                "uid": "b7d3397b-17f9-445e-8285-2365102133ac",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "config",
                "configMap": {
                  "name": "console-operator-config",
                  "defaultMode": 420
                }
              },
              {
                "name": "serving-cert",
                "secret": {
                  "secretName": "serving-cert",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "console-operator-token-45crd",
                "secret": {
                  "secretName": "console-operator-token-45crd",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "console-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:af6f3d2325b8ece925abbdb2f262d0f4f74a2f913d6619f37eb088a0fd9c6f06",
                "command": ["console", "operator"],
                "args": [
                  "-v=2",
                  "--config=/var/run/configmaps/config/controller-config.yaml"
                ],
                "ports": [
                  {
                    "name": "metrics",
                    "containerPort": 60000,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:91c91c3a6020783f1af680e0c189c6f7e65c5c0ab6c99b5cd435831c416079cd"
                  },
                  { "name": "RELEASE_VERSION", "value": "4.7.16" },
                  { "name": "OPERATOR_NAME", "value": "console-operator" },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  }
                ],
                "resources": {
                  "requests": { "cpu": "10m", "memory": "100Mi" }
                },
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/var/run/configmaps/config"
                  },
                  {
                    "name": "serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "console-operator-token-45crd",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 8443,
                    "scheme": "HTTPS"
                  },
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/readyz",
                    "port": 8443,
                    "scheme": "HTTPS"
                  },
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  },
                  "runAsUser": 1000590000
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "console-operator",
            "serviceAccount": "console-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {
              "seLinuxOptions": { "level": "s0:c24,c19" },
              "fsGroup": 1000590000
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:33:02Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:27Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:27Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:33:02Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.61",
            "podIPs": [{ "ip": "10.128.0.61" }],
            "startTime": "2021-07-07T11:33:02Z",
            "containerStatuses": [
              {
                "name": "console-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:15Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "/client-go/util/workqueue.newQueue\n\t/go/src/github.com/openshift/console-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:58 +0x135\n\ngoroutine 334 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0004268a0)\n\t/go/src/github.com/openshift/console-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\t/go/src/github.com/openshift/console-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 335 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000426900)\n\t/go/src/github.com/openshift/console-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\t/go/src/github.com/openshift/console-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:58 +0x135\n\ngoroutine 336 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000426ae0)\n\t/go/src/github.com/openshift/console-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\t/go/src/github.com/openshift/console-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 337 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000426c00)\n\t/go/src/github.com/openshift/console-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\t/go/src/github.com/openshift/console-operator/vendor/k8s.io/client-go/util/workqueue/queue.go:58 +0x135\n\ngoroutine 402 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000426d20)\n\t/go/src/github.com/openshift/console-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\t/go/src/github.com/openshift/console-operator/vendor/k8s.io/client-go/util/workqueue/delaying_queue.go:68 +0x185\n",
                    "startedAt": "2021-07-08T10:59:47Z",
                    "finishedAt": "2021-07-08T11:00:14Z",
                    "containerID": "cri-o://11b11d43725739be81233c5861f1382aa8c5cf6dfafed06cb2927162e7eb6130"
                  }
                },
                "ready": true,
                "restartCount": 14,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:af6f3d2325b8ece925abbdb2f262d0f4f74a2f913d6619f37eb088a0fd9c6f06",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:af6f3d2325b8ece925abbdb2f262d0f4f74a2f913d6619f37eb088a0fd9c6f06",
                "containerID": "cri-o://98d8778d0e709b6118d8238c4cc7ff6de0a25dbd455915028c107ff1ef303016",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-controller-manager-operator": {
        "openshift-controller-manager-operator-6df4f59bf4-k84bk.json": {
          "metadata": {
            "name": "openshift-controller-manager-operator-6df4f59bf4-k84bk",
            "generateName": "openshift-controller-manager-operator-6df4f59bf4-",
            "namespace": "openshift-controller-manager-operator",
            "selfLink": "/api/v1/namespaces/openshift-controller-manager-operator/pods/openshift-controller-manager-operator-6df4f59bf4-k84bk",
            "uid": "fa34bf7c-7028-4433-82a0-cd70412cfad4",
            "resourceVersion": "339753",
            "creationTimestamp": "2021-07-07T11:03:19Z",
            "labels": {
              "app": "openshift-controller-manager-operator",
              "pod-template-hash": "6df4f59bf4"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.3\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.3\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "anyuid"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "openshift-controller-manager-operator-6df4f59bf4",
                "uid": "b4c3e05a-7251-4a2d-b936-0853904a4abb",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "serving-cert",
                "secret": {
                  "secretName": "openshift-controller-manager-operator-serving-cert",
                  "defaultMode": 400,
                  "optional": true
                }
              },
              {
                "name": "config",
                "configMap": {
                  "name": "openshift-controller-manager-operator-config",
                  "defaultMode": 440
                }
              },
              {
                "name": "openshift-controller-manager-operator-token-5658k",
                "secret": {
                  "secretName": "openshift-controller-manager-operator-token-5658k",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "openshift-controller-manager-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bacac9b2cbdee2b0e05283cfe640405a1bd8a6d8e35a261ddea3b37640007323",
                "command": [
                  "cluster-openshift-controller-manager-operator",
                  "operator"
                ],
                "args": [
                  "--config=/var/run/configmaps/config/config.yaml",
                  "-v=4"
                ],
                "ports": [
                  {
                    "name": "metrics",
                    "containerPort": 8443,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  { "name": "RELEASE_VERSION", "value": "4.7.16" },
                  {
                    "name": "IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:593f17213a37be5d4ca14a8c409d0ab4fc70b4709cbbd72c88b9c71fbc0c79a6"
                  },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/var/run/configmaps/config"
                  },
                  {
                    "name": "serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "openshift-controller-manager-operator-token-5658k",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "capabilities": { "drop": ["MKNOD"] } }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "openshift-controller-manager-operator",
            "serviceAccount": "openshift-controller-manager-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": { "seLinuxOptions": { "level": "s0:c15,c0" } },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:20Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:20Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.3",
            "podIPs": [{ "ip": "10.128.0.3" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "openshift-controller-manager-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:20Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "58 +0x135\n\ngoroutine 400 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000707ce0)\n\tk8s.io/client-go@v0.20.5/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.5/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 404 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc00085e900)\n\tk8s.io/client-go@v0.20.5/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.5/util/workqueue/queue.go:58 +0x135\n\ngoroutine 405 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc00085ea20)\n\tk8s.io/client-go@v0.20.5/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.5/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 406 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc00085ea80)\n\tk8s.io/client-go@v0.20.5/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.5/util/workqueue/queue.go:58 +0x135\n\ngoroutine 407 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc00085eba0)\n\tk8s.io/client-go@v0.20.5/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.5/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 408 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc00085ec00)\n\tk8s.io/client-go@v0.20.5/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.5/util/workqueue/queue.go:58 +0x135\n\ngoroutine 409 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc00085ed20)\n\tk8s.io/client-go@v0.20.5/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.5/util/workqueue/delaying_queue.go:68 +0x185\n",
                    "startedAt": "2021-07-08T10:59:33Z",
                    "finishedAt": "2021-07-08T11:00:04Z",
                    "containerID": "cri-o://376c99923e0020558dbb6b060d56ed16a68a2d725d9451d6b1647d1c9daaa766"
                  }
                },
                "ready": true,
                "restartCount": 10,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bacac9b2cbdee2b0e05283cfe640405a1bd8a6d8e35a261ddea3b37640007323",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bacac9b2cbdee2b0e05283cfe640405a1bd8a6d8e35a261ddea3b37640007323",
                "containerID": "cri-o://a508409261406e256b227b8b8f54bd4c91eac0e84246132612b46b0c0eb54975",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-etcd": {
        "etcd-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.json": {
          "metadata": {
            "name": "etcd-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "namespace": "openshift-etcd",
            "selfLink": "/api/v1/namespaces/openshift-etcd/pods/etcd-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "uid": "1770220e-f347-45bc-9165-60b6e61d0a6f",
            "resourceVersion": "9321",
            "creationTimestamp": "2021-07-07T11:27:06Z",
            "labels": {
              "app": "etcd",
              "etcd": "true",
              "k8s-app": "etcd",
              "revision": "2"
            },
            "annotations": {
              "kubernetes.io/config.hash": "ab2e5349-b857-4750-a560-86cdde23ab2c",
              "kubernetes.io/config.mirror": "ab2e5349-b857-4750-a560-86cdde23ab2c",
              "kubernetes.io/config.seen": "2021-07-07T11:27:06.340196081Z",
              "kubernetes.io/config.source": "file"
            },
            "ownerReferences": [
              {
                "apiVersion": "v1",
                "kind": "Node",
                "name": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
                "uid": "7b9db4ae-6ec2-45b7-ba44-dd0df8e32466",
                "controller": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "static-pod-dir",
                "hostPath": { "path": "/etc/kubernetes/manifests", "type": "" }
              },
              {
                "name": "resource-dir",
                "hostPath": {
                  "path": "/etc/kubernetes/static-pod-resources/etcd-pod-2",
                  "type": ""
                }
              },
              {
                "name": "cert-dir",
                "hostPath": {
                  "path": "/etc/kubernetes/static-pod-resources/etcd-certs",
                  "type": ""
                }
              },
              {
                "name": "data-dir",
                "hostPath": { "path": "/var/lib/etcd", "type": "" }
              },
              {
                "name": "usr-local-bin",
                "hostPath": { "path": "/usr/local/bin", "type": "" }
              }
            ],
            "initContainers": [
              {
                "name": "etcd-ensure-env-vars",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "command": [
                  "/bin/sh",
                  "-c",
                  "#!/bin/sh\nset -euo pipefail\n\n: \"${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_URL_HOST?not set}\"\n: \"${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_NAME?not set}\"\n: \"${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_IP?not set}\"\n\n# check for ipv4 addresses as well as ipv6 addresses with extra square brackets\nif [[ \"${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_IP}\" != \"${NODE_IP}\" && \"${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_IP}\" != \"[${NODE_IP}]\" ]]; then\n  # echo the error message to stderr\n  echo \"Expected node IP to be ${NODE_IP} got ${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_IP}\" >&2\n  exit 1\nfi\n\n# check for ipv4 addresses as well as ipv6 addresses with extra square brackets\nif [[ \"${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_URL_HOST}\" != \"${NODE_IP}\" && \"${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_URL_HOST}\" != \"[${NODE_IP}]\" ]]; then\n  # echo the error message to stderr\n  echo \"Expected etcd url host to be ${NODE_IP} got ${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_URL_HOST}\" >&2\n  exit 1\nfi\n"
                ],
                "env": [
                  {
                    "name": "ALL_ETCD_ENDPOINTS",
                    "value": "https://10.0.88.27:2379,https://10.0.93.169:2379"
                  },
                  { "name": "ETCDCTL_API", "value": "3" },
                  {
                    "name": "ETCDCTL_CACERT",
                    "value": "/etc/kubernetes/static-pod-certs/configmaps/etcd-serving-ca/ca-bundle.crt"
                  },
                  {
                    "name": "ETCDCTL_CERT",
                    "value": "/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.crt"
                  },
                  {
                    "name": "ETCDCTL_ENDPOINTS",
                    "value": "https://10.0.88.27:2379"
                  },
                  {
                    "name": "ETCDCTL_KEY",
                    "value": "/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.key"
                  },
                  {
                    "name": "ETCD_CIPHER_SUITES",
                    "value": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
                  },
                  { "name": "ETCD_DATA_DIR", "value": "/var/lib/etcd" },
                  { "name": "ETCD_ELECTION_TIMEOUT", "value": "1000" },
                  { "name": "ETCD_ENABLE_PPROF", "value": "true" },
                  { "name": "ETCD_HEARTBEAT_INTERVAL", "value": "100" },
                  {
                    "name": "ETCD_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7"
                  },
                  { "name": "ETCD_INITIAL_CLUSTER_STATE", "value": "existing" },
                  { "name": "ETCD_QUOTA_BACKEND_BYTES", "value": "7516192768" },
                  {
                    "name": "NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_NAME",
                    "value": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com"
                  },
                  {
                    "name": "NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_URL_HOST",
                    "value": "10.0.88.27"
                  },
                  {
                    "name": "NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_IP",
                    "value": "10.0.88.27"
                  },
                  {
                    "name": "NODE_IP",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "status.podIP"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "60Mi" } },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "privileged": true }
              },
              {
                "name": "etcd-resources-copy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "command": [
                  "/bin/sh",
                  "-c",
                  "#!/bin/sh\nset -euo pipefail\n\nrm -f $(grep -l '^### Created by cluster-etcd-operator' /usr/local/bin/*)\ncp -p /etc/kubernetes/static-pod-certs/configmaps/etcd-scripts/*.sh /usr/local/bin\n"
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "60Mi" } },
                "volumeMounts": [
                  {
                    "name": "resource-dir",
                    "mountPath": "/etc/kubernetes/static-pod-resources"
                  },
                  {
                    "name": "cert-dir",
                    "mountPath": "/etc/kubernetes/static-pod-certs"
                  },
                  { "name": "usr-local-bin", "mountPath": "/usr/local/bin" }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "privileged": true }
              }
            ],
            "containers": [
              {
                "name": "etcdctl",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "command": [
                  "/bin/bash",
                  "-c",
                  "trap TERM INT; sleep infinity & wait"
                ],
                "env": [
                  {
                    "name": "ALL_ETCD_ENDPOINTS",
                    "value": "https://10.0.88.27:2379,https://10.0.93.169:2379"
                  },
                  { "name": "ETCDCTL_API", "value": "3" },
                  {
                    "name": "ETCDCTL_CACERT",
                    "value": "/etc/kubernetes/static-pod-certs/configmaps/etcd-serving-ca/ca-bundle.crt"
                  },
                  {
                    "name": "ETCDCTL_CERT",
                    "value": "/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.crt"
                  },
                  {
                    "name": "ETCDCTL_ENDPOINTS",
                    "value": "https://10.0.88.27:2379"
                  },
                  {
                    "name": "ETCDCTL_KEY",
                    "value": "/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.key"
                  },
                  {
                    "name": "ETCD_CIPHER_SUITES",
                    "value": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
                  },
                  { "name": "ETCD_DATA_DIR", "value": "/var/lib/etcd" },
                  { "name": "ETCD_ELECTION_TIMEOUT", "value": "1000" },
                  { "name": "ETCD_ENABLE_PPROF", "value": "true" },
                  { "name": "ETCD_HEARTBEAT_INTERVAL", "value": "100" },
                  {
                    "name": "ETCD_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7"
                  },
                  { "name": "ETCD_INITIAL_CLUSTER_STATE", "value": "existing" },
                  { "name": "ETCD_QUOTA_BACKEND_BYTES", "value": "7516192768" },
                  {
                    "name": "NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_NAME",
                    "value": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com"
                  },
                  {
                    "name": "NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_URL_HOST",
                    "value": "10.0.88.27"
                  },
                  {
                    "name": "NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_IP",
                    "value": "10.0.88.27"
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "60Mi" } },
                "volumeMounts": [
                  {
                    "name": "static-pod-dir",
                    "mountPath": "/etc/kubernetes/manifests"
                  },
                  {
                    "name": "resource-dir",
                    "mountPath": "/etc/kubernetes/static-pod-resources"
                  },
                  {
                    "name": "cert-dir",
                    "mountPath": "/etc/kubernetes/static-pod-certs"
                  },
                  { "name": "data-dir", "mountPath": "/var/lib/etcd/" }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "etcd",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "command": [
                  "/bin/sh",
                  "-c",
                  "#!/bin/sh\nset -euo pipefail\n\netcdctl member list || true\n\n# this has a non-zero return code if the command is non-zero.  If you use an export first, it doesn't and you\n# will succeed when you should fail.\nETCD_INITIAL_CLUSTER=$(discover-etcd-initial-cluster \\\n  --cacert=/etc/kubernetes/static-pod-certs/configmaps/etcd-serving-ca/ca-bundle.crt \\\n  --cert=/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.crt \\\n  --key=/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.key \\\n  --endpoints=${ALL_ETCD_ENDPOINTS} \\\n  --data-dir=/var/lib/etcd \\\n  --target-peer-url-host=${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_URL_HOST} \\\n  --target-name=master-0.imeixner20210707.lab.upshift.rdu2.redhat.com)\n export ETCD_INITIAL_CLUSTER\n\n# we cannot use the \"normal\" port conflict initcontainer because when we upgrade, the existing static pod will never yield,\n# so we do the detection in etcd container itsefl.\necho -n \"Waiting for ports 2379, 2380 and 9978 to be released.\"\nwhile [ -n \"$(ss -Htan '( sport = 2379 or sport = 2380 or sport = 9978 )')\" ]; do\n  echo -n \".\"\n  sleep 1\ndone\n\nexport ETCD_NAME=${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_NAME}\nenv | grep ETCD | grep -v NODE\n\nset -x\n# See https://etcd.io/docs/v3.4.0/tuning/ for why we use ionice\nexec ionice -c2 -n0 etcd \\\n  --log-level=info \\\n  --initial-advertise-peer-urls=https://${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_IP}:2380 \\\n  --cert-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-serving/etcd-serving-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.crt \\\n  --key-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-serving/etcd-serving-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.key \\\n  --trusted-ca-file=/etc/kubernetes/static-pod-certs/configmaps/etcd-serving-ca/ca-bundle.crt \\\n  --client-cert-auth=true \\\n  --peer-cert-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.crt \\\n  --peer-key-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.key \\\n  --peer-trusted-ca-file=/etc/kubernetes/static-pod-certs/configmaps/etcd-peer-client-ca/ca-bundle.crt \\\n  --peer-client-cert-auth=true \\\n  --advertise-client-urls=https://${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_IP}:2379 \\\n  --listen-client-urls=https://0.0.0.0:2379 \\\n  --listen-peer-urls=https://0.0.0.0:2380 \\\n  --listen-metrics-urls=https://0.0.0.0:9978 ||  mv /etc/kubernetes/etcd-backup-dir/etcd-member.yaml /etc/kubernetes/manifests\n"
                ],
                "env": [
                  {
                    "name": "ALL_ETCD_ENDPOINTS",
                    "value": "https://10.0.88.27:2379,https://10.0.93.169:2379"
                  },
                  { "name": "ETCDCTL_API", "value": "3" },
                  {
                    "name": "ETCDCTL_CACERT",
                    "value": "/etc/kubernetes/static-pod-certs/configmaps/etcd-serving-ca/ca-bundle.crt"
                  },
                  {
                    "name": "ETCDCTL_CERT",
                    "value": "/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.crt"
                  },
                  {
                    "name": "ETCDCTL_ENDPOINTS",
                    "value": "https://10.0.88.27:2379"
                  },
                  {
                    "name": "ETCDCTL_KEY",
                    "value": "/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.key"
                  },
                  {
                    "name": "ETCD_CIPHER_SUITES",
                    "value": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
                  },
                  { "name": "ETCD_DATA_DIR", "value": "/var/lib/etcd" },
                  { "name": "ETCD_ELECTION_TIMEOUT", "value": "1000" },
                  { "name": "ETCD_ENABLE_PPROF", "value": "true" },
                  { "name": "ETCD_HEARTBEAT_INTERVAL", "value": "100" },
                  {
                    "name": "ETCD_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7"
                  },
                  { "name": "ETCD_INITIAL_CLUSTER_STATE", "value": "existing" },
                  { "name": "ETCD_QUOTA_BACKEND_BYTES", "value": "7516192768" },
                  {
                    "name": "NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_NAME",
                    "value": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com"
                  },
                  {
                    "name": "NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_URL_HOST",
                    "value": "10.0.88.27"
                  },
                  {
                    "name": "NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_IP",
                    "value": "10.0.88.27"
                  }
                ],
                "resources": {
                  "requests": { "cpu": "300m", "memory": "600Mi" }
                },
                "volumeMounts": [
                  {
                    "name": "static-pod-dir",
                    "mountPath": "/etc/kubernetes/manifests"
                  },
                  {
                    "name": "resource-dir",
                    "mountPath": "/etc/kubernetes/static-pod-resources"
                  },
                  {
                    "name": "cert-dir",
                    "mountPath": "/etc/kubernetes/static-pod-certs"
                  },
                  { "name": "data-dir", "mountPath": "/var/lib/etcd/" }
                ],
                "readinessProbe": {
                  "tcpSocket": { "port": 2380 },
                  "initialDelaySeconds": 3,
                  "timeoutSeconds": 5,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "privileged": true }
              },
              {
                "name": "etcd-metrics",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "command": [
                  "/bin/sh",
                  "-c",
                  "#!/bin/sh\nset -euo pipefail\n\nexport ETCD_NAME=${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_NAME}\n\nexec etcd grpc-proxy start \\\n  --endpoints https://${NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_URL_HOST}:9978 \\\n  --metrics-addr https://0.0.0.0:9979 \\\n  --listen-addr 127.0.0.1:9977 \\\n  --key /etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.key \\\n  --key-file /etc/kubernetes/static-pod-certs/secrets/etcd-all-serving-metrics/etcd-serving-metrics-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.key \\\n  --cert /etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.crt \\\n  --cert-file /etc/kubernetes/static-pod-certs/secrets/etcd-all-serving-metrics/etcd-serving-metrics-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.crt \\\n  --cacert /etc/kubernetes/static-pod-certs/configmaps/etcd-peer-client-ca/ca-bundle.crt \\\n  --trusted-ca-file /etc/kubernetes/static-pod-certs/configmaps/etcd-metrics-proxy-serving-ca/ca-bundle.crt\n"
                ],
                "env": [
                  {
                    "name": "ALL_ETCD_ENDPOINTS",
                    "value": "https://10.0.88.27:2379,https://10.0.93.169:2379"
                  },
                  { "name": "ETCDCTL_API", "value": "3" },
                  {
                    "name": "ETCDCTL_CACERT",
                    "value": "/etc/kubernetes/static-pod-certs/configmaps/etcd-serving-ca/ca-bundle.crt"
                  },
                  {
                    "name": "ETCDCTL_CERT",
                    "value": "/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.crt"
                  },
                  {
                    "name": "ETCDCTL_ENDPOINTS",
                    "value": "https://10.0.88.27:2379"
                  },
                  {
                    "name": "ETCDCTL_KEY",
                    "value": "/etc/kubernetes/static-pod-certs/secrets/etcd-all-peer/etcd-peer-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.key"
                  },
                  {
                    "name": "ETCD_CIPHER_SUITES",
                    "value": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
                  },
                  { "name": "ETCD_DATA_DIR", "value": "/var/lib/etcd" },
                  { "name": "ETCD_ELECTION_TIMEOUT", "value": "1000" },
                  { "name": "ETCD_ENABLE_PPROF", "value": "true" },
                  { "name": "ETCD_HEARTBEAT_INTERVAL", "value": "100" },
                  {
                    "name": "ETCD_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7"
                  },
                  { "name": "ETCD_INITIAL_CLUSTER_STATE", "value": "existing" },
                  { "name": "ETCD_QUOTA_BACKEND_BYTES", "value": "7516192768" },
                  {
                    "name": "NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_NAME",
                    "value": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com"
                  },
                  {
                    "name": "NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_ETCD_URL_HOST",
                    "value": "10.0.88.27"
                  },
                  {
                    "name": "NODE_master_0_imeixner20210707_lab_upshift_rdu2_redhat_com_IP",
                    "value": "10.0.88.27"
                  }
                ],
                "resources": {
                  "requests": { "cpu": "40m", "memory": "200Mi" }
                },
                "volumeMounts": [
                  {
                    "name": "resource-dir",
                    "mountPath": "/etc/kubernetes/static-pod-resources"
                  },
                  {
                    "name": "cert-dir",
                    "mountPath": "/etc/kubernetes/static-pod-certs"
                  },
                  { "name": "data-dir", "mountPath": "/var/lib/etcd/" }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "privileged": true }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "hostNetwork": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [{ "operator": "Exists" }],
            "priorityClassName": "system-node-critical",
            "priority": 2000001000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:27:14Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:28:09Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:28:09Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:27:06Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.0.88.27",
            "podIPs": [{ "ip": "10.0.88.27" }],
            "startTime": "2021-07-07T11:27:06Z",
            "initContainerStatuses": [
              {
                "name": "etcd-ensure-env-vars",
                "state": {
                  "terminated": {
                    "exitCode": 0,
                    "reason": "Completed",
                    "startedAt": "2021-07-07T11:27:12Z",
                    "finishedAt": "2021-07-07T11:27:12Z",
                    "containerID": "cri-o://7fd19af353b27599b0f3c96720fb8201d58ada2ce6400259f345d48f88bd82bc"
                  }
                },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "containerID": "cri-o://7fd19af353b27599b0f3c96720fb8201d58ada2ce6400259f345d48f88bd82bc"
              },
              {
                "name": "etcd-resources-copy",
                "state": {
                  "terminated": {
                    "exitCode": 0,
                    "reason": "Completed",
                    "startedAt": "2021-07-07T11:27:13Z",
                    "finishedAt": "2021-07-07T11:27:13Z",
                    "containerID": "cri-o://fc8639cd43366b8a50a71a25154e51bd6cfe970497f473fc8a5bcf93beddd2a1"
                  }
                },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "containerID": "cri-o://fc8639cd43366b8a50a71a25154e51bd6cfe970497f473fc8a5bcf93beddd2a1"
              }
            ],
            "containerStatuses": [
              {
                "name": "etcd",
                "state": { "running": { "startedAt": "2021-07-07T11:28:01Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 1,
                    "reason": "Error",
                    "message": "=\"etcd-bootstrap\", peerURLs=[https://10.0.93.169:2380}, clientURLs=[https://10.0.93.169:2379]\n      member \"https://10.0.88.27:2380\" not found in member list, check operator logs for possible scaling problems\n#### sleeping...\n#### attempt 3\n      member={name=\"etcd-bootstrap\", peerURLs=[https://10.0.93.169:2380}, clientURLs=[https://10.0.93.169:2379]\n      member \"https://10.0.88.27:2380\" not found in member list, check operator logs for possible scaling problems\n#### sleeping...\n#### attempt 4\n      member={name=\"etcd-bootstrap\", peerURLs=[https://10.0.93.169:2380}, clientURLs=[https://10.0.93.169:2379]\n      member \"https://10.0.88.27:2380\" not found in member list, check operator logs for possible scaling problems\n#### sleeping...\n#### attempt 5\n      member={name=\"etcd-bootstrap\", peerURLs=[https://10.0.93.169:2380}, clientURLs=[https://10.0.93.169:2379]\n      member \"https://10.0.88.27:2380\" not found in member list, check operator logs for possible scaling problems\n#### sleeping...\n#### attempt 6\n      member={name=\"etcd-bootstrap\", peerURLs=[https://10.0.93.169:2380}, clientURLs=[https://10.0.93.169:2379]\n      member \"https://10.0.88.27:2380\" not found in member list, check operator logs for possible scaling problems\n#### sleeping...\n#### attempt 7\n      member={name=\"etcd-bootstrap\", peerURLs=[https://10.0.93.169:2380}, clientURLs=[https://10.0.93.169:2379]\n      member \"https://10.0.88.27:2380\" not found in member list, check operator logs for possible scaling problems\n#### sleeping...\n#### attempt 8\n      member={name=\"etcd-bootstrap\", peerURLs=[https://10.0.93.169:2380}, clientURLs=[https://10.0.93.169:2379]\n      member \"https://10.0.88.27:2380\" not found in member list, check operator logs for possible scaling problems\n#### sleeping...\n#### attempt 9\n      member={name=\"etcd-bootstrap\", peerURLs=[https://10.0.93.169:2380}, clientURLs=[https://10.0.93.169:2379]\n      member \"https://10.0.88.27:2380\" not found in member list, check operator logs for possible scaling problems\n#### sleeping...\ntimed out",
                    "startedAt": "2021-07-07T11:27:31Z",
                    "finishedAt": "2021-07-07T11:27:46Z",
                    "containerID": "cri-o://f6218f6a1976625b3576d1bc02b5015f2478986f542ecd6988c8be09e8d56747"
                  }
                },
                "ready": true,
                "restartCount": 2,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "containerID": "cri-o://47e51e5446b2392912df28a0ac2bca207bbda371cc77bc125553020d17d3cc60",
                "started": true
              },
              {
                "name": "etcd-metrics",
                "state": { "running": { "startedAt": "2021-07-07T11:27:15Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "containerID": "cri-o://bfc2b749efebeb0d40da53143f20a8effbb72aaf81b62b3570ef1f809428c80a",
                "started": true
              },
              {
                "name": "etcdctl",
                "state": { "running": { "startedAt": "2021-07-07T11:27:14Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                "containerID": "cri-o://f360dba90bab9bdfc026c4b7539c6ad99c0a6b4912cdd6ce8dd66eb15c2fb16e",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-etcd-operator": {
        "etcd-operator-78bb597755-r6lgn.json": {
          "metadata": {
            "name": "etcd-operator-78bb597755-r6lgn",
            "generateName": "etcd-operator-78bb597755-",
            "namespace": "openshift-etcd-operator",
            "selfLink": "/api/v1/namespaces/openshift-etcd-operator/pods/etcd-operator-78bb597755-r6lgn",
            "uid": "d3c61916-4d2d-44d3-b774-a6654424e54e",
            "resourceVersion": "339748",
            "creationTimestamp": "2021-07-07T11:03:30Z",
            "labels": {
              "app": "etcd-operator",
              "pod-template-hash": "78bb597755"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.7\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.7\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "etcd-operator-78bb597755",
                "uid": "cb0f2d00-f60d-4945-a303-75888a1c3d8e",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "serving-cert",
                "secret": {
                  "secretName": "etcd-operator-serving-cert",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "config",
                "configMap": {
                  "name": "etcd-operator-config",
                  "defaultMode": 420
                }
              },
              {
                "name": "etcd-ca",
                "configMap": { "name": "etcd-ca-bundle", "defaultMode": 420 }
              },
              {
                "name": "etcd-service-ca",
                "configMap": {
                  "name": "etcd-service-ca-bundle",
                  "defaultMode": 420
                }
              },
              {
                "name": "etcd-client",
                "secret": { "secretName": "etcd-client", "defaultMode": 420 }
              },
              {
                "name": "etcd-operator-token-mmtpt",
                "secret": {
                  "secretName": "etcd-operator-token-mmtpt",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "etcd-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4d423e2d8eae673e08fca3865ed7cc8dc2bac5dccd6ec07675aa130c9e74e912",
                "command": ["cluster-etcd-operator", "operator"],
                "args": [
                  "--config=/var/run/configmaps/config/config.yaml",
                  "-v=4",
                  "--terminate-on-files=/var/run/secrets/serving-cert/tls.crt",
                  "--terminate-on-files=/var/run/secrets/serving-cert/tls.key"
                ],
                "ports": [
                  {
                    "name": "metrics",
                    "containerPort": 8443,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7"
                  },
                  {
                    "name": "OPERATOR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4d423e2d8eae673e08fca3865ed7cc8dc2bac5dccd6ec07675aa130c9e74e912"
                  },
                  { "name": "OPERATOR_IMAGE_VERSION", "value": "4.7.16" },
                  { "name": "OPERAND_IMAGE_VERSION", "value": "4.7.16" },
                  { "name": "OPENSHIFT_PROFILE", "value": "web" },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/var/run/configmaps/config"
                  },
                  {
                    "name": "serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "etcd-ca",
                    "mountPath": "/var/run/configmaps/etcd-ca"
                  },
                  {
                    "name": "etcd-service-ca",
                    "mountPath": "/var/run/configmaps/etcd-service-ca"
                  },
                  {
                    "name": "etcd-client",
                    "mountPath": "/var/run/secrets/etcd-client"
                  },
                  {
                    "name": "etcd-operator-token-mmtpt",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "etcd-operator",
            "serviceAccount": "etcd-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:17Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:17Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.7",
            "podIPs": [{ "ip": "10.128.0.7" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "etcd-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:17Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "58 +0x135\n\ngoroutine 397 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0010586c0)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 398 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc001058720)\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:58 +0x135\n\ngoroutine 399 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc001058840)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 375 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000491560)\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:58 +0x135\n\ngoroutine 376 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0004919e0)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 377 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000491a40)\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:58 +0x135\n\ngoroutine 378 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000491c20)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n",
                    "startedAt": "2021-07-08T10:59:33Z",
                    "finishedAt": "2021-07-08T11:00:04Z",
                    "containerID": "cri-o://6df376410075972b51d2dc2341beeca58e672e62ac67d47a6b54d6ac0561a77b"
                  }
                },
                "ready": true,
                "restartCount": 11,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4d423e2d8eae673e08fca3865ed7cc8dc2bac5dccd6ec07675aa130c9e74e912",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4d423e2d8eae673e08fca3865ed7cc8dc2bac5dccd6ec07675aa130c9e74e912",
                "containerID": "cri-o://2ca3cc5aa86c6a792bb12b8a66aaeb97c388f20b12824d7e8d2c507985fcd6c4",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-ingress": {
        "router-default-7bbdcfcf9b-7xdln.json": {
          "metadata": {
            "name": "router-default-7bbdcfcf9b-7xdln",
            "generateName": "router-default-7bbdcfcf9b-",
            "namespace": "openshift-ingress",
            "selfLink": "/api/v1/namespaces/openshift-ingress/pods/router-default-7bbdcfcf9b-7xdln",
            "uid": "929c3faa-a2a8-4698-b59d-48b48aec08f8",
            "resourceVersion": "1782319",
            "creationTimestamp": "2021-07-07T16:14:55Z",
            "labels": {
              "ingresscontroller.operator.openshift.io/deployment-ingresscontroller": "default",
              "pod-template-hash": "7bbdcfcf9b"
            },
            "annotations": {
              "openshift.io/scc": "hostnetwork",
              "unsupported.do-not-use.openshift.io/override-liveness-grace-period-seconds": "10"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "router-default-7bbdcfcf9b",
                "uid": "d128b2dd-c007-438a-acf9-95f85b89d8ce",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "default-certificate",
                "secret": {
                  "secretName": "router-certs-default",
                  "defaultMode": 420
                }
              },
              {
                "name": "service-ca-bundle",
                "configMap": {
                  "name": "service-ca-bundle",
                  "items": [
                    { "key": "service-ca.crt", "path": "service-ca.crt" }
                  ],
                  "defaultMode": 420,
                  "optional": false
                }
              },
              {
                "name": "metrics-certs",
                "secret": {
                  "secretName": "router-metrics-certs-default",
                  "defaultMode": 420
                }
              },
              {
                "name": "router-token-z7cz2",
                "secret": {
                  "secretName": "router-token-z7cz2",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "router",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cdc05f16135f40d5974e4a827244fb87862219136da7a3d36c8ff2dfc2135a78",
                "ports": [
                  {
                    "name": "http",
                    "hostPort": 80,
                    "containerPort": 80,
                    "protocol": "TCP"
                  },
                  {
                    "name": "https",
                    "hostPort": 443,
                    "containerPort": 443,
                    "protocol": "TCP"
                  },
                  {
                    "name": "metrics",
                    "hostPort": 1936,
                    "containerPort": 1936,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  { "name": "STATS_PORT", "value": "1936" },
                  {
                    "name": "ROUTER_SERVICE_NAMESPACE",
                    "value": "openshift-ingress"
                  },
                  {
                    "name": "DEFAULT_CERTIFICATE_DIR",
                    "value": "/etc/pki/tls/private"
                  },
                  {
                    "name": "DEFAULT_DESTINATION_CA_PATH",
                    "value": "/var/run/configmaps/service-ca/service-ca.crt"
                  },
                  { "name": "ROUTER_SERVICE_NAME", "value": "default" },
                  {
                    "name": "STATS_USERNAME",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "router-stats-default",
                        "key": "statsUsername"
                      }
                    }
                  },
                  {
                    "name": "STATS_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "router-stats-default",
                        "key": "statsPassword"
                      }
                    }
                  },
                  { "name": "ROUTER_METRICS_TYPE", "value": "haproxy" },
                  {
                    "name": "ROUTER_METRICS_TLS_CERT_FILE",
                    "value": "/etc/pki/tls/metrics-certs/tls.crt"
                  },
                  {
                    "name": "ROUTER_METRICS_TLS_KEY_FILE",
                    "value": "/etc/pki/tls/metrics-certs/tls.key"
                  },
                  {
                    "name": "ROUTER_CANONICAL_HOSTNAME",
                    "value": "apps.imeixner20210707.lab.upshift.rdu2.redhat.com"
                  },
                  { "name": "ROUTER_THREADS", "value": "4" },
                  {
                    "name": "ROUTER_CIPHERS",
                    "value": "TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
                  },
                  { "name": "SSL_MIN_VERSION", "value": "TLSv1.2" },
                  {
                    "name": "ROUTER_DISABLE_NAMESPACE_OWNERSHIP_CHECK",
                    "value": "false"
                  },
                  { "name": "ROUTER_ALLOW_WILDCARD_ROUTES", "value": "false" },
                  { "name": "ROUTER_SET_FORWARDED_HEADERS", "value": "append" },
                  { "name": "ROUTER_DISABLE_HTTP2", "value": "true" }
                ],
                "resources": {
                  "requests": { "cpu": "100m", "memory": "256Mi" }
                },
                "volumeMounts": [
                  {
                    "name": "default-certificate",
                    "readOnly": true,
                    "mountPath": "/etc/pki/tls/private"
                  },
                  {
                    "name": "service-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/var/run/configmaps/service-ca"
                  },
                  {
                    "name": "metrics-certs",
                    "readOnly": true,
                    "mountPath": "/etc/pki/tls/metrics-certs"
                  },
                  {
                    "name": "router-token-z7cz2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 1936,
                    "host": "localhost",
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/healthz/ready",
                    "port": 1936,
                    "host": "localhost",
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  },
                  "runAsUser": 1000620000
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 3600,
            "dnsPolicy": "ClusterFirstWithHostNet",
            "nodeSelector": {
              "kubernetes.io/os": "linux",
              "node-role.kubernetes.io/worker": ""
            },
            "serviceAccountName": "router",
            "serviceAccount": "router",
            "hostNetwork": true,
            "securityContext": {
              "seLinuxOptions": { "level": "s0:c25,c10" },
              "supplementalGroups": [1000620000],
              "fsGroup": 1000620000
            },
            "imagePullSecrets": [{ "name": "router-dockercfg-bsm9c" }],
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 300
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 300
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Pending",
            "conditions": [
              {
                "type": "PodScheduled",
                "status": "False",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T16:14:55Z",
                "reason": "Unschedulable",
                "message": "0/2 nodes are available: 1 node(s) didn't have free ports for the requested pod ports, 1 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate."
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-ingress-operator": {
        "ingress-operator-6557486749-h7qjw.json": {
          "metadata": {
            "name": "ingress-operator-6557486749-h7qjw",
            "generateName": "ingress-operator-6557486749-",
            "namespace": "openshift-ingress-operator",
            "selfLink": "/api/v1/namespaces/openshift-ingress-operator/pods/ingress-operator-6557486749-h7qjw",
            "uid": "810503a5-a581-4a19-8315-40c1742472f7",
            "resourceVersion": "12143",
            "creationTimestamp": "2021-07-07T11:03:35Z",
            "labels": {
              "name": "ingress-operator",
              "pod-template-hash": "6557486749"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.23\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.23\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "restricted"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "ingress-operator-6557486749",
                "uid": "62d59363-4e91-442d-8868-b84fa84f11a6",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "metrics-tls",
                "secret": { "secretName": "metrics-tls", "defaultMode": 420 }
              },
              {
                "name": "trusted-ca",
                "configMap": {
                  "name": "trusted-ca",
                  "items": [
                    { "key": "ca-bundle.crt", "path": "tls-ca-bundle.pem" }
                  ],
                  "defaultMode": 420
                }
              },
              {
                "name": "bound-sa-token",
                "projected": {
                  "sources": [
                    {
                      "serviceAccountToken": {
                        "audience": "openshift",
                        "expirationSeconds": 3600,
                        "path": "token"
                      }
                    }
                  ],
                  "defaultMode": 420
                }
              },
              {
                "name": "ingress-operator-token-l2tgf",
                "secret": {
                  "secretName": "ingress-operator-token-l2tgf",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "ingress-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5e536619d0ddbc9c8fe66eb05c5cced829c4a11947ca3d77f96c5b5be3d199d9",
                "command": [
                  "ingress-operator",
                  "start",
                  "--namespace",
                  "$(WATCH_NAMESPACE)",
                  "--image",
                  "$(IMAGE)",
                  "--canary-image",
                  "$(CANARY_IMAGE)",
                  "--release-version",
                  "$(RELEASE_VERSION)"
                ],
                "env": [
                  { "name": "RELEASE_VERSION", "value": "4.7.16" },
                  {
                    "name": "WATCH_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cdc05f16135f40d5974e4a827244fb87862219136da7a3d36c8ff2dfc2135a78"
                  },
                  {
                    "name": "CANARY_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:acc160b61389b02278dae6f446272f73d7296e7c9bca928bd1cfc3e12e847c63"
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "56Mi" } },
                "volumeMounts": [
                  {
                    "name": "trusted-ca",
                    "readOnly": true,
                    "mountPath": "/etc/pki/ca-trust/extracted/pem"
                  },
                  {
                    "name": "bound-sa-token",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/openshift/serviceaccount"
                  },
                  {
                    "name": "ingress-operator-token-l2tgf",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  },
                  "runAsUser": 1000020000
                }
              },
              {
                "name": "kube-rbac-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "args": [
                  "--logtostderr",
                  "--secure-listen-address=:9393",
                  "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
                  "--upstream=http://127.0.0.1:60000/",
                  "--tls-cert-file=/etc/tls/private/tls.crt",
                  "--tls-private-key-file=/etc/tls/private/tls.key"
                ],
                "ports": [
                  {
                    "name": "metrics",
                    "containerPort": 9393,
                    "protocol": "TCP"
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "40Mi" } },
                "volumeMounts": [
                  {
                    "name": "metrics-tls",
                    "readOnly": true,
                    "mountPath": "/etc/tls/private"
                  },
                  {
                    "name": "ingress-operator-token-l2tgf",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  },
                  "runAsUser": 1000020000
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux",
              "node-role.kubernetes.io/master": ""
            },
            "serviceAccountName": "ingress-operator",
            "serviceAccount": "ingress-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {
              "seLinuxOptions": { "level": "s0:c5,c0" },
              "fsGroup": 1000020000
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:32:56Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:32:56Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.23",
            "podIPs": [{ "ip": "10.128.0.23" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "ingress-operator",
                "state": { "running": { "startedAt": "2021-07-07T11:32:55Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 1,
                    "reason": "Error",
                    "message": "{\"controller\": \"certificate_publisher_controller\"}\n2021-07-07T11:31:44.248Z\tINFO\toperator.init.controller\tmanager/internal.go:676\tStopping workers\t{\"controller\": \"status_controller\"}\n2021-07-07T11:31:44.248Z\tINFO\toperator.init.controller\tmanager/internal.go:676\tStopping workers\t{\"controller\": \"certificate_controller\"}\n2021-07-07T11:31:44.248Z\tERROR\toperator.init.controller\tcontroller/controller.go:218\tReconciler error\t{\"controller\": \"certificate_controller\", \"name\": \"default\", \"namespace\": \"openshift-ingress-operator\", \"error\": \"failed to ensure router CA: Get \\\"https://172.30.0.1:443/api/v1/namespaces/openshift-ingress-operator/secrets/router-ca\\\": dial tcp 172.30.0.1:443: connect: connection refused\"}\n2021-07-07T11:31:44.250Z\tERROR\toperator.init.controller\tcontroller/controller.go:218\tReconciler error\t{\"controller\": \"status_controller\", \"name\": \"default\", \"namespace\": \"openshift-ingress-operator\", \"error\": \"failed to get clusteroperator ingress: Get \\\"https://172.30.0.1:443/apis/config.openshift.io/v1/clusteroperators/ingress\\\": dial tcp 172.30.0.1:443: connect: connection refused\"}\n2021-07-07T11:31:44.250Z\tERROR\toperator.certificate_publisher_controller\tcertificate-publisher/controller.go:89\tfailed to look up secret for ingresscontroller\t{\"name\": \"openshift-ingress/router-certs-default\", \"related\": \"/apis/operator.openshift.io/v1/namespaces/openshift-ingress-operator/ingresscontrollers/default\", \"error\": \"Get \\\"https://172.30.0.1:443/api/v1/namespaces/openshift-ingress/secrets/router-certs-default\\\": dial tcp 172.30.0.1:443: connect: connection refused\"}\n2021-07-07T11:32:14.252Z\tERROR\toperator.main\tcobra/command.go:854\terror starting\t{\"error\": \"[no matches for kind \\\"Route\\\" in version \\\"route.openshift.io/v1\\\", failed waiting for all runnables to end within grace period of 30s: context deadline exceeded]\", \"errorCauses\": [{\"error\": \"no matches for kind \\\"Route\\\" in version \\\"route.openshift.io/v1\\\"\"}, {\"error\": \"failed waiting for all runnables to end within grace period of 30s: context deadline exceeded\"}]}\n",
                    "startedAt": "2021-07-07T11:30:06Z",
                    "finishedAt": "2021-07-07T11:32:14Z",
                    "containerID": "cri-o://19a7bfc3c8388ba7c5c24969d48e6e879da1dfb30bd1998dd65514e8f32ee5ea"
                  }
                },
                "ready": true,
                "restartCount": 4,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5e536619d0ddbc9c8fe66eb05c5cced829c4a11947ca3d77f96c5b5be3d199d9",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5e536619d0ddbc9c8fe66eb05c5cced829c4a11947ca3d77f96c5b5be3d199d9",
                "containerID": "cri-o://bbb8b4b59a2860909a7bada72de465fb5cdb7117b99a3640fc99cc527a593c49",
                "started": true
              },
              {
                "name": "kube-rbac-proxy",
                "state": { "running": { "startedAt": "2021-07-07T11:26:48Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "containerID": "cri-o://9e0e2ba0d4393f16f073e71fa85decc1ae06ba45a398b0b210a829fa6a9388ca",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-insights": {
        "insights-operator-65bcbd8bbf-n5xcr.json": {
          "metadata": {
            "name": "insights-operator-65bcbd8bbf-n5xcr",
            "generateName": "insights-operator-65bcbd8bbf-",
            "namespace": "openshift-insights",
            "selfLink": "/api/v1/namespaces/openshift-insights/pods/insights-operator-65bcbd8bbf-n5xcr",
            "uid": "1cd23448-cf31-41ba-99ad-02dcfc7282ec",
            "resourceVersion": "8987",
            "creationTimestamp": "2021-07-07T11:03:36Z",
            "labels": {
              "app": "insights-operator",
              "pod-template-hash": "65bcbd8bbf"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.13\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.13\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "restricted"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "insights-operator-65bcbd8bbf",
                "uid": "e15f2e2c-d067-4f3e-aa10-e22cf1fed3ef",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              { "name": "snapshots", "emptyDir": {} },
              {
                "name": "trusted-ca-bundle",
                "configMap": {
                  "name": "trusted-ca-bundle",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "service-ca-bundle",
                "configMap": {
                  "name": "service-ca-bundle",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "serving-cert",
                "secret": {
                  "secretName": "openshift-insights-serving-cert",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "operator-token-2wld2",
                "secret": {
                  "secretName": "operator-token-2wld2",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "insights-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:091c713b147596293b9ab74b2a9fd03ba21c63a166627bc5dfcc66a53d563dee",
                "args": [
                  "start",
                  "-v=4",
                  "--config=/etc/insights-operator/server.yaml"
                ],
                "ports": [
                  { "name": "https", "containerPort": 8443, "protocol": "TCP" }
                ],
                "env": [
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  { "name": "RELEASE_VERSION", "value": "4.7.16" }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "30Mi" } },
                "volumeMounts": [
                  {
                    "name": "snapshots",
                    "mountPath": "/var/lib/insights-operator"
                  },
                  {
                    "name": "trusted-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/var/run/configmaps/trusted-ca-bundle"
                  },
                  {
                    "name": "service-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/var/run/configmaps/service-ca-bundle"
                  },
                  {
                    "name": "serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "operator-token-2wld2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  },
                  "runAsUser": 1000290000
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "beta.kubernetes.io/os": "linux",
              "node-role.kubernetes.io/master": ""
            },
            "serviceAccountName": "operator",
            "serviceAccount": "operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {
              "seLinuxOptions": { "level": "s0:c17,c9" },
              "fsGroup": 1000290000
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 900
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 900
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:27:50Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:27:50Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.13",
            "podIPs": [{ "ip": "10.128.0.13" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "insights-operator",
                "state": { "running": { "startedAt": "2021-07-07T11:27:49Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "3440)\n\t/go/src/github.com/openshift/insights-operator/vendor/golang.org/x/net/http2/frame.go:237 +0x89\ngolang.org/x/net/http2.(*Framer).ReadFrame(0xc00014e1c0, 0xc000ea8150, 0x0, 0x0, 0x0)\n\t/go/src/github.com/openshift/insights-operator/vendor/golang.org/x/net/http2/frame.go:492 +0xa5\ngolang.org/x/net/http2.(*clientConnReadLoop).run(0xc000b55fa8, 0x0, 0x0)\n\t/go/src/github.com/openshift/insights-operator/vendor/golang.org/x/net/http2/transport.go:1819 +0xd8\ngolang.org/x/net/http2.(*ClientConn).readLoop(0xc000102f00)\n\t/go/src/github.com/openshift/insights-operator/vendor/golang.org/x/net/http2/transport.go:1741 +0x6f\ncreated by golang.org/x/net/http2.(*Transport).newClientConn\n\t/go/src/github.com/openshift/insights-operator/vendor/golang.org/x/net/http2/transport.go:705 +0x6c5\n\ngoroutine 23 [chan receive, 1 minutes]:\nk8s.io/apimachinery/pkg/watch.(*Broadcaster).loop(0xc000133800)\n\t/go/src/github.com/openshift/insights-operator/vendor/k8s.io/apimachinery/pkg/watch/mux.go:219 +0x66\ncreated by k8s.io/apimachinery/pkg/watch.NewBroadcaster\n\t/go/src/github.com/openshift/insights-operator/vendor/k8s.io/apimachinery/pkg/watch/mux.go:73 +0xf7\n\ngoroutine 24 [chan receive, 1 minutes]:\nk8s.io/client-go/tools/record.(*eventBroadcasterImpl).StartEventWatcher.func1(0x222a600, 0xc000883980, 0xc00066ea20)\n\t/go/src/github.com/openshift/insights-operator/vendor/k8s.io/client-go/tools/record/event.go:301 +0xaa\ncreated by k8s.io/client-go/tools/record.(*eventBroadcasterImpl).StartEventWatcher\n\t/go/src/github.com/openshift/insights-operator/vendor/k8s.io/client-go/tools/record/event.go:299 +0x6e\n\ngoroutine 25 [chan receive, 1 minutes]:\nk8s.io/client-go/tools/record.(*eventBroadcasterImpl).StartEventWatcher.func1(0x222a600, 0xc000883b30, 0xc000883b00)\n\t/go/src/github.com/openshift/insights-operator/vendor/k8s.io/client-go/tools/record/event.go:301 +0xaa\ncreated by k8s.io/client-go/tools/record.(*eventBroadcasterImpl).StartEventWatcher\n\t/go/src/github.com/openshift/insights-operator/vendor/k8s.io/client-go/tools/record/event.go:299 +0x6e\n",
                    "startedAt": "2021-07-07T11:26:27Z",
                    "finishedAt": "2021-07-07T11:27:48Z",
                    "containerID": "cri-o://66fccf0c70816102773a803ba13213d39f9e40c80546dfebec597f1059607c51"
                  }
                },
                "ready": true,
                "restartCount": 1,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:091c713b147596293b9ab74b2a9fd03ba21c63a166627bc5dfcc66a53d563dee",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:091c713b147596293b9ab74b2a9fd03ba21c63a166627bc5dfcc66a53d563dee",
                "containerID": "cri-o://2c114df5e42df6ec3e7266344a33f86db9e37e48613ae30abbe1ad04d50aa55c",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-kube-apiserver-operator": {
        "kube-apiserver-operator-5cd7cf9c4c-22fz9.json": {
          "metadata": {
            "name": "kube-apiserver-operator-5cd7cf9c4c-22fz9",
            "generateName": "kube-apiserver-operator-5cd7cf9c4c-",
            "namespace": "openshift-kube-apiserver-operator",
            "selfLink": "/api/v1/namespaces/openshift-kube-apiserver-operator/pods/kube-apiserver-operator-5cd7cf9c4c-22fz9",
            "uid": "fa46b0ed-d814-46d0-9992-eddd15cd7a45",
            "resourceVersion": "339769",
            "creationTimestamp": "2021-07-07T11:03:39Z",
            "labels": {
              "app": "kube-apiserver-operator",
              "pod-template-hash": "5cd7cf9c4c"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.18\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.18\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "kube-apiserver-operator-5cd7cf9c4c",
                "uid": "f562f8cb-8e4c-4fa1-aa88-35582ce68bfd",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "serving-cert",
                "secret": {
                  "secretName": "kube-apiserver-operator-serving-cert",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "config",
                "configMap": {
                  "name": "kube-apiserver-operator-config",
                  "defaultMode": 420
                }
              },
              {
                "name": "kube-apiserver-operator-token-966kq",
                "secret": {
                  "secretName": "kube-apiserver-operator-token-966kq",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "kube-apiserver-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:216036695cfba60c95e392ac8d439bd2f1e519d9cfa32f4bfa691e8796bc5e17",
                "command": ["cluster-kube-apiserver-operator", "operator"],
                "args": ["--config=/var/run/configmaps/config/config.yaml"],
                "ports": [
                  {
                    "name": "metrics",
                    "containerPort": 8443,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842"
                  },
                  {
                    "name": "OPERATOR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:216036695cfba60c95e392ac8d439bd2f1e519d9cfa32f4bfa691e8796bc5e17"
                  },
                  { "name": "OPERAND_IMAGE_VERSION", "value": "1.20.0-beta.2" },
                  { "name": "OPERATOR_IMAGE_VERSION", "value": "4.7.16" },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/var/run/configmaps/config"
                  },
                  {
                    "name": "serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "kube-apiserver-operator-token-966kq",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "kube-apiserver-operator",
            "serviceAccount": "kube-apiserver-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:16Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:16Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.18",
            "podIPs": [{ "ip": "10.128.0.18" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "kube-apiserver-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:16Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "58 +0x135\n\ngoroutine 313 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000239860)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 317 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000d54c60)\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:58 +0x135\n\ngoroutine 318 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000d54e40)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 319 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000d55260)\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:58 +0x135\n\ngoroutine 320 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000d55380)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 321 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000d553e0)\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:58 +0x135\n\ngoroutine 402 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000d559e0)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n",
                    "startedAt": "2021-07-08T10:59:33Z",
                    "finishedAt": "2021-07-08T11:00:04Z",
                    "containerID": "cri-o://8a54276492b7d3703e9da27de3f7a68aa8553f87fedc71a65040a923b2f11819"
                  }
                },
                "ready": true,
                "restartCount": 11,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:216036695cfba60c95e392ac8d439bd2f1e519d9cfa32f4bfa691e8796bc5e17",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:216036695cfba60c95e392ac8d439bd2f1e519d9cfa32f4bfa691e8796bc5e17",
                "containerID": "cri-o://d9c36d9c3c11a5e7f1e38586d6d0a29a82e8ef3444e2fdbbcd8b5ac04bae0543",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-kube-controller-manager": {
        "kube-controller-manager-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.json": {
          "metadata": {
            "name": "kube-controller-manager-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "namespace": "openshift-kube-controller-manager",
            "selfLink": "/api/v1/namespaces/openshift-kube-controller-manager/pods/kube-controller-manager-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "uid": "3844fb3d-1fbe-4088-84d5-d57a8d1d1b1a",
            "resourceVersion": "643341",
            "creationTimestamp": "2021-07-07T11:42:37Z",
            "labels": {
              "app": "kube-controller-manager",
              "kube-controller-manager": "true",
              "revision": "7"
            },
            "annotations": {
              "kubectl.kubernetes.io/default-logs-container": "kube-controller-manager",
              "kubernetes.io/config.hash": "dd2fb649-76b3-4661-a7d8-a9c4b2228ca8",
              "kubernetes.io/config.mirror": "dd2fb649-76b3-4661-a7d8-a9c4b2228ca8",
              "kubernetes.io/config.seen": "2021-07-07T11:42:23.177070831Z",
              "kubernetes.io/config.source": "file"
            },
            "ownerReferences": [
              {
                "apiVersion": "v1",
                "kind": "Node",
                "name": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
                "uid": "7b9db4ae-6ec2-45b7-ba44-dd0df8e32466",
                "controller": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "resource-dir",
                "hostPath": {
                  "path": "/etc/kubernetes/static-pod-resources/kube-controller-manager-pod-7",
                  "type": ""
                }
              },
              {
                "name": "cert-dir",
                "hostPath": {
                  "path": "/etc/kubernetes/static-pod-resources/kube-controller-manager-certs",
                  "type": ""
                }
              }
            ],
            "containers": [
              {
                "name": "kube-controller-manager",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                "command": ["/bin/bash", "-euxo", "pipefail", "-c"],
                "args": [
                  "timeout 3m /bin/bash -exuo pipefail -c 'while [ -n \"$(ss -Htanop \\( sport = 10257 \\))\" ]; do sleep 1; done'\n\nif [ -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then\n  echo \"Copying system trust bundle\"\n  cp -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem\nfi\n\nif [ -f /etc/kubernetes/static-pod-resources/configmaps/cloud-config/ca-bundle.pem ]; then\n  echo \"Setting custom CA bundle for cloud provider\"\n  export AWS_CA_BUNDLE=/etc/kubernetes/static-pod-resources/configmaps/cloud-config/ca-bundle.pem\nfi\n\nexec hyperkube kube-controller-manager --openshift-config=/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml \\\n  --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\\n  --authentication-kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\\n  --authorization-kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/controller-manager-kubeconfig/kubeconfig \\\n  --client-ca-file=/etc/kubernetes/static-pod-certs/configmaps/client-ca/ca-bundle.crt \\\n  --requestheader-client-ca-file=/etc/kubernetes/static-pod-certs/configmaps/aggregator-client-ca/ca-bundle.crt -v=2 --tls-cert-file=/etc/kubernetes/static-pod-resources/secrets/serving-cert/tls.crt --tls-private-key-file=/etc/kubernetes/static-pod-resources/secrets/serving-cert/tls.key --allocate-node-cidrs=false --cert-dir=/var/run/kubernetes --cluster-cidr=10.128.0.0/14 --cluster-name=imeixner20210707-wnrhq --cluster-signing-cert-file=/etc/kubernetes/static-pod-certs/secrets/csr-signer/tls.crt --cluster-signing-key-file=/etc/kubernetes/static-pod-certs/secrets/csr-signer/tls.key --configure-cloud-routes=false --controllers=* --controllers=-bootstrapsigner --controllers=-tokencleaner --controllers=-ttl --enable-dynamic-provisioning=true --experimental-cluster-signing-duration=720h --feature-gates=APIPriorityAndFairness=true --feature-gates=LegacyNodeRoleBehavior=false --feature-gates=NodeDisruptionExclusion=true --feature-gates=RemoveSelfLink=false --feature-gates=RotateKubeletServerCertificate=true --feature-gates=SCTPSupport=true --feature-gates=ServiceNodeExclusion=true --feature-gates=SupportPodPidsLimit=true --flex-volume-plugin-dir=/etc/kubernetes/kubelet-plugins/volume/exec --kube-api-burst=300 --kube-api-qps=150 --leader-elect-resource-lock=configmaps --leader-elect-retry-period=3s --leader-elect=true --port=0 --pv-recycler-pod-template-filepath-hostpath=/etc/kubernetes/static-pod-resources/configmaps/recycler-config/recycler-pod.yaml --pv-recycler-pod-template-filepath-nfs=/etc/kubernetes/static-pod-resources/configmaps/recycler-config/recycler-pod.yaml --root-ca-file=/etc/kubernetes/static-pod-resources/configmaps/serviceaccount-ca/ca-bundle.crt --secure-port=10257 --service-account-private-key-file=/etc/kubernetes/static-pod-resources/secrets/service-account-private-key/service-account.key --service-cluster-ip-range=172.30.0.0/16 --use-service-account-credentials=true"
                ],
                "ports": [
                  {
                    "hostPort": 10257,
                    "containerPort": 10257,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "requests": { "cpu": "60m", "memory": "200Mi" }
                },
                "volumeMounts": [
                  {
                    "name": "resource-dir",
                    "mountPath": "/etc/kubernetes/static-pod-resources"
                  },
                  {
                    "name": "cert-dir",
                    "mountPath": "/etc/kubernetes/static-pod-certs"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "healthz",
                    "port": 10257,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 45,
                  "timeoutSeconds": 10,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "healthz",
                    "port": 10257,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 10,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "startupProbe": {
                  "httpGet": {
                    "path": "healthz",
                    "port": 10257,
                    "scheme": "HTTPS"
                  },
                  "timeoutSeconds": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "cluster-policy-controller",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:93e1480ab43bbc3e009dbb8682a8e51389f976108654992f4e5ac93eaf3249f6",
                "command": ["/bin/bash", "-euxo", "pipefail", "-c"],
                "args": [
                  "timeout 3m /bin/bash -exuo pipefail -c 'while [ -n \"$(ss -Htanop \\( sport = 10357 \\))\" ]; do sleep 1; done'\n\nexec cluster-policy-controller start --config=/etc/kubernetes/static-pod-resources/configmaps/cluster-policy-controller-config/config.yaml -v=2\n"
                ],
                "ports": [
                  {
                    "hostPort": 10357,
                    "containerPort": 10357,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "requests": { "cpu": "10m", "memory": "200Mi" }
                },
                "volumeMounts": [
                  {
                    "name": "resource-dir",
                    "mountPath": "/etc/kubernetes/static-pod-resources"
                  },
                  {
                    "name": "cert-dir",
                    "mountPath": "/etc/kubernetes/static-pod-certs"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "healthz",
                    "port": 10357,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 45,
                  "timeoutSeconds": 10,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "healthz",
                    "port": 10357,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 10,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "startupProbe": {
                  "httpGet": {
                    "path": "healthz",
                    "port": 10357,
                    "scheme": "HTTPS"
                  },
                  "timeoutSeconds": 3,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "kube-controller-manager-cert-syncer",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8c180fe987e113b2e5615a56e28c54343ecac83f9d76f901291fc9dd4ef620ac",
                "command": [
                  "cluster-kube-controller-manager-operator",
                  "cert-syncer"
                ],
                "args": [
                  "--kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-controller-cert-syncer-kubeconfig/kubeconfig",
                  "--namespace=$(POD_NAMESPACE)",
                  "--destination-dir=/etc/kubernetes/static-pod-certs"
                ],
                "env": [
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "5m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "resource-dir",
                    "mountPath": "/etc/kubernetes/static-pod-resources"
                  },
                  {
                    "name": "cert-dir",
                    "mountPath": "/etc/kubernetes/static-pod-certs"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "kube-controller-manager-recovery-controller",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8c180fe987e113b2e5615a56e28c54343ecac83f9d76f901291fc9dd4ef620ac",
                "command": ["/bin/bash", "-euxo", "pipefail", "-c"],
                "args": [
                  "timeout 3m /bin/bash -exuo pipefail -c 'while [ -n \"$(ss -Htanop \\( sport = 9443 \\))\" ]; do sleep 1; done'\n\nexec cluster-kube-controller-manager-operator cert-recovery-controller --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-controller-cert-syncer-kubeconfig/kubeconfig --namespace=${POD_NAMESPACE} --listen=0.0.0.0:9443 -v=2\n"
                ],
                "env": [
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "5m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "resource-dir",
                    "mountPath": "/etc/kubernetes/static-pod-resources"
                  },
                  {
                    "name": "cert-dir",
                    "mountPath": "/etc/kubernetes/static-pod-certs"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "hostNetwork": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [{ "operator": "Exists" }],
            "priorityClassName": "system-node-critical",
            "priority": 2000001000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:27:27Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-09T09:21:41Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-09T09:21:41Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:27:27Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.0.88.27",
            "podIPs": [{ "ip": "10.0.88.27" }],
            "startTime": "2021-07-07T11:27:27Z",
            "containerStatuses": [
              {
                "name": "cluster-policy-controller",
                "state": { "running": { "startedAt": "2021-07-09T09:20:27Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 1,
                    "reason": "Error",
                    "message": ":56.794201       1 request.go:645] Throttling request took 1.056910557s, request: GET:https://api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443/apis/quota.openshift.io/v1?timeout=32s\nI0709 09:18:57.856730       1 request.go:645] Throttling request took 2.119187529s, request: GET:https://api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443/apis/machineconfiguration.openshift.io/v1?timeout=32s\nI0709 09:18:58.919216       1 request.go:645] Throttling request took 3.181522641s, request: GET:https://api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443/apis/helm.openshift.io/v1beta1?timeout=32s\nI0709 09:18:59.970941       1 request.go:645] Throttling request took 1.11978033s, request: GET:https://api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443/apis/route.openshift.io/v1?timeout=32s\nI0709 09:19:00.971014       1 request.go:645] Throttling request took 2.119708701s, request: GET:https://api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443/apis/machineconfiguration.openshift.io/v1?timeout=32s\nI0709 09:19:01.971118       1 request.go:645] Throttling request took 3.119663061s, request: GET:https://api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443/apis/whereabouts.cni.cncf.io/v1alpha1?timeout=32s\nE0709 09:19:56.085882       1 leaderelection.go:321] error retrieving resource lock openshift-kube-controller-manager/cluster-policy-controller: Get \"https://api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443/api/v1/namespaces/openshift-kube-controller-manager/configmaps/cluster-policy-controller\": context deadline exceeded\nI0709 09:19:56.086021       1 leaderelection.go:278] failed to renew lease openshift-kube-controller-manager/cluster-policy-controller: timed out waiting for the condition\nE0709 09:19:56.086171       1 leaderelection.go:297] Failed to release lock: resource name may not be empty\nF0709 09:19:56.086222       1 policy_controller.go:107] leaderelection lost\nI0709 09:19:56.086241       1 reconciliation_controller.go:154] Shutting down ClusterQuotaReconcilationController\n",
                    "startedAt": "2021-07-08T10:59:31Z",
                    "finishedAt": "2021-07-09T09:19:56Z",
                    "containerID": "cri-o://e8b73a65d3e4258934483c16a392de5771fa50bcd0ead78cca8e9db65636e3a6"
                  }
                },
                "ready": true,
                "restartCount": 12,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:93e1480ab43bbc3e009dbb8682a8e51389f976108654992f4e5ac93eaf3249f6",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:93e1480ab43bbc3e009dbb8682a8e51389f976108654992f4e5ac93eaf3249f6",
                "containerID": "cri-o://d3f9321937ca6d07f78fb604e0c7a2495a543d5a32329ba55f3df08256c04eb9",
                "started": true
              },
              {
                "name": "kube-controller-manager",
                "state": { "running": { "startedAt": "2021-07-09T09:21:30Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 0,
                    "reason": "Completed",
                    "startedAt": "2021-07-09T09:20:27Z",
                    "finishedAt": "2021-07-09T09:21:30Z",
                    "containerID": "cri-o://ec291392a995c0e1c930a2357ab776673333a66fc7f0f96e48b9d2fba1cb0227"
                  }
                },
                "ready": true,
                "restartCount": 18,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                "containerID": "cri-o://89a0a04b020cb3e4c4935131eb164adf39b29ee83aeeb4459f91585b1352e199",
                "started": true
              },
              {
                "name": "kube-controller-manager-cert-syncer",
                "state": { "running": { "startedAt": "2021-07-07T11:42:38Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8c180fe987e113b2e5615a56e28c54343ecac83f9d76f901291fc9dd4ef620ac",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8c180fe987e113b2e5615a56e28c54343ecac83f9d76f901291fc9dd4ef620ac",
                "containerID": "cri-o://8a84951edc28d5099746441da0e36baa2af1d6b58aef0e6ca3bd8831f585070f",
                "started": true
              },
              {
                "name": "kube-controller-manager-recovery-controller",
                "state": { "running": { "startedAt": "2021-07-08T10:59:31Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 0,
                    "reason": "Completed",
                    "startedAt": "2021-07-08T06:17:48Z",
                    "finishedAt": "2021-07-08T10:59:30Z",
                    "containerID": "cri-o://f6caca42006423e82b8359fd1df4447413317b01f9516276a100afdc96216796"
                  }
                },
                "ready": true,
                "restartCount": 4,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8c180fe987e113b2e5615a56e28c54343ecac83f9d76f901291fc9dd4ef620ac",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8c180fe987e113b2e5615a56e28c54343ecac83f9d76f901291fc9dd4ef620ac",
                "containerID": "cri-o://c25cde853f2f162e2b90017b76e0cc8244b2c32dd11a9ba7b82a3301b6947197",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-kube-controller-manager-operator": {
        "kube-controller-manager-operator-666b69fd7f-sb86z.json": {
          "metadata": {
            "name": "kube-controller-manager-operator-666b69fd7f-sb86z",
            "generateName": "kube-controller-manager-operator-666b69fd7f-",
            "namespace": "openshift-kube-controller-manager-operator",
            "selfLink": "/api/v1/namespaces/openshift-kube-controller-manager-operator/pods/kube-controller-manager-operator-666b69fd7f-sb86z",
            "uid": "018cd35a-d5bc-4fe2-a49d-1baa1c4a9c3f",
            "resourceVersion": "339758",
            "creationTimestamp": "2021-07-07T11:03:18Z",
            "labels": {
              "app": "kube-controller-manager-operator",
              "pod-template-hash": "666b69fd7f"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.4\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.4\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "kube-controller-manager-operator-666b69fd7f",
                "uid": "e549d0b3-44de-4a1e-849a-b77c3a17bb2a",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "serving-cert",
                "secret": {
                  "secretName": "kube-controller-manager-operator-serving-cert",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "config",
                "configMap": {
                  "name": "kube-controller-manager-operator-config",
                  "defaultMode": 420
                }
              },
              {
                "name": "kube-controller-manager-operator-token-crsbp",
                "secret": {
                  "secretName": "kube-controller-manager-operator-token-crsbp",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "kube-controller-manager-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8c180fe987e113b2e5615a56e28c54343ecac83f9d76f901291fc9dd4ef620ac",
                "command": [
                  "cluster-kube-controller-manager-operator",
                  "operator"
                ],
                "args": ["--config=/var/run/configmaps/config/config.yaml"],
                "ports": [
                  {
                    "name": "metrics",
                    "containerPort": 8443,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842"
                  },
                  {
                    "name": "OPERATOR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8c180fe987e113b2e5615a56e28c54343ecac83f9d76f901291fc9dd4ef620ac"
                  },
                  {
                    "name": "CLUSTER_POLICY_CONTROLLER_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:93e1480ab43bbc3e009dbb8682a8e51389f976108654992f4e5ac93eaf3249f6"
                  },
                  {
                    "name": "TOOLS_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fac0ad2da7e61cb33bb500b1c4a5cb817e4ac14db0a2bb55252b6ce4e1033320"
                  },
                  { "name": "OPERATOR_IMAGE_VERSION", "value": "4.7.16" },
                  { "name": "OPERAND_IMAGE_VERSION", "value": "1.20.0-beta.2" },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/var/run/configmaps/config"
                  },
                  {
                    "name": "serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "kube-controller-manager-operator-token-crsbp",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "kube-controller-manager-operator",
            "serviceAccount": "kube-controller-manager-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:19Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:19Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.4",
            "podIPs": [{ "ip": "10.128.0.4" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "kube-controller-manager-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:19Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "58 +0x135\n\ngoroutine 389 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000e2aea0)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 390 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000e2af00)\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:58 +0x135\n\ngoroutine 391 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000e2b020)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 392 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000e2b080)\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:58 +0x135\n\ngoroutine 393 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000e2b1a0)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 261 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc001072600)\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:58 +0x135\n\ngoroutine 225 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc001274fc0)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n",
                    "startedAt": "2021-07-08T10:59:32Z",
                    "finishedAt": "2021-07-08T11:00:03Z",
                    "containerID": "cri-o://5f15e7bd5991ce28c41cee94c11fba504088796ab68813e3cbd6197d062a8c47"
                  }
                },
                "ready": true,
                "restartCount": 11,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8c180fe987e113b2e5615a56e28c54343ecac83f9d76f901291fc9dd4ef620ac",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8c180fe987e113b2e5615a56e28c54343ecac83f9d76f901291fc9dd4ef620ac",
                "containerID": "cri-o://29c3bd1fce3ffa2cbb69a135e5e557f990a1a1f333c314b05b5f2dd1eb57c100",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-kube-scheduler": {
        "openshift-kube-scheduler-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com.json": {
          "metadata": {
            "name": "openshift-kube-scheduler-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "namespace": "openshift-kube-scheduler",
            "selfLink": "/api/v1/namespaces/openshift-kube-scheduler/pods/openshift-kube-scheduler-master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "uid": "a41fa289-2c71-4826-ace8-b9eb57a814b0",
            "resourceVersion": "643340",
            "creationTimestamp": "2021-07-07T11:34:48Z",
            "labels": {
              "app": "openshift-kube-scheduler",
              "revision": "7",
              "scheduler": "true"
            },
            "annotations": {
              "kubectl.kubernetes.io/default-logs-container": "kube-scheduler",
              "kubernetes.io/config.hash": "35f4f810-17b0-4b07-bac5-7b8de3e37726",
              "kubernetes.io/config.mirror": "35f4f810-17b0-4b07-bac5-7b8de3e37726",
              "kubernetes.io/config.seen": "2021-07-07T11:34:32.592850902Z",
              "kubernetes.io/config.source": "file"
            },
            "ownerReferences": [
              {
                "apiVersion": "v1",
                "kind": "Node",
                "name": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
                "uid": "7b9db4ae-6ec2-45b7-ba44-dd0df8e32466",
                "controller": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "resource-dir",
                "hostPath": {
                  "path": "/etc/kubernetes/static-pod-resources/kube-scheduler-pod-7",
                  "type": ""
                }
              },
              {
                "name": "cert-dir",
                "hostPath": {
                  "path": "/etc/kubernetes/static-pod-resources/kube-scheduler-certs",
                  "type": ""
                }
              }
            ],
            "initContainers": [
              {
                "name": "wait-for-host-port",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                "command": ["/usr/bin/timeout", "30", "/bin/bash", "-c"],
                "args": [
                  "echo -n \"Waiting for port :10259 and :10251 to be released.\"\nwhile [ -n \"$(ss -Htan '( sport = 10251 or sport = 10259 )')\" ]; do\n  echo -n \".\"\n  sleep 1\ndone\n"
                ],
                "resources": { "requests": { "cpu": "15m", "memory": "50Mi" } },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "containers": [
              {
                "name": "kube-scheduler",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                "command": ["hyperkube", "kube-scheduler"],
                "args": [
                  "--config=/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml",
                  "--cert-dir=/var/run/kubernetes",
                  "--port=0",
                  "--authentication-kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/scheduler-kubeconfig/kubeconfig",
                  "--authorization-kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/scheduler-kubeconfig/kubeconfig",
                  "--feature-gates=APIPriorityAndFairness=true,LegacyNodeRoleBehavior=false,NodeDisruptionExclusion=true,RemoveSelfLink=false,RotateKubeletServerCertificate=true,SCTPSupport=true,ServiceNodeExclusion=true,SupportPodPidsLimit=true",
                  "-v=2",
                  "--tls-cert-file=/etc/kubernetes/static-pod-resources/secrets/serving-cert/tls.crt",
                  "--tls-private-key-file=/etc/kubernetes/static-pod-resources/secrets/serving-cert/tls.key"
                ],
                "ports": [
                  {
                    "hostPort": 10259,
                    "containerPort": 10259,
                    "protocol": "TCP"
                  }
                ],
                "resources": { "requests": { "cpu": "15m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "resource-dir",
                    "mountPath": "/etc/kubernetes/static-pod-resources"
                  },
                  {
                    "name": "cert-dir",
                    "mountPath": "/etc/kubernetes/static-pod-certs"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "healthz",
                    "port": 10259,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 45,
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "healthz",
                    "port": 10259,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 45,
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "kube-scheduler-cert-syncer",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:47ccc812096de6c666395ad3661145c0d24b890f35fe2e21757640558e6ee11c",
                "command": ["cluster-kube-scheduler-operator", "cert-syncer"],
                "args": [
                  "--kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-scheduler-cert-syncer-kubeconfig/kubeconfig",
                  "--namespace=$(POD_NAMESPACE)",
                  "--destination-dir=/etc/kubernetes/static-pod-certs"
                ],
                "env": [
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "5m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "resource-dir",
                    "mountPath": "/etc/kubernetes/static-pod-resources"
                  },
                  {
                    "name": "cert-dir",
                    "mountPath": "/etc/kubernetes/static-pod-certs"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "kube-scheduler-recovery-controller",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:47ccc812096de6c666395ad3661145c0d24b890f35fe2e21757640558e6ee11c",
                "command": ["/bin/bash", "-euxo", "pipefail", "-c"],
                "args": [
                  "timeout 3m /bin/bash -exuo pipefail -c 'while [ -n \"$(ss -Htanop \\( sport = 11443 \\))\" ]; do sleep 1; done'\n\nexec cluster-kube-scheduler-operator cert-recovery-controller --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-scheduler-cert-syncer-kubeconfig/kubeconfig  --namespace=${POD_NAMESPACE} --listen=0.0.0.0:11443 -v=2\n"
                ],
                "env": [
                  {
                    "name": "POD_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "5m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "resource-dir",
                    "mountPath": "/etc/kubernetes/static-pod-resources"
                  },
                  {
                    "name": "cert-dir",
                    "mountPath": "/etc/kubernetes/static-pod-certs"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "hostNetwork": true,
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [{ "operator": "Exists" }],
            "priorityClassName": "system-node-critical",
            "priority": 2000001000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:34:49Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-09T09:20:19Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-09T09:20:19Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:27:01Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.0.88.27",
            "podIPs": [{ "ip": "10.0.88.27" }],
            "startTime": "2021-07-07T11:27:01Z",
            "initContainerStatuses": [
              {
                "name": "wait-for-host-port",
                "state": {
                  "terminated": {
                    "exitCode": 0,
                    "reason": "Completed",
                    "startedAt": "2021-07-07T11:34:49Z",
                    "finishedAt": "2021-07-07T11:34:49Z",
                    "containerID": "cri-o://66e4275a33daf1cbac184dd1eec991254361634536325f65c87104722425176a"
                  }
                },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                "containerID": "cri-o://66e4275a33daf1cbac184dd1eec991254361634536325f65c87104722425176a"
              }
            ],
            "containerStatuses": [
              {
                "name": "kube-scheduler",
                "state": { "running": { "startedAt": "2021-07-09T09:19:26Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 1,
                    "reason": "Error",
                    "message": "ln\" err=\"0/2 nodes are available: 1 node(s) didn't have free ports for the requested pod ports, 1 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate.\"\nI0709 09:18:07.115601       1 scheduler.go:592] \"Successfully bound pod to node\" pod=\"openshift-marketplace/redhat-operators-5n74x\" node=\"worker-0.imeixner20210707.lab.upshift.rdu2.redhat.com\" evaluatedNodes=2 feasibleNodes=1\nI0709 09:18:25.828887       1 factory.go:321] \"Unable to schedule pod; no fit; waiting\" pod=\"openshift-etcd/etcd-quorum-guard-5f6f5fbc4c-2g24w\" err=\"0/2 nodes are available: 1 node(s) didn't match Pod's node affinity, 1 node(s) didn't match pod affinity/anti-affinity, 1 node(s) didn't match pod anti-affinity rules.\"\nI0709 09:18:25.829620       1 factory.go:321] \"Unable to schedule pod; no fit; waiting\" pod=\"openshift-etcd/etcd-quorum-guard-5f6f5fbc4c-4q86s\" err=\"0/2 nodes are available: 1 node(s) didn't match Pod's node affinity, 1 node(s) didn't match pod affinity/anti-affinity, 1 node(s) didn't match pod anti-affinity rules.\"\nI0709 09:18:25.829771       1 factory.go:321] \"Unable to schedule pod; no fit; waiting\" pod=\"openshift-ingress/router-default-7bbdcfcf9b-7xdln\" err=\"0/2 nodes are available: 1 node(s) didn't have free ports for the requested pod ports, 1 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate.\"\nE0709 09:19:25.234377       1 leaderelection.go:325] error retrieving resource lock openshift-kube-scheduler/kube-scheduler: Get \"https://api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443/api/v1/namespaces/openshift-kube-scheduler/configmaps/kube-scheduler?timeout=10s\": net/http: request canceled (Client.Timeout exceeded while awaiting headers)\nI0709 09:19:25.234477       1 leaderelection.go:278] failed to renew lease openshift-kube-scheduler/kube-scheduler: timed out waiting for the condition\nE0709 09:19:25.234532       1 leaderelection.go:301] Failed to release lock: resource name may not be empty\nF0709 09:19:25.235782       1 server.go:217] leaderelection lost\n",
                    "startedAt": "2021-07-08T10:59:04Z",
                    "finishedAt": "2021-07-09T09:19:25Z",
                    "containerID": "cri-o://1ed1ff9c6061cb725c46ba9559925ce9a5fda8465b7e425a62e4145dc82286d5"
                  }
                },
                "ready": true,
                "restartCount": 13,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                "containerID": "cri-o://a43231671a1ea4101efb3835c68e45afbb6b0827e6023daa38e6fafabb6e4636",
                "started": true
              },
              {
                "name": "kube-scheduler-cert-syncer",
                "state": { "running": { "startedAt": "2021-07-07T11:34:50Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:47ccc812096de6c666395ad3661145c0d24b890f35fe2e21757640558e6ee11c",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:47ccc812096de6c666395ad3661145c0d24b890f35fe2e21757640558e6ee11c",
                "containerID": "cri-o://21a85b04a47c2a4d0ec58f2c8bb6146b3fef5e13b8881890a21edbbaf3fb414f",
                "started": true
              },
              {
                "name": "kube-scheduler-recovery-controller",
                "state": { "running": { "startedAt": "2021-07-08T10:59:33Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 0,
                    "reason": "Completed",
                    "startedAt": "2021-07-08T06:17:48Z",
                    "finishedAt": "2021-07-08T10:59:31Z",
                    "containerID": "cri-o://318fa73c897013fd43d9a83f9d2840a2f298d4d49faba434cb381de7d9cae18f"
                  }
                },
                "ready": true,
                "restartCount": 6,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:47ccc812096de6c666395ad3661145c0d24b890f35fe2e21757640558e6ee11c",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:47ccc812096de6c666395ad3661145c0d24b890f35fe2e21757640558e6ee11c",
                "containerID": "cri-o://2472dc97b26adf6fb7dcfd259ad50a18943d0fa886cd5abc35ec3e5b2ac1bcda",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-kube-scheduler-operator": {
        "openshift-kube-scheduler-operator-766984867f-5nzpf.json": {
          "metadata": {
            "name": "openshift-kube-scheduler-operator-766984867f-5nzpf",
            "generateName": "openshift-kube-scheduler-operator-766984867f-",
            "namespace": "openshift-kube-scheduler-operator",
            "selfLink": "/api/v1/namespaces/openshift-kube-scheduler-operator/pods/openshift-kube-scheduler-operator-766984867f-5nzpf",
            "uid": "e441cf90-f75b-41de-b0a7-457115aa5c7b",
            "resourceVersion": "339750",
            "creationTimestamp": "2021-07-07T11:03:17Z",
            "labels": {
              "app": "openshift-kube-scheduler-operator",
              "pod-template-hash": "766984867f"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.6\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.6\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "openshift-kube-scheduler-operator-766984867f",
                "uid": "02acc375-3e22-49f9-ae35-e8b8a08577cf",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "serving-cert",
                "secret": {
                  "secretName": "kube-scheduler-operator-serving-cert",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "config",
                "configMap": {
                  "name": "openshift-kube-scheduler-operator-config",
                  "defaultMode": 420
                }
              },
              {
                "name": "openshift-kube-scheduler-operator-token-nghjd",
                "secret": {
                  "secretName": "openshift-kube-scheduler-operator-token-nghjd",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "kube-scheduler-operator-container",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:47ccc812096de6c666395ad3661145c0d24b890f35fe2e21757640558e6ee11c",
                "command": ["cluster-kube-scheduler-operator", "operator"],
                "args": [
                  "--config=/var/run/configmaps/config/config.yaml",
                  "-v=2"
                ],
                "env": [
                  {
                    "name": "IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842"
                  },
                  {
                    "name": "OPERATOR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:47ccc812096de6c666395ad3661145c0d24b890f35fe2e21757640558e6ee11c"
                  },
                  { "name": "OPERATOR_IMAGE_VERSION", "value": "4.7.16" },
                  { "name": "OPERAND_IMAGE_VERSION", "value": "1.20.0-beta.2" },
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/var/run/configmaps/config"
                  },
                  {
                    "name": "serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "openshift-kube-scheduler-operator-token-nghjd",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "openshift-kube-scheduler-operator",
            "serviceAccount": "openshift-kube-scheduler-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:19Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:19Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.6",
            "podIPs": [{ "ip": "10.128.0.6" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "kube-scheduler-operator-container",
                "state": { "running": { "startedAt": "2021-07-08T11:00:19Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "58 +0x135\n\ngoroutine 420 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0011984e0)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 312 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000bd8ba0)\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:58 +0x135\n\ngoroutine 313 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000bd8cc0)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 314 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000bd8d20)\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:58 +0x135\n\ngoroutine 315 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000bd8e40)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 316 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc000bd8ea0)\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/queue.go:58 +0x135\n\ngoroutine 317 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000bd9020)\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.20.1/util/workqueue/delaying_queue.go:68 +0x185\n",
                    "startedAt": "2021-07-08T10:59:33Z",
                    "finishedAt": "2021-07-08T11:00:04Z",
                    "containerID": "cri-o://048016a0fba3c434d791f51e5fd148a9e6081e7a43b474ad20d66e0ff7b310fb"
                  }
                },
                "ready": true,
                "restartCount": 9,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:47ccc812096de6c666395ad3661145c0d24b890f35fe2e21757640558e6ee11c",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:47ccc812096de6c666395ad3661145c0d24b890f35fe2e21757640558e6ee11c",
                "containerID": "cri-o://d9782b46d34c043d7b437b551376d98616bbaf8e6b248e3acd16d79dd00e7c4b",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-kube-storage-version-migrator-operator": {
        "kube-storage-version-migrator-operator-bdddd9479-x47l2.json": {
          "metadata": {
            "name": "kube-storage-version-migrator-operator-bdddd9479-x47l2",
            "generateName": "kube-storage-version-migrator-operator-bdddd9479-",
            "namespace": "openshift-kube-storage-version-migrator-operator",
            "selfLink": "/api/v1/namespaces/openshift-kube-storage-version-migrator-operator/pods/kube-storage-version-migrator-operator-bdddd9479-x47l2",
            "uid": "36dc0ae7-d287-41d7-8fd4-7f4236ab89fe",
            "resourceVersion": "339771",
            "creationTimestamp": "2021-07-07T11:03:21Z",
            "labels": {
              "app": "kube-storage-version-migrator-operator",
              "pod-template-hash": "bdddd9479"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.10\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.10\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "anyuid"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "kube-storage-version-migrator-operator-bdddd9479",
                "uid": "7d9aaf1b-96bf-49ca-8e2f-4656181e2bc9",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "serving-cert",
                "secret": {
                  "secretName": "serving-cert",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "config",
                "configMap": { "name": "config", "defaultMode": 420 }
              },
              {
                "name": "kube-storage-version-migrator-operator-token-4hjtm",
                "secret": {
                  "secretName": "kube-storage-version-migrator-operator-token-4hjtm",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "kube-storage-version-migrator-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:264df95514c9b7096c3c74fcb56cd3906c823705edbe66e5a0fc20a8dd10b467",
                "command": [
                  "cluster-kube-storage-version-migrator-operator",
                  "start"
                ],
                "args": ["--config=/var/run/configmaps/config/config.yaml"],
                "ports": [
                  {
                    "name": "metrics",
                    "containerPort": 8443,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:58eaabc7021dc53fffab058ec9321fabba5c6bbb9d7e91dac203ad6fb9417603"
                  },
                  {
                    "name": "OPERATOR_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:264df95514c9b7096c3c74fcb56cd3906c823705edbe66e5a0fc20a8dd10b467"
                  },
                  { "name": "OPERATOR_IMAGE_VERSION", "value": "4.7.16" },
                  { "name": "OPERAND_IMAGE_VERSION", "value": "4.7.16" }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/var/run/configmaps/config"
                  },
                  {
                    "name": "serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "kube-storage-version-migrator-operator-token-4hjtm",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "capabilities": { "drop": ["MKNOD"] } }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "kube-storage-version-migrator-operator",
            "serviceAccount": "kube-storage-version-migrator-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": { "seLinuxOptions": { "level": "s0:c18,c17" } },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:17Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:17Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.10",
            "podIPs": [{ "ip": "10.128.0.10" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "kube-storage-version-migrator-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:17Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "aying_queue.go:68 +0x185\n\ngoroutine 994 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc00087cd80)\n\tk8s.io/client-go@v0.19.2/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.19.2/util/workqueue/queue.go:58 +0x135\n\ngoroutine 996 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc000612de0)\n\tk8s.io/client-go@v0.19.2/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.19.2/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 955 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc001084600)\n\tk8s.io/client-go@v0.19.2/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.19.2/util/workqueue/queue.go:58 +0x135\n\ngoroutine 957 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc0010847e0)\n\tk8s.io/client-go@v0.19.2/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.19.2/util/workqueue/delaying_queue.go:68 +0x185\n\ngoroutine 972 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc0008da240)\n\tk8s.io/client-go@v0.19.2/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.19.2/util/workqueue/queue.go:58 +0x135\n\ngoroutine 1012 [chan receive]:\nk8s.io/client-go/util/workqueue.(*Type).updateUnfinishedWorkLoop(0xc001084ba0)\n\tk8s.io/client-go@v0.19.2/util/workqueue/queue.go:198 +0xac\ncreated by k8s.io/client-go/util/workqueue.newQueue\n\tk8s.io/client-go@v0.19.2/util/workqueue/queue.go:58 +0x135\n\ngoroutine 991 [select]:\nk8s.io/client-go/util/workqueue.(*delayingType).waitingLoop(0xc00091de00)\n\tk8s.io/client-go@v0.19.2/util/workqueue/delaying_queue.go:231 +0x405\ncreated by k8s.io/client-go/util/workqueue.newDelayingQueue\n\tk8s.io/client-go@v0.19.2/util/workqueue/delaying_queue.go:68 +0x185\n",
                    "startedAt": "2021-07-08T10:59:33Z",
                    "finishedAt": "2021-07-08T11:00:03Z",
                    "containerID": "cri-o://5bc8f53a63c24d3b43ebd84f3ac5a0285e748d6cadf62987648badd8688b9997"
                  }
                },
                "ready": true,
                "restartCount": 9,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:264df95514c9b7096c3c74fcb56cd3906c823705edbe66e5a0fc20a8dd10b467",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:264df95514c9b7096c3c74fcb56cd3906c823705edbe66e5a0fc20a8dd10b467",
                "containerID": "cri-o://71900bd397fc4d0873ad5de3c3b1fad1285bac1f810f90b9a5754b938fa3fb05",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-machine-api": {
        "cluster-autoscaler-operator-76d8fccc8-wh9q5.json": {
          "metadata": {
            "name": "cluster-autoscaler-operator-76d8fccc8-wh9q5",
            "generateName": "cluster-autoscaler-operator-76d8fccc8-",
            "namespace": "openshift-machine-api",
            "selfLink": "/api/v1/namespaces/openshift-machine-api/pods/cluster-autoscaler-operator-76d8fccc8-wh9q5",
            "uid": "d79b41c3-6e0e-4a7c-8ee8-da98888c1d9e",
            "resourceVersion": "11412",
            "creationTimestamp": "2021-07-07T11:03:41Z",
            "labels": {
              "k8s-app": "cluster-autoscaler-operator",
              "pod-template-hash": "76d8fccc8"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.35\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.35\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "restricted"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "cluster-autoscaler-operator-76d8fccc8",
                "uid": "b9f744e2-8e1e-4f28-b4ea-3b86f388da90",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "cert",
                "secret": {
                  "secretName": "cluster-autoscaler-operator-cert",
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" }
                  ],
                  "defaultMode": 420
                }
              },
              {
                "name": "auth-proxy-config",
                "configMap": {
                  "name": "kube-rbac-proxy-cluster-autoscaler-operator",
                  "defaultMode": 420
                }
              },
              {
                "name": "cluster-autoscaler-operator-token-zcqz4",
                "secret": {
                  "secretName": "cluster-autoscaler-operator-token-zcqz4",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "kube-rbac-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "args": [
                  "--secure-listen-address=0.0.0.0:9192",
                  "--upstream=http://127.0.0.1:9191/",
                  "--tls-cert-file=/etc/tls/private/tls.crt",
                  "--tls-private-key-file=/etc/tls/private/tls.key",
                  "--config-file=/etc/kube-rbac-proxy/config-file.yaml",
                  "--logtostderr=true",
                  "--v=3"
                ],
                "ports": [
                  {
                    "name": "metrics",
                    "containerPort": 9192,
                    "protocol": "TCP"
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "20Mi" } },
                "volumeMounts": [
                  {
                    "name": "auth-proxy-config",
                    "readOnly": true,
                    "mountPath": "/etc/kube-rbac-proxy"
                  },
                  {
                    "name": "cert",
                    "readOnly": true,
                    "mountPath": "/etc/tls/private"
                  },
                  {
                    "name": "cluster-autoscaler-operator-token-zcqz4",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  },
                  "runAsUser": 1000440000
                }
              },
              {
                "name": "cluster-autoscaler-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9bfbebeccb10cf5d3bd1b8a11232bd128871c4b84b86d6464d4b1144186cd471",
                "command": ["cluster-autoscaler-operator"],
                "args": ["-alsologtostderr"],
                "ports": [{ "containerPort": 8443, "protocol": "TCP" }],
                "env": [
                  { "name": "RELEASE_VERSION", "value": "4.7.16" },
                  {
                    "name": "WATCH_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "CLUSTER_AUTOSCALER_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "LEADER_ELECTION_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "CLUSTER_AUTOSCALER_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:78f9fbd15fadda42897ab45cdf0c311734f6044960de02c0ae64a396ea179b25"
                  },
                  {
                    "name": "WEBHOOKS_CERT_DIR",
                    "value": "/etc/cluster-autoscaler-operator/tls"
                  },
                  { "name": "WEBHOOKS_PORT", "value": "8443" },
                  { "name": "METRICS_PORT", "value": "9191" }
                ],
                "resources": { "requests": { "cpu": "20m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "cert",
                    "readOnly": true,
                    "mountPath": "/etc/cluster-autoscaler-operator/tls"
                  },
                  {
                    "name": "cluster-autoscaler-operator-token-zcqz4",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  },
                  "runAsUser": 1000440000
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "cluster-autoscaler-operator",
            "serviceAccount": "cluster-autoscaler-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {
              "seLinuxOptions": { "level": "s0:c21,c10" },
              "fsGroup": 1000440000
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 300
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 300
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-node-critical",
            "priority": 2000001000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:32:00Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:32:00Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.35",
            "podIPs": [{ "ip": "10.128.0.35" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "cluster-autoscaler-operator",
                "state": { "running": { "startedAt": "2021-07-07T11:32:00Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "5 +0x19b\nk8s.io/klog/v2.(*loggingT).printf(0x23af820, 0xc000000003, 0x0, 0x0, 0x0, 0x0, 0x18058a8, 0x1d, 0xc000387940, 0x1, ...)\n\t/go/src/github.com/openshift/cluster-autoscaler-operator/vendor/k8s.io/klog/v2/klog.go:750 +0x191\nk8s.io/klog/v2.Fatalf(...)\n\t/go/src/github.com/openshift/cluster-autoscaler-operator/vendor/k8s.io/klog/v2/klog.go:1502\nmain.main()\n\t/go/src/github.com/openshift/cluster-autoscaler-operator/cmd/manager/main.go:33 +0x2d4\n\ngoroutine 8 [chan receive]:\nk8s.io/klog/v2.(*loggingT).flushDaemon(0x23af820)\n\t/go/src/github.com/openshift/cluster-autoscaler-operator/vendor/k8s.io/klog/v2/klog.go:1169 +0x8b\ncreated by k8s.io/klog/v2.init.0\n\t/go/src/github.com/openshift/cluster-autoscaler-operator/vendor/k8s.io/klog/v2/klog.go:417 +0xdf\n\ngoroutine 45 [chan receive]:\nk8s.io/apimachinery/pkg/watch.(*Broadcaster).loop(0xc000282f00)\n\t/go/src/github.com/openshift/cluster-autoscaler-operator/vendor/k8s.io/apimachinery/pkg/watch/mux.go:219 +0x66\ncreated by k8s.io/apimachinery/pkg/watch.NewBroadcaster\n\t/go/src/github.com/openshift/cluster-autoscaler-operator/vendor/k8s.io/apimachinery/pkg/watch/mux.go:73 +0xf7\n\ngoroutine 649 [chan receive]:\nk8s.io/client-go/tools/record.(*eventBroadcasterImpl).StartEventWatcher.func1(0x19c0620, 0xc000983530, 0xc00043ea10)\n\t/go/src/github.com/openshift/cluster-autoscaler-operator/vendor/k8s.io/client-go/tools/record/event.go:301 +0xaa\ncreated by k8s.io/client-go/tools/record.(*eventBroadcasterImpl).StartEventWatcher\n\t/go/src/github.com/openshift/cluster-autoscaler-operator/vendor/k8s.io/client-go/tools/record/event.go:299 +0x6e\n\ngoroutine 648 [chan receive]:\nk8s.io/client-go/tools/record.(*eventBroadcasterImpl).StartEventWatcher.func1(0x19c0620, 0xc000983500, 0xc0009834d0)\n\t/go/src/github.com/openshift/cluster-autoscaler-operator/vendor/k8s.io/client-go/tools/record/event.go:301 +0xaa\ncreated by k8s.io/client-go/tools/record.(*eventBroadcasterImpl).StartEventWatcher\n\t/go/src/github.com/openshift/cluster-autoscaler-operator/vendor/k8s.io/client-go/tools/record/event.go:299 +0x6e\n",
                    "startedAt": "2021-07-07T11:31:34Z",
                    "finishedAt": "2021-07-07T11:31:45Z",
                    "containerID": "cri-o://a4377e1b4ebe9452eac4f8ed47b7c7f41f450479e792ab68f90bd6d26a521254"
                  }
                },
                "ready": true,
                "restartCount": 2,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9bfbebeccb10cf5d3bd1b8a11232bd128871c4b84b86d6464d4b1144186cd471",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9bfbebeccb10cf5d3bd1b8a11232bd128871c4b84b86d6464d4b1144186cd471",
                "containerID": "cri-o://7b39356dd44c91f1fdb52af3ed2aa6deaba6f8dea57cbfbdd25ff418e59f3312",
                "started": true
              },
              {
                "name": "kube-rbac-proxy",
                "state": { "running": { "startedAt": "2021-07-07T11:27:18Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "containerID": "cri-o://55140d4b3e3464bca79c85dba69de2a24eb0155b2f1667cf8a2c87e9046ea3ad",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        },
        "machine-api-operator-55bcf95cc9-2dvdc.json": {
          "metadata": {
            "name": "machine-api-operator-55bcf95cc9-2dvdc",
            "generateName": "machine-api-operator-55bcf95cc9-",
            "namespace": "openshift-machine-api",
            "selfLink": "/api/v1/namespaces/openshift-machine-api/pods/machine-api-operator-55bcf95cc9-2dvdc",
            "uid": "a1cb30fd-58e2-4ec7-8b05-94f80492d338",
            "resourceVersion": "339757",
            "creationTimestamp": "2021-07-07T11:03:42Z",
            "labels": {
              "k8s-app": "machine-api-operator",
              "pod-template-hash": "55bcf95cc9"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.34\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.34\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "restricted"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "machine-api-operator-55bcf95cc9",
                "uid": "6021e9e9-9fc3-4aa3-80ee-2980f74b788e",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "config",
                "configMap": { "name": "kube-rbac-proxy", "defaultMode": 420 }
              },
              {
                "name": "images",
                "configMap": {
                  "name": "machine-api-operator-images",
                  "defaultMode": 420
                }
              },
              {
                "name": "machine-api-operator-tls",
                "secret": {
                  "secretName": "machine-api-operator-tls",
                  "defaultMode": 420
                }
              },
              {
                "name": "machine-api-operator-token-t59lb",
                "secret": {
                  "secretName": "machine-api-operator-token-t59lb",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "kube-rbac-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "args": [
                  "--secure-listen-address=0.0.0.0:8443",
                  "--upstream=http://localhost:8080/",
                  "--tls-cert-file=/etc/tls/private/tls.crt",
                  "--tls-private-key-file=/etc/tls/private/tls.key",
                  "--config-file=/etc/kube-rbac-proxy/config-file.yaml",
                  "--logtostderr=true",
                  "--v=3"
                ],
                "ports": [
                  { "name": "https", "containerPort": 8443, "protocol": "TCP" }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "20Mi" } },
                "volumeMounts": [
                  { "name": "config", "mountPath": "/etc/kube-rbac-proxy" },
                  {
                    "name": "machine-api-operator-tls",
                    "mountPath": "/etc/tls/private"
                  },
                  {
                    "name": "machine-api-operator-token-t59lb",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  },
                  "runAsUser": 1000440000
                }
              },
              {
                "name": "machine-api-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cf53422045cae8042b6a26cc0fcd717a2a14d72bf53e75e89920361691b1f094",
                "command": ["/machine-api-operator"],
                "args": [
                  "start",
                  "--images-json=/etc/machine-api-operator-config/images/images.json",
                  "--alsologtostderr",
                  "--v=3"
                ],
                "env": [
                  { "name": "RELEASE_VERSION", "value": "4.7.16" },
                  {
                    "name": "COMPONENT_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  { "name": "METRICS_PORT", "value": "8080" }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "images",
                    "mountPath": "/etc/machine-api-operator-config/images"
                  },
                  {
                    "name": "machine-api-operator-token-t59lb",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  },
                  "runAsUser": 1000440000
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "machine-api-operator",
            "serviceAccount": "machine-api-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {
              "seLinuxOptions": { "level": "s0:c21,c10" },
              "fsGroup": 1000440000
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-node-critical",
            "priority": 2000001000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:13Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:13Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.34",
            "podIPs": [{ "ip": "10.128.0.34" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "kube-rbac-proxy",
                "state": { "running": { "startedAt": "2021-07-07T11:27:17Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "containerID": "cri-o://e797d7cf2efa1eb2d180de297bc41a6a20a4cc1888f41554453605524f52d5cb",
                "started": true
              },
              {
                "name": "machine-api-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:13Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "startedAt": "2021-07-08T06:18:11Z",
                    "finishedAt": "2021-07-08T11:00:12Z",
                    "containerID": "cri-o://1ad1511ad401ea419730662488dc35f13abcb1c1097929924edbb6c556c31a17"
                  }
                },
                "ready": true,
                "restartCount": 7,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cf53422045cae8042b6a26cc0fcd717a2a14d72bf53e75e89920361691b1f094",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cf53422045cae8042b6a26cc0fcd717a2a14d72bf53e75e89920361691b1f094",
                "containerID": "cri-o://f346b52697b7f74a1e7733e3c87e49cf9cabf43530336a2f4252717fb41a4115",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-machine-config-operator": {
        "machine-config-controller-8d486476f-c9qpm.json": {
          "metadata": {
            "name": "machine-config-controller-8d486476f-c9qpm",
            "generateName": "machine-config-controller-8d486476f-",
            "namespace": "openshift-machine-config-operator",
            "selfLink": "/api/v1/namespaces/openshift-machine-config-operator/pods/machine-config-controller-8d486476f-c9qpm",
            "uid": "67f09097-6d47-4c4d-a5fe-b86ceb9ceda3",
            "resourceVersion": "339772",
            "creationTimestamp": "2021-07-07T11:26:55Z",
            "labels": {
              "k8s-app": "machine-config-controller",
              "pod-template-hash": "8d486476f"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.26\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.26\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "machine-config-controller-8d486476f",
                "uid": "febc3136-ee8f-4082-83cf-34153b385b62",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "machine-config-controller-token-brfnl",
                "secret": {
                  "secretName": "machine-config-controller-token-brfnl",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "machine-config-controller",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa",
                "command": ["/usr/bin/machine-config-controller"],
                "args": [
                  "start",
                  "--resourcelock-namespace=openshift-machine-config-operator",
                  "--v=2"
                ],
                "resources": { "requests": { "cpu": "20m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "machine-config-controller-token-brfnl",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "machine-config-controller",
            "serviceAccount": "machine-config-controller",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {},
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:55Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:23Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:23Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:55Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.26",
            "podIPs": [{ "ip": "10.128.0.26" }],
            "startTime": "2021-07-07T11:26:55Z",
            "containerStatuses": [
              {
                "name": "machine-config-controller",
                "state": { "running": { "startedAt": "2021-07-08T11:00:23Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": " 07:17:53.591692       1 node_controller.go:959] Refusing to honor master pool maxUnavailable 1 to prevent losing etcd quorum, using 0 instead\nW0708 07:46:38.848676       1 node_controller.go:959] Refusing to honor master pool maxUnavailable 1 to prevent losing etcd quorum, using 0 instead\nW0708 08:15:24.105738       1 node_controller.go:959] Refusing to honor master pool maxUnavailable 1 to prevent losing etcd quorum, using 0 instead\nW0708 08:44:09.362946       1 node_controller.go:959] Refusing to honor master pool maxUnavailable 1 to prevent losing etcd quorum, using 0 instead\nW0708 09:12:54.620220       1 node_controller.go:959] Refusing to honor master pool maxUnavailable 1 to prevent losing etcd quorum, using 0 instead\nW0708 09:41:39.877157       1 node_controller.go:959] Refusing to honor master pool maxUnavailable 1 to prevent losing etcd quorum, using 0 instead\nW0708 10:10:25.134336       1 node_controller.go:959] Refusing to honor master pool maxUnavailable 1 to prevent losing etcd quorum, using 0 instead\nW0708 10:39:10.391487       1 node_controller.go:959] Refusing to honor master pool maxUnavailable 1 to prevent losing etcd quorum, using 0 instead\nE0708 10:59:22.615694       1 leaderelection.go:325] error retrieving resource lock openshift-machine-config-operator/machine-config-controller: Get \"https://172.30.0.1:443/api/v1/namespaces/openshift-machine-config-operator/configmaps/machine-config-controller\": dial tcp 172.30.0.1:443: connect: connection refused\nE0708 10:59:52.616365       1 leaderelection.go:325] error retrieving resource lock openshift-machine-config-operator/machine-config-controller: Get \"https://172.30.0.1:443/api/v1/namespaces/openshift-machine-config-operator/configmaps/machine-config-controller\": dial tcp 172.30.0.1:443: connect: connection refused\nI0708 11:00:22.614967       1 leaderelection.go:278] failed to renew lease openshift-machine-config-operator/machine-config-controller: timed out waiting for the condition\nF0708 11:00:22.615145       1 start.go:85] leaderelection lost\n",
                    "startedAt": "2021-07-08T06:18:22Z",
                    "finishedAt": "2021-07-08T11:00:22Z",
                    "containerID": "cri-o://69bbbc2b0bec9c3ae98b5923533032fb205c54dab6f9ab8222427c476bdc7709"
                  }
                },
                "ready": true,
                "restartCount": 7,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa",
                "containerID": "cri-o://c8b71222516f5d34639b878e846fe18dc79ccc005141698df4986e1a8bc8ff21",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        },
        "machine-config-operator-5c9f8b8457-hrtxb.json": {
          "metadata": {
            "name": "machine-config-operator-5c9f8b8457-hrtxb",
            "generateName": "machine-config-operator-5c9f8b8457-",
            "namespace": "openshift-machine-config-operator",
            "selfLink": "/api/v1/namespaces/openshift-machine-config-operator/pods/machine-config-operator-5c9f8b8457-hrtxb",
            "uid": "49f91853-e5fe-4af0-93d0-30e4b2f962be",
            "resourceVersion": "339761",
            "creationTimestamp": "2021-07-07T11:03:29Z",
            "labels": {
              "k8s-app": "machine-config-operator",
              "pod-template-hash": "5c9f8b8457"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.15\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.15\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "machine-config-operator-5c9f8b8457",
                "uid": "68e63ca1-2efc-4e7a-b7c4-2fc3d04fa429",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "images",
                "configMap": {
                  "name": "machine-config-operator-images",
                  "defaultMode": 420
                }
              },
              {
                "name": "root-ca",
                "hostPath": { "path": "/etc/kubernetes/ca.crt", "type": "" }
              },
              {
                "name": "default-token-qdzjz",
                "secret": {
                  "secretName": "default-token-qdzjz",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "machine-config-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa",
                "args": ["start", "--images-json=/etc/mco/images/images.json"],
                "env": [{ "name": "RELEASE_VERSION", "value": "4.7.16" }],
                "resources": { "requests": { "cpu": "20m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "root-ca",
                    "mountPath": "/etc/ssl/kubernetes/ca.crt"
                  },
                  { "name": "images", "mountPath": "/etc/mco/images" },
                  {
                    "name": "default-token-qdzjz",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "default",
            "serviceAccount": "default",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": { "runAsUser": 65534, "runAsNonRoot": true },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:02Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:02Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.15",
            "podIPs": [{ "ip": "10.128.0.15" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "machine-config-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:02Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "eDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition\nI0708 10:54:21.272245       1 sync.go:569] syncing Required MachineConfigPools\nW0708 10:54:23.085098       1 warnings.go:70] apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition\nI0708 10:54:28.544190       1 sync.go:569] syncing Required MachineConfigPools\nW0708 10:54:39.154537       1 warnings.go:70] apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition\nW0708 10:57:30.023692       1 warnings.go:70] apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition\nI0708 10:57:35.101019       1 sync.go:569] syncing Required MachineConfigPools\nW0708 10:57:36.912907       1 warnings.go:70] apiextensions.k8s.io/v1beta1 CustomResourceDefinition is deprecated in v1.16+, unavailable in v1.22+; use apiextensions.k8s.io/v1 CustomResourceDefinition\nI0708 10:57:42.371986       1 sync.go:569] syncing Required MachineConfigPools\nE0708 10:59:00.809337       1 leaderelection.go:325] error retrieving resource lock openshift-machine-config-operator/machine-config: Get \"https://172.30.0.1:443/api/v1/namespaces/openshift-machine-config-operator/configmaps/machine-config\": dial tcp 172.30.0.1:443: connect: connection refused\nE0708 10:59:30.810629       1 leaderelection.go:325] error retrieving resource lock openshift-machine-config-operator/machine-config: Get \"https://172.30.0.1:443/api/v1/namespaces/openshift-machine-config-operator/configmaps/machine-config\": dial tcp 172.30.0.1:443: connect: connection refused\nI0708 11:00:00.808914       1 leaderelection.go:278] failed to renew lease openshift-machine-config-operator/machine-config: timed out waiting for the condition\nF0708 11:00:00.809066       1 start.go:102] leaderelection lost\n",
                    "startedAt": "2021-07-08T06:18:30Z",
                    "finishedAt": "2021-07-08T11:00:00Z",
                    "containerID": "cri-o://9002d56117bad6eac3e28c7c715281d0a2361421f98f7f529aa34cb6495d932e"
                  }
                },
                "ready": true,
                "restartCount": 7,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa",
                "containerID": "cri-o://4ab0b9f71f8075167fd5c80ecc38e3641b6ae360f47d317dca2e2f5f9fb83720",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-monitoring": {
        "cluster-monitoring-operator-6c785d75f6-t79zv.json": {
          "metadata": {
            "name": "cluster-monitoring-operator-6c785d75f6-t79zv",
            "generateName": "cluster-monitoring-operator-6c785d75f6-",
            "namespace": "openshift-monitoring",
            "selfLink": "/api/v1/namespaces/openshift-monitoring/pods/cluster-monitoring-operator-6c785d75f6-t79zv",
            "uid": "acf3c7cb-7cac-49f1-a289-3884edb3ed50",
            "resourceVersion": "6542",
            "creationTimestamp": "2021-07-07T11:03:36Z",
            "labels": {
              "app": "cluster-monitoring-operator",
              "pod-template-hash": "6c785d75f6"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.12\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.12\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "restricted"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "cluster-monitoring-operator-6c785d75f6",
                "uid": "4c56c9fd-c4c2-4cf3-aa39-e402c1226129",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "telemetry-config",
                "configMap": { "name": "telemetry-config", "defaultMode": 420 }
              },
              {
                "name": "cluster-monitoring-operator-tls",
                "secret": {
                  "secretName": "cluster-monitoring-operator-tls",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "cluster-monitoring-operator-token-8vvpt",
                "secret": {
                  "secretName": "cluster-monitoring-operator-token-8vvpt",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "kube-rbac-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "args": [
                  "--logtostderr",
                  "--secure-listen-address=:8443",
                  "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",
                  "--upstream=http://127.0.0.1:8080/",
                  "--tls-cert-file=/etc/tls/private/tls.crt",
                  "--tls-private-key-file=/etc/tls/private/tls.key"
                ],
                "ports": [
                  { "name": "https", "containerPort": 8443, "protocol": "TCP" }
                ],
                "resources": { "requests": { "cpu": "1m", "memory": "20Mi" } },
                "volumeMounts": [
                  {
                    "name": "cluster-monitoring-operator-tls",
                    "mountPath": "/etc/tls/private"
                  },
                  {
                    "name": "cluster-monitoring-operator-token-8vvpt",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  },
                  "runAsUser": 1000420000
                }
              },
              {
                "name": "cluster-monitoring-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5c1788d97973f4847a9476f2b3c32e90cc8d55df1e7678f35730e6d63bb25f6",
                "args": [
                  "-namespace=openshift-monitoring",
                  "-namespace-user-workload=openshift-user-workload-monitoring",
                  "-configmap=cluster-monitoring-config",
                  "-release-version=$(RELEASE_VERSION)",
                  "-logtostderr=true",
                  "-v=2",
                  "-images=prometheus-operator=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ed8dbde51ebca78c9ec1f1ee9e073c77255d0f5225ef8e8d17f454553603aa3a",
                  "-images=prometheus-config-reloader=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98ce5083663a333717bf26620e288e3e097b462146f0dd253eb32c1a14a08722",
                  "-images=configmap-reloader=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:429d917edc66392ff6e77543f3645676e5186bcdaec4890f67c772b505d50090",
                  "-images=prometheus=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:22c8bf0a554da33f3e135d8e148d7b437f948f0784bba9964266f87046293ca4",
                  "-images=alertmanager=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a4a3c6d1cfe001199c15ccf5bb28beb0dea3d1665c2df8f83b8b86a0c081af",
                  "-images=grafana=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7da74296a2a7bd54b55acc32664c93f2b6351407b9de257a6b045cba1fe4399a",
                  "-images=oauth-proxy=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2",
                  "-images=node-exporter=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:73826485bff3e7aca3345e72096b394834c21f05245099c37452bd22deb2baa9",
                  "-images=kube-state-metrics=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7eb7f919e5712a6c0a33b2f8e3aedbf6752146bc66f142bae430c342db2ba300",
                  "-images=openshift-state-metrics=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:65a9ddc2bc278be683ddc6cfb87d49f63de42a9b3738bb442bcdb17d6fb92750",
                  "-images=kube-rbac-proxy=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "-images=telemeter-client=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:604ccd9c62821d67be770ada691e9f536ce348a13677bc7b4530badb66cbd967",
                  "-images=prom-label-proxy=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2173536432a116be7975619d17c61d676b099f59e111afb0a0a704f436ec552c",
                  "-images=k8s-prometheus-adapter=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fed2a1ecd8f282f87eb4466c4a0f538c04583067f6536e8d9cfb98a954903ccf",
                  "-images=thanos=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:869e72bca1256bad482959b46db947fbc402eaff89049c5f4e237f2090074dc6"
                ],
                "env": [{ "name": "RELEASE_VERSION", "value": "4.7.16" }],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "telemetry-config",
                    "mountPath": "/etc/cluster-monitoring-operator/telemetry"
                  },
                  {
                    "name": "cluster-monitoring-operator-token-8vvpt",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  },
                  "runAsUser": 1000420000
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "beta.kubernetes.io/os": "linux",
              "node-role.kubernetes.io/master": ""
            },
            "serviceAccountName": "cluster-monitoring-operator",
            "serviceAccount": "cluster-monitoring-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {
              "seLinuxOptions": { "level": "s0:c21,c0" },
              "fsGroup": 1000420000
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:44Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:44Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.12",
            "podIPs": [{ "ip": "10.128.0.12" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "cluster-monitoring-operator",
                "state": { "running": { "startedAt": "2021-07-07T11:26:27Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5c1788d97973f4847a9476f2b3c32e90cc8d55df1e7678f35730e6d63bb25f6",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a5c1788d97973f4847a9476f2b3c32e90cc8d55df1e7678f35730e6d63bb25f6",
                "containerID": "cri-o://17ad39ca6cf938e87fe42c89e28718e87aedebc71fd4b68ece7c3f389d5e62d1",
                "started": true
              },
              {
                "name": "kube-rbac-proxy",
                "state": { "running": { "startedAt": "2021-07-07T11:26:44Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "I0707 11:26:28.158270       1 main.go:190] Valid token audiences: \nI0707 11:26:28.158418       1 main.go:278] Reading certificate files\nF0707 11:26:28.158446       1 main.go:282] Failed to initialize certificate reloader: error loading certificates: error loading certificate: open /etc/tls/private/tls.crt: no such file or directory\ngoroutine 1 [running]:\nk8s.io/klog/v2.stacks(0xc000010001, 0xc0001ce000, 0xc6, 0x1c8)\n\t/go/src/github.com/brancz/kube-rbac-proxy/vendor/k8s.io/klog/v2/klog.go:996 +0xb9\nk8s.io/klog/v2.(*loggingT).output(0x22a6180, 0xc000000003, 0x0, 0x0, 0xc0005ba460, 0x21fdcb1, 0x7, 0x11a, 0x0)\n\t/go/src/github.com/brancz/kube-rbac-proxy/vendor/k8s.io/klog/v2/klog.go:945 +0x191\nk8s.io/klog/v2.(*loggingT).printf(0x22a6180, 0x3, 0x0, 0x0, 0x1784b48, 0x2d, 0xc00051fce0, 0x1, 0x1)\n\t/go/src/github.com/brancz/kube-rbac-proxy/vendor/k8s.io/klog/v2/klog.go:733 +0x17a\nk8s.io/klog/v2.Fatalf(...)\n\t/go/src/github.com/brancz/kube-rbac-proxy/vendor/k8s.io/klog/v2/klog.go:1463\nmain.main()\n\t/go/src/github.com/brancz/kube-rbac-proxy/main.go:282 +0x1d12\n\ngoroutine 6 [chan receive]:\nk8s.io/klog/v2.(*loggingT).flushDaemon(0x22a6180)\n\t/go/src/github.com/brancz/kube-rbac-proxy/vendor/k8s.io/klog/v2/klog.go:1131 +0x8b\ncreated by k8s.io/klog/v2.init.0\n\t/go/src/github.com/brancz/kube-rbac-proxy/vendor/k8s.io/klog/v2/klog.go:416 +0xd8\n",
                    "startedAt": "2021-07-07T11:26:27Z",
                    "finishedAt": "2021-07-07T11:26:28Z",
                    "containerID": "cri-o://971775d4720a300342a58848812a72ab99ecbf8df2acd3adc45618d18e2a5f67"
                  }
                },
                "ready": true,
                "restartCount": 2,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "containerID": "cri-o://e4708ef218fc393421627a79fe019501961415d07cf3910935b631ea976c4778",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        },
        "prometheus-k8s-0.json": {
          "metadata": {
            "name": "prometheus-k8s-0",
            "generateName": "prometheus-k8s-",
            "namespace": "openshift-monitoring",
            "selfLink": "/api/v1/namespaces/openshift-monitoring/pods/prometheus-k8s-0",
            "uid": "4f346c63-4d5b-461b-898c-9c0fca14b797",
            "resourceVersion": "1782140",
            "creationTimestamp": "2021-07-07T16:15:18Z",
            "labels": {
              "app": "prometheus",
              "controller-revision-hash": "prometheus-k8s-5cfb75fb9f",
              "operator.prometheus.io/name": "k8s",
              "operator.prometheus.io/shard": "0",
              "prometheus": "k8s",
              "statefulset.kubernetes.io/pod-name": "prometheus-k8s-0"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.129.0.142\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.129.0.142\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "nonroot"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "StatefulSet",
                "name": "prometheus-k8s",
                "uid": "8e2bf3fd-dc62-4904-8023-30ff9809caf9",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "config",
                "secret": { "secretName": "prometheus-k8s", "defaultMode": 420 }
              },
              {
                "name": "tls-assets",
                "secret": {
                  "secretName": "prometheus-k8s-tls-assets",
                  "defaultMode": 420
                }
              },
              { "name": "config-out", "emptyDir": {} },
              {
                "name": "prometheus-k8s-rulefiles-0",
                "configMap": {
                  "name": "prometheus-k8s-rulefiles-0",
                  "defaultMode": 420
                }
              },
              {
                "name": "secret-kube-etcd-client-certs",
                "secret": {
                  "secretName": "kube-etcd-client-certs",
                  "defaultMode": 420
                }
              },
              {
                "name": "secret-prometheus-k8s-tls",
                "secret": {
                  "secretName": "prometheus-k8s-tls",
                  "defaultMode": 420
                }
              },
              {
                "name": "secret-prometheus-k8s-proxy",
                "secret": {
                  "secretName": "prometheus-k8s-proxy",
                  "defaultMode": 420
                }
              },
              {
                "name": "secret-prometheus-k8s-htpasswd",
                "secret": {
                  "secretName": "prometheus-k8s-htpasswd",
                  "defaultMode": 420
                }
              },
              {
                "name": "secret-prometheus-k8s-thanos-sidecar-tls",
                "secret": {
                  "secretName": "prometheus-k8s-thanos-sidecar-tls",
                  "defaultMode": 420
                }
              },
              {
                "name": "secret-kube-rbac-proxy",
                "secret": {
                  "secretName": "kube-rbac-proxy",
                  "defaultMode": 420
                }
              },
              {
                "name": "configmap-serving-certs-ca-bundle",
                "configMap": {
                  "name": "serving-certs-ca-bundle",
                  "defaultMode": 420
                }
              },
              {
                "name": "configmap-kubelet-serving-ca-bundle",
                "configMap": {
                  "name": "kubelet-serving-ca-bundle",
                  "defaultMode": 420
                }
              },
              { "name": "prometheus-k8s-db", "emptyDir": {} },
              {
                "name": "secret-grpc-tls",
                "secret": {
                  "secretName": "prometheus-k8s-grpc-tls-4djtggr3prgnl",
                  "defaultMode": 420
                }
              },
              {
                "name": "prometheus-trusted-ca-bundle",
                "configMap": {
                  "name": "prometheus-trusted-ca-bundle-d34s91lhv300e",
                  "items": [
                    { "key": "ca-bundle.crt", "path": "tls-ca-bundle.pem" }
                  ],
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "prometheus-k8s-token-zkhg2",
                "secret": {
                  "secretName": "prometheus-k8s-token-zkhg2",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "prometheus",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:22c8bf0a554da33f3e135d8e148d7b437f948f0784bba9964266f87046293ca4",
                "args": [
                  "--web.console.templates=/etc/prometheus/consoles",
                  "--web.console.libraries=/etc/prometheus/console_libraries",
                  "--config.file=/etc/prometheus/config_out/prometheus.env.yaml",
                  "--storage.tsdb.path=/prometheus",
                  "--storage.tsdb.retention.time=7d",
                  "--web.enable-lifecycle",
                  "--storage.tsdb.no-lockfile",
                  "--web.external-url=https://prometheus-k8s-openshift-monitoring.apps.imeixner20210707.lab.upshift.rdu2.redhat.com/",
                  "--web.route-prefix=/",
                  "--web.listen-address=127.0.0.1:9090"
                ],
                "resources": { "requests": { "cpu": "70m", "memory": "1Gi" } },
                "volumeMounts": [
                  {
                    "name": "prometheus-trusted-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/etc/pki/ca-trust/extracted/pem/"
                  },
                  {
                    "name": "config-out",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/config_out"
                  },
                  {
                    "name": "tls-assets",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/certs"
                  },
                  { "name": "prometheus-k8s-db", "mountPath": "/prometheus" },
                  {
                    "name": "prometheus-k8s-rulefiles-0",
                    "mountPath": "/etc/prometheus/rules/prometheus-k8s-rulefiles-0"
                  },
                  {
                    "name": "secret-kube-etcd-client-certs",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/secrets/kube-etcd-client-certs"
                  },
                  {
                    "name": "secret-prometheus-k8s-tls",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/secrets/prometheus-k8s-tls"
                  },
                  {
                    "name": "secret-prometheus-k8s-proxy",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/secrets/prometheus-k8s-proxy"
                  },
                  {
                    "name": "secret-prometheus-k8s-htpasswd",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/secrets/prometheus-k8s-htpasswd"
                  },
                  {
                    "name": "secret-prometheus-k8s-thanos-sidecar-tls",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/secrets/prometheus-k8s-thanos-sidecar-tls"
                  },
                  {
                    "name": "secret-kube-rbac-proxy",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/secrets/kube-rbac-proxy"
                  },
                  {
                    "name": "configmap-serving-certs-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/configmaps/serving-certs-ca-bundle"
                  },
                  {
                    "name": "configmap-kubelet-serving-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/configmaps/kubelet-serving-ca-bundle"
                  },
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "sh",
                      "-c",
                      "if [ -x \"$(command -v curl)\" ]; then exec curl http://localhost:9090/-/ready; elif [ -x \"$(command -v wget)\" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready; else exit 1; fi"
                    ]
                  },
                  "timeoutSeconds": 3,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "failureThreshold": 120
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              },
              {
                "name": "config-reloader",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98ce5083663a333717bf26620e288e3e097b462146f0dd253eb32c1a14a08722",
                "command": ["/bin/prometheus-config-reloader"],
                "args": [
                  "--listen-address=localhost:8080",
                  "--reload-url=http://localhost:9090/-/reload",
                  "--config-file=/etc/prometheus/config/prometheus.yaml.gz",
                  "--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml",
                  "--watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0"
                ],
                "env": [
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  { "name": "SHARD", "value": "0" }
                ],
                "resources": { "requests": { "cpu": "1m", "memory": "10Mi" } },
                "volumeMounts": [
                  { "name": "config", "mountPath": "/etc/prometheus/config" },
                  {
                    "name": "config-out",
                    "mountPath": "/etc/prometheus/config_out"
                  },
                  {
                    "name": "prometheus-k8s-rulefiles-0",
                    "mountPath": "/etc/prometheus/rules/prometheus-k8s-rulefiles-0"
                  },
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              },
              {
                "name": "thanos-sidecar",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:869e72bca1256bad482959b46db947fbc402eaff89049c5f4e237f2090074dc6",
                "args": [
                  "sidecar",
                  "--prometheus.url=http://localhost:9090/",
                  "--tsdb.path=/prometheus",
                  "--grpc-address=[$(POD_IP)]:10901",
                  "--http-address=127.0.0.1:10902",
                  "--grpc-server-tls-cert=/etc/tls/grpc/server.crt",
                  "--grpc-server-tls-key=/etc/tls/grpc/server.key",
                  "--grpc-server-tls-client-ca=/etc/tls/grpc/ca.crt"
                ],
                "ports": [
                  { "name": "http", "containerPort": 10902, "protocol": "TCP" },
                  { "name": "grpc", "containerPort": 10901, "protocol": "TCP" }
                ],
                "env": [
                  {
                    "name": "POD_IP",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "status.podIP"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "1m", "memory": "100Mi" } },
                "volumeMounts": [
                  { "name": "secret-grpc-tls", "mountPath": "/etc/tls/grpc" },
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              },
              {
                "name": "prometheus-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2",
                "args": [
                  "-provider=openshift",
                  "-https-address=:9091",
                  "-http-address=",
                  "-email-domain=*",
                  "-upstream=http://localhost:9090",
                  "-htpasswd-file=/etc/proxy/htpasswd/auth",
                  "-openshift-service-account=prometheus-k8s",
                  "-openshift-sar={\"resource\": \"namespaces\", \"verb\": \"get\"}",
                  "-openshift-delegate-urls={\"/\": {\"resource\": \"namespaces\", \"verb\": \"get\"}}",
                  "-tls-cert=/etc/tls/private/tls.crt",
                  "-tls-key=/etc/tls/private/tls.key",
                  "-client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token",
                  "-cookie-secret-file=/etc/proxy/secrets/session_secret",
                  "-openshift-ca=/etc/pki/tls/cert.pem",
                  "-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                  "-skip-auth-regex=^/metrics"
                ],
                "ports": [
                  { "name": "web", "containerPort": 9091, "protocol": "TCP" }
                ],
                "env": [
                  { "name": "HTTP_PROXY" },
                  { "name": "HTTPS_PROXY" },
                  { "name": "NO_PROXY" }
                ],
                "resources": { "requests": { "cpu": "1m", "memory": "20Mi" } },
                "volumeMounts": [
                  {
                    "name": "secret-prometheus-k8s-tls",
                    "mountPath": "/etc/tls/private"
                  },
                  {
                    "name": "secret-prometheus-k8s-proxy",
                    "mountPath": "/etc/proxy/secrets"
                  },
                  {
                    "name": "secret-prometheus-k8s-htpasswd",
                    "mountPath": "/etc/proxy/htpasswd"
                  },
                  {
                    "name": "prometheus-trusted-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/etc/pki/ca-trust/extracted/pem/"
                  },
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              },
              {
                "name": "kube-rbac-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "args": [
                  "--secure-listen-address=0.0.0.0:9092",
                  "--upstream=http://127.0.0.1:9095",
                  "--config-file=/etc/kube-rbac-proxy/config.yaml",
                  "--tls-cert-file=/etc/tls/private/tls.crt",
                  "--tls-private-key-file=/etc/tls/private/tls.key",
                  "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",
                  "--logtostderr=true",
                  "--v=10"
                ],
                "ports": [
                  {
                    "name": "tenancy",
                    "containerPort": 9092,
                    "protocol": "TCP"
                  }
                ],
                "resources": { "requests": { "cpu": "1m", "memory": "20Mi" } },
                "volumeMounts": [
                  {
                    "name": "secret-prometheus-k8s-tls",
                    "mountPath": "/etc/tls/private"
                  },
                  {
                    "name": "secret-kube-rbac-proxy",
                    "mountPath": "/etc/kube-rbac-proxy"
                  },
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              },
              {
                "name": "prom-label-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2173536432a116be7975619d17c61d676b099f59e111afb0a0a704f436ec552c",
                "args": [
                  "--insecure-listen-address=127.0.0.1:9095",
                  "--upstream=http://127.0.0.1:9090",
                  "--label=namespace"
                ],
                "resources": { "requests": { "cpu": "1m", "memory": "20Mi" } },
                "volumeMounts": [
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              },
              {
                "name": "kube-rbac-proxy-thanos",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "args": [
                  "--secure-listen-address=[$(POD_IP)]:10902",
                  "--upstream=http://127.0.0.1:10902",
                  "--tls-cert-file=/etc/tls/private/tls.crt",
                  "--tls-private-key-file=/etc/tls/private/tls.key",
                  "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",
                  "--allow-paths=/metrics",
                  "--logtostderr=true"
                ],
                "ports": [
                  {
                    "name": "thanos-proxy",
                    "containerPort": 10902,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "POD_IP",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "status.podIP"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "1m", "memory": "10Mi" } },
                "volumeMounts": [
                  {
                    "name": "secret-prometheus-k8s-thanos-sidecar-tls",
                    "mountPath": "/etc/tls/private"
                  },
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 600,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "kubernetes.io/os": "linux" },
            "serviceAccountName": "prometheus-k8s",
            "serviceAccount": "prometheus-k8s",
            "nodeName": "worker-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {
              "seLinuxOptions": { "level": "s0:c21,c0" },
              "runAsUser": 65534,
              "runAsNonRoot": true,
              "fsGroup": 65534
            },
            "imagePullSecrets": [{ "name": "prometheus-k8s-dockercfg-w6k4v" }],
            "hostname": "prometheus-k8s-0",
            "subdomain": "prometheus-operated",
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "weight": 100,
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "prometheus",
                            "operator": "In",
                            "values": ["k8s"]
                          }
                        ]
                      },
                      "namespaces": ["openshift-monitoring"],
                      "topologyKey": "kubernetes.io/hostname"
                    }
                  }
                ]
              }
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 300
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 300
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T16:15:18Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T16:15:28Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T16:15:28Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T16:15:18Z"
              }
            ],
            "hostIP": "10.0.89.93",
            "podIP": "10.129.0.142",
            "podIPs": [{ "ip": "10.129.0.142" }],
            "startTime": "2021-07-07T16:15:18Z",
            "containerStatuses": [
              {
                "name": "config-reloader",
                "state": { "running": { "startedAt": "2021-07-07T16:15:21Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98ce5083663a333717bf26620e288e3e097b462146f0dd253eb32c1a14a08722",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98ce5083663a333717bf26620e288e3e097b462146f0dd253eb32c1a14a08722",
                "containerID": "cri-o://6c626c6ca6ccf3ffe08484328f8d9f796dd791d53d04970d53c1f132b291b0f7",
                "started": true
              },
              {
                "name": "kube-rbac-proxy",
                "state": { "running": { "startedAt": "2021-07-07T16:15:22Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "containerID": "cri-o://c566e316d3a2befbe68f9649680b48e61b50a623eb16efe7cebc8faf9fa4bbe2",
                "started": true
              },
              {
                "name": "kube-rbac-proxy-thanos",
                "state": { "running": { "startedAt": "2021-07-07T16:15:23Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "containerID": "cri-o://37d1c2238ca772f97101dc4b1bb1631f0de20e8b2a798a770e4f975cce9f0ea3",
                "started": true
              },
              {
                "name": "prom-label-proxy",
                "state": { "running": { "startedAt": "2021-07-07T16:15:22Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2173536432a116be7975619d17c61d676b099f59e111afb0a0a704f436ec552c",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2173536432a116be7975619d17c61d676b099f59e111afb0a0a704f436ec552c",
                "containerID": "cri-o://4bc2431741b0ab1195cc202735262c23f1a53a1119d2dd1018477c7a3335c56a",
                "started": true
              },
              {
                "name": "prometheus",
                "state": { "running": { "startedAt": "2021-07-07T16:15:23Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 2,
                    "reason": "Error",
                    "message": "level=error ts=2021-07-07T16:15:21.472Z caller=main.go:289 msg=\"Error loading config (--config.file=/etc/prometheus/config_out/prometheus.env.yaml)\" err=\"open /etc/prometheus/config_out/prometheus.env.yaml: no such file or directory\"\n",
                    "startedAt": "2021-07-07T16:15:21Z",
                    "finishedAt": "2021-07-07T16:15:21Z",
                    "containerID": "cri-o://180f91c2572d80279c1f972846b96f87f8e4a27f6494088b88bb4dce5176285f"
                  }
                },
                "ready": true,
                "restartCount": 1,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:22c8bf0a554da33f3e135d8e148d7b437f948f0784bba9964266f87046293ca4",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:22c8bf0a554da33f3e135d8e148d7b437f948f0784bba9964266f87046293ca4",
                "containerID": "cri-o://24bd6a01994feaec82a3adf4ec92da1b4cab6fe2f90d978d4f5d2f7cb7376914",
                "started": true
              },
              {
                "name": "prometheus-proxy",
                "state": { "running": { "startedAt": "2021-07-07T16:15:22Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2",
                "containerID": "cri-o://0170d67156f7df5e25ec24d790fe92ea6c03d5f5515791439dfe5fd4db9b9f79",
                "started": true
              },
              {
                "name": "thanos-sidecar",
                "state": { "running": { "startedAt": "2021-07-07T16:15:21Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:869e72bca1256bad482959b46db947fbc402eaff89049c5f4e237f2090074dc6",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:869e72bca1256bad482959b46db947fbc402eaff89049c5f4e237f2090074dc6",
                "containerID": "cri-o://68fb3900e7d8b9f34fa1b6fc9a6591f4c9d39dc5ef71aeac3d940481de85afda",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        },
        "prometheus-k8s-1.json": {
          "metadata": {
            "name": "prometheus-k8s-1",
            "generateName": "prometheus-k8s-",
            "namespace": "openshift-monitoring",
            "selfLink": "/api/v1/namespaces/openshift-monitoring/pods/prometheus-k8s-1",
            "uid": "f83e0a32-ae7e-498a-b1b4-87b1dca34c71",
            "resourceVersion": "1782044",
            "creationTimestamp": "2021-07-07T16:15:28Z",
            "labels": {
              "app": "prometheus",
              "controller-revision-hash": "prometheus-k8s-5cfb75fb9f",
              "operator.prometheus.io/name": "k8s",
              "operator.prometheus.io/shard": "0",
              "prometheus": "k8s",
              "statefulset.kubernetes.io/pod-name": "prometheus-k8s-1"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.129.0.148\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.129.0.148\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "nonroot"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "StatefulSet",
                "name": "prometheus-k8s",
                "uid": "8e2bf3fd-dc62-4904-8023-30ff9809caf9",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "config",
                "secret": { "secretName": "prometheus-k8s", "defaultMode": 420 }
              },
              {
                "name": "tls-assets",
                "secret": {
                  "secretName": "prometheus-k8s-tls-assets",
                  "defaultMode": 420
                }
              },
              { "name": "config-out", "emptyDir": {} },
              {
                "name": "prometheus-k8s-rulefiles-0",
                "configMap": {
                  "name": "prometheus-k8s-rulefiles-0",
                  "defaultMode": 420
                }
              },
              {
                "name": "secret-kube-etcd-client-certs",
                "secret": {
                  "secretName": "kube-etcd-client-certs",
                  "defaultMode": 420
                }
              },
              {
                "name": "secret-prometheus-k8s-tls",
                "secret": {
                  "secretName": "prometheus-k8s-tls",
                  "defaultMode": 420
                }
              },
              {
                "name": "secret-prometheus-k8s-proxy",
                "secret": {
                  "secretName": "prometheus-k8s-proxy",
                  "defaultMode": 420
                }
              },
              {
                "name": "secret-prometheus-k8s-htpasswd",
                "secret": {
                  "secretName": "prometheus-k8s-htpasswd",
                  "defaultMode": 420
                }
              },
              {
                "name": "secret-prometheus-k8s-thanos-sidecar-tls",
                "secret": {
                  "secretName": "prometheus-k8s-thanos-sidecar-tls",
                  "defaultMode": 420
                }
              },
              {
                "name": "secret-kube-rbac-proxy",
                "secret": {
                  "secretName": "kube-rbac-proxy",
                  "defaultMode": 420
                }
              },
              {
                "name": "configmap-serving-certs-ca-bundle",
                "configMap": {
                  "name": "serving-certs-ca-bundle",
                  "defaultMode": 420
                }
              },
              {
                "name": "configmap-kubelet-serving-ca-bundle",
                "configMap": {
                  "name": "kubelet-serving-ca-bundle",
                  "defaultMode": 420
                }
              },
              { "name": "prometheus-k8s-db", "emptyDir": {} },
              {
                "name": "secret-grpc-tls",
                "secret": {
                  "secretName": "prometheus-k8s-grpc-tls-4djtggr3prgnl",
                  "defaultMode": 420
                }
              },
              {
                "name": "prometheus-trusted-ca-bundle",
                "configMap": {
                  "name": "prometheus-trusted-ca-bundle-d34s91lhv300e",
                  "items": [
                    { "key": "ca-bundle.crt", "path": "tls-ca-bundle.pem" }
                  ],
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "prometheus-k8s-token-zkhg2",
                "secret": {
                  "secretName": "prometheus-k8s-token-zkhg2",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "prometheus",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:22c8bf0a554da33f3e135d8e148d7b437f948f0784bba9964266f87046293ca4",
                "args": [
                  "--web.console.templates=/etc/prometheus/consoles",
                  "--web.console.libraries=/etc/prometheus/console_libraries",
                  "--config.file=/etc/prometheus/config_out/prometheus.env.yaml",
                  "--storage.tsdb.path=/prometheus",
                  "--storage.tsdb.retention.time=7d",
                  "--web.enable-lifecycle",
                  "--storage.tsdb.no-lockfile",
                  "--web.external-url=https://prometheus-k8s-openshift-monitoring.apps.imeixner20210707.lab.upshift.rdu2.redhat.com/",
                  "--web.route-prefix=/",
                  "--web.listen-address=127.0.0.1:9090"
                ],
                "resources": { "requests": { "cpu": "70m", "memory": "1Gi" } },
                "volumeMounts": [
                  {
                    "name": "prometheus-trusted-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/etc/pki/ca-trust/extracted/pem/"
                  },
                  {
                    "name": "config-out",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/config_out"
                  },
                  {
                    "name": "tls-assets",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/certs"
                  },
                  { "name": "prometheus-k8s-db", "mountPath": "/prometheus" },
                  {
                    "name": "prometheus-k8s-rulefiles-0",
                    "mountPath": "/etc/prometheus/rules/prometheus-k8s-rulefiles-0"
                  },
                  {
                    "name": "secret-kube-etcd-client-certs",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/secrets/kube-etcd-client-certs"
                  },
                  {
                    "name": "secret-prometheus-k8s-tls",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/secrets/prometheus-k8s-tls"
                  },
                  {
                    "name": "secret-prometheus-k8s-proxy",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/secrets/prometheus-k8s-proxy"
                  },
                  {
                    "name": "secret-prometheus-k8s-htpasswd",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/secrets/prometheus-k8s-htpasswd"
                  },
                  {
                    "name": "secret-prometheus-k8s-thanos-sidecar-tls",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/secrets/prometheus-k8s-thanos-sidecar-tls"
                  },
                  {
                    "name": "secret-kube-rbac-proxy",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/secrets/kube-rbac-proxy"
                  },
                  {
                    "name": "configmap-serving-certs-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/configmaps/serving-certs-ca-bundle"
                  },
                  {
                    "name": "configmap-kubelet-serving-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/etc/prometheus/configmaps/kubelet-serving-ca-bundle"
                  },
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "readinessProbe": {
                  "exec": {
                    "command": [
                      "sh",
                      "-c",
                      "if [ -x \"$(command -v curl)\" ]; then exec curl http://localhost:9090/-/ready; elif [ -x \"$(command -v wget)\" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready; else exit 1; fi"
                    ]
                  },
                  "timeoutSeconds": 3,
                  "periodSeconds": 5,
                  "successThreshold": 1,
                  "failureThreshold": 120
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              },
              {
                "name": "config-reloader",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98ce5083663a333717bf26620e288e3e097b462146f0dd253eb32c1a14a08722",
                "command": ["/bin/prometheus-config-reloader"],
                "args": [
                  "--listen-address=localhost:8080",
                  "--reload-url=http://localhost:9090/-/reload",
                  "--config-file=/etc/prometheus/config/prometheus.yaml.gz",
                  "--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml",
                  "--watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0"
                ],
                "env": [
                  {
                    "name": "POD_NAME",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "metadata.name"
                      }
                    }
                  },
                  { "name": "SHARD", "value": "0" }
                ],
                "resources": { "requests": { "cpu": "1m", "memory": "10Mi" } },
                "volumeMounts": [
                  { "name": "config", "mountPath": "/etc/prometheus/config" },
                  {
                    "name": "config-out",
                    "mountPath": "/etc/prometheus/config_out"
                  },
                  {
                    "name": "prometheus-k8s-rulefiles-0",
                    "mountPath": "/etc/prometheus/rules/prometheus-k8s-rulefiles-0"
                  },
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              },
              {
                "name": "thanos-sidecar",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:869e72bca1256bad482959b46db947fbc402eaff89049c5f4e237f2090074dc6",
                "args": [
                  "sidecar",
                  "--prometheus.url=http://localhost:9090/",
                  "--tsdb.path=/prometheus",
                  "--grpc-address=[$(POD_IP)]:10901",
                  "--http-address=127.0.0.1:10902",
                  "--grpc-server-tls-cert=/etc/tls/grpc/server.crt",
                  "--grpc-server-tls-key=/etc/tls/grpc/server.key",
                  "--grpc-server-tls-client-ca=/etc/tls/grpc/ca.crt"
                ],
                "ports": [
                  { "name": "http", "containerPort": 10902, "protocol": "TCP" },
                  { "name": "grpc", "containerPort": 10901, "protocol": "TCP" }
                ],
                "env": [
                  {
                    "name": "POD_IP",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "status.podIP"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "1m", "memory": "100Mi" } },
                "volumeMounts": [
                  { "name": "secret-grpc-tls", "mountPath": "/etc/tls/grpc" },
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              },
              {
                "name": "prometheus-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2",
                "args": [
                  "-provider=openshift",
                  "-https-address=:9091",
                  "-http-address=",
                  "-email-domain=*",
                  "-upstream=http://localhost:9090",
                  "-htpasswd-file=/etc/proxy/htpasswd/auth",
                  "-openshift-service-account=prometheus-k8s",
                  "-openshift-sar={\"resource\": \"namespaces\", \"verb\": \"get\"}",
                  "-openshift-delegate-urls={\"/\": {\"resource\": \"namespaces\", \"verb\": \"get\"}}",
                  "-tls-cert=/etc/tls/private/tls.crt",
                  "-tls-key=/etc/tls/private/tls.key",
                  "-client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token",
                  "-cookie-secret-file=/etc/proxy/secrets/session_secret",
                  "-openshift-ca=/etc/pki/tls/cert.pem",
                  "-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                  "-skip-auth-regex=^/metrics"
                ],
                "ports": [
                  { "name": "web", "containerPort": 9091, "protocol": "TCP" }
                ],
                "env": [
                  { "name": "HTTP_PROXY" },
                  { "name": "HTTPS_PROXY" },
                  { "name": "NO_PROXY" }
                ],
                "resources": { "requests": { "cpu": "1m", "memory": "20Mi" } },
                "volumeMounts": [
                  {
                    "name": "secret-prometheus-k8s-tls",
                    "mountPath": "/etc/tls/private"
                  },
                  {
                    "name": "secret-prometheus-k8s-proxy",
                    "mountPath": "/etc/proxy/secrets"
                  },
                  {
                    "name": "secret-prometheus-k8s-htpasswd",
                    "mountPath": "/etc/proxy/htpasswd"
                  },
                  {
                    "name": "prometheus-trusted-ca-bundle",
                    "readOnly": true,
                    "mountPath": "/etc/pki/ca-trust/extracted/pem/"
                  },
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              },
              {
                "name": "kube-rbac-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "args": [
                  "--secure-listen-address=0.0.0.0:9092",
                  "--upstream=http://127.0.0.1:9095",
                  "--config-file=/etc/kube-rbac-proxy/config.yaml",
                  "--tls-cert-file=/etc/tls/private/tls.crt",
                  "--tls-private-key-file=/etc/tls/private/tls.key",
                  "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",
                  "--logtostderr=true",
                  "--v=10"
                ],
                "ports": [
                  {
                    "name": "tenancy",
                    "containerPort": 9092,
                    "protocol": "TCP"
                  }
                ],
                "resources": { "requests": { "cpu": "1m", "memory": "20Mi" } },
                "volumeMounts": [
                  {
                    "name": "secret-prometheus-k8s-tls",
                    "mountPath": "/etc/tls/private"
                  },
                  {
                    "name": "secret-kube-rbac-proxy",
                    "mountPath": "/etc/kube-rbac-proxy"
                  },
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              },
              {
                "name": "prom-label-proxy",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2173536432a116be7975619d17c61d676b099f59e111afb0a0a704f436ec552c",
                "args": [
                  "--insecure-listen-address=127.0.0.1:9095",
                  "--upstream=http://127.0.0.1:9090",
                  "--label=namespace"
                ],
                "resources": { "requests": { "cpu": "1m", "memory": "20Mi" } },
                "volumeMounts": [
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              },
              {
                "name": "kube-rbac-proxy-thanos",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "args": [
                  "--secure-listen-address=[$(POD_IP)]:10902",
                  "--upstream=http://127.0.0.1:10902",
                  "--tls-cert-file=/etc/tls/private/tls.crt",
                  "--tls-private-key-file=/etc/tls/private/tls.key",
                  "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",
                  "--allow-paths=/metrics",
                  "--logtostderr=true"
                ],
                "ports": [
                  {
                    "name": "thanos-proxy",
                    "containerPort": 10902,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "POD_IP",
                    "valueFrom": {
                      "fieldRef": {
                        "apiVersion": "v1",
                        "fieldPath": "status.podIP"
                      }
                    }
                  }
                ],
                "resources": { "requests": { "cpu": "1m", "memory": "10Mi" } },
                "volumeMounts": [
                  {
                    "name": "secret-prometheus-k8s-thanos-sidecar-tls",
                    "mountPath": "/etc/tls/private"
                  },
                  {
                    "name": "prometheus-k8s-token-zkhg2",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  }
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 600,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "kubernetes.io/os": "linux" },
            "serviceAccountName": "prometheus-k8s",
            "serviceAccount": "prometheus-k8s",
            "nodeName": "worker-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {
              "seLinuxOptions": { "level": "s0:c21,c0" },
              "runAsUser": 65534,
              "runAsNonRoot": true,
              "fsGroup": 65534
            },
            "imagePullSecrets": [{ "name": "prometheus-k8s-dockercfg-w6k4v" }],
            "hostname": "prometheus-k8s-1",
            "subdomain": "prometheus-operated",
            "affinity": {
              "podAntiAffinity": {
                "preferredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "weight": 100,
                    "podAffinityTerm": {
                      "labelSelector": {
                        "matchExpressions": [
                          {
                            "key": "prometheus",
                            "operator": "In",
                            "values": ["k8s"]
                          }
                        ]
                      },
                      "namespaces": ["openshift-monitoring"],
                      "topologyKey": "kubernetes.io/hostname"
                    }
                  }
                ]
              }
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 300
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 300
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T16:15:28Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T16:15:35Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T16:15:35Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T16:15:28Z"
              }
            ],
            "hostIP": "10.0.89.93",
            "podIP": "10.129.0.148",
            "podIPs": [{ "ip": "10.129.0.148" }],
            "startTime": "2021-07-07T16:15:28Z",
            "containerStatuses": [
              {
                "name": "config-reloader",
                "state": { "running": { "startedAt": "2021-07-07T16:15:31Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98ce5083663a333717bf26620e288e3e097b462146f0dd253eb32c1a14a08722",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98ce5083663a333717bf26620e288e3e097b462146f0dd253eb32c1a14a08722",
                "containerID": "cri-o://a366271d65f3ab4d687d68e06703e6c65b53f19f112cf5ad15eb6beb4c92f313",
                "started": true
              },
              {
                "name": "kube-rbac-proxy",
                "state": { "running": { "startedAt": "2021-07-07T16:15:32Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "containerID": "cri-o://c68e518939e3ad31b2a1f7dc7278537eae4d90bb550639780e099be325f28785",
                "started": true
              },
              {
                "name": "kube-rbac-proxy-thanos",
                "state": { "running": { "startedAt": "2021-07-07T16:15:32Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                "containerID": "cri-o://a763baf543fa46a3faadd80d8641d010de7696bcf799514ef632dddddaa2bb24",
                "started": true
              },
              {
                "name": "prom-label-proxy",
                "state": { "running": { "startedAt": "2021-07-07T16:15:32Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2173536432a116be7975619d17c61d676b099f59e111afb0a0a704f436ec552c",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2173536432a116be7975619d17c61d676b099f59e111afb0a0a704f436ec552c",
                "containerID": "cri-o://c9fa6565de5164bf42a6300c3eb05d3edd559d2ea76befcbb7f922ec9d08821a",
                "started": true
              },
              {
                "name": "prometheus",
                "state": { "running": { "startedAt": "2021-07-07T16:15:33Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 2,
                    "reason": "Error",
                    "message": "level=error ts=2021-07-07T16:15:31.536Z caller=main.go:289 msg=\"Error loading config (--config.file=/etc/prometheus/config_out/prometheus.env.yaml)\" err=\"open /etc/prometheus/config_out/prometheus.env.yaml: no such file or directory\"\n",
                    "startedAt": "2021-07-07T16:15:31Z",
                    "finishedAt": "2021-07-07T16:15:31Z",
                    "containerID": "cri-o://ed69f34ada59e897f3013c1743e0c26bcb2c4237370755174420652391af013a"
                  }
                },
                "ready": true,
                "restartCount": 1,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:22c8bf0a554da33f3e135d8e148d7b437f948f0784bba9964266f87046293ca4",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:22c8bf0a554da33f3e135d8e148d7b437f948f0784bba9964266f87046293ca4",
                "containerID": "cri-o://69a9f377402d495e63bae4b6b5f3ad9a8ab4957043359b3ee66af04913f67ff4",
                "started": true
              },
              {
                "name": "prometheus-proxy",
                "state": { "running": { "startedAt": "2021-07-07T16:15:32Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2",
                "containerID": "cri-o://1f297ff0e705336fb5d58463c782185a0a2b74e9defa4d47305d91b7f119021c",
                "started": true
              },
              {
                "name": "thanos-sidecar",
                "state": { "running": { "startedAt": "2021-07-07T16:15:31Z" } },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:869e72bca1256bad482959b46db947fbc402eaff89049c5f4e237f2090074dc6",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:869e72bca1256bad482959b46db947fbc402eaff89049c5f4e237f2090074dc6",
                "containerID": "cri-o://5c67e4ff7a50f1116fed2c5bcc266235b01d820e74b8591c77ce78237d4a8317",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-oauth-apiserver": {
        "apiserver-695d9c5549-w7fjs.json": {
          "metadata": {
            "name": "apiserver-695d9c5549-w7fjs",
            "generateName": "apiserver-695d9c5549-",
            "namespace": "openshift-oauth-apiserver",
            "selfLink": "/api/v1/namespaces/openshift-oauth-apiserver/pods/apiserver-695d9c5549-w7fjs",
            "uid": "4293ad05-c620-480e-b7bd-d46d72568578",
            "resourceVersion": "339765",
            "creationTimestamp": "2021-07-07T11:28:33Z",
            "labels": {
              "apiserver": "true",
              "app": "openshift-oauth-apiserver",
              "oauth-apiserver-anti-affinity": "true",
              "pod-template-hash": "695d9c5549",
              "revision": "1"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.51\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.51\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "node-exporter",
              "operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret": "8cEV_A==",
              "operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap": "xtoDgA=="
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "apiserver-695d9c5549",
                "uid": "7b0925a1-3591-41aa-8184-b884e9e69eee",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "audit-policies",
                "configMap": { "name": "audit-1", "defaultMode": 420 }
              },
              {
                "name": "etcd-client",
                "secret": { "secretName": "etcd-client", "defaultMode": 420 }
              },
              {
                "name": "etcd-serving-ca",
                "configMap": { "name": "etcd-serving-ca", "defaultMode": 420 }
              },
              {
                "name": "serving-cert",
                "secret": { "secretName": "serving-cert", "defaultMode": 420 }
              },
              {
                "name": "trusted-ca-bundle",
                "configMap": {
                  "name": "trusted-ca-bundle",
                  "items": [
                    { "key": "ca-bundle.crt", "path": "tls-ca-bundle.pem" }
                  ],
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "encryption-config",
                "secret": {
                  "secretName": "encryption-config-1",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "audit-dir",
                "hostPath": { "path": "/var/log/oauth-apiserver", "type": "" }
              },
              {
                "name": "oauth-apiserver-sa-token-ghq9l",
                "secret": {
                  "secretName": "oauth-apiserver-sa-token-ghq9l",
                  "defaultMode": 420
                }
              }
            ],
            "initContainers": [
              {
                "name": "fix-audit-permissions",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bf73093ae0c7497d54da40d5acc6aeba596f1190fe2315854d4654e3a868335c",
                "command": [
                  "sh",
                  "-c",
                  "chmod 0700 /var/log/oauth-apiserver && touch /var/log/oauth-apiserver/audit.log && chmod 0600 /var/log/oauth-apiserver/*"
                ],
                "resources": { "requests": { "cpu": "15m", "memory": "50Mi" } },
                "volumeMounts": [
                  {
                    "name": "audit-dir",
                    "mountPath": "/var/log/oauth-apiserver"
                  },
                  {
                    "name": "oauth-apiserver-sa-token-ghq9l",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "privileged": true }
              }
            ],
            "containers": [
              {
                "name": "oauth-apiserver",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bf73093ae0c7497d54da40d5acc6aeba596f1190fe2315854d4654e3a868335c",
                "command": ["/bin/bash", "-ec"],
                "args": [
                  "if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then\n  echo \"Copying system trust bundle\"\n  cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem\nfi\nexec oauth-apiserver start \\\n  --secure-port=8443 \\\n  --audit-log-path=/var/log/oauth-apiserver/audit.log \\\n  --audit-log-format=json \\\n  --audit-log-maxsize=100 \\\n  --audit-log-maxbackup=10 \\\n  --etcd-cafile=/var/run/configmaps/etcd-serving-ca/ca-bundle.crt \\\n  --etcd-keyfile=/var/run/secrets/etcd-client/tls.key \\\n  --etcd-certfile=/var/run/secrets/etcd-client/tls.crt \\\n  --shutdown-delay-duration=3s \\\n  --tls-private-key-file=/var/run/secrets/serving-cert/tls.key \\\n  --tls-cert-file=/var/run/secrets/serving-cert/tls.crt \\\n  --audit-policy-file=/var/run/configmaps/audit/secure-oauth-storage-default.yaml \\\n--cors-allowed-origins='//127\\.0\\.0\\.1(:|$)' \\\n--cors-allowed-origins='//localhost(:|$)' \\\n--etcd-servers=https://10.0.88.27:2379 \\\n--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \\\n--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 \\\n--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 \\\n--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 \\\n--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 \\\n--tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 \\\n--tls-min-version=VersionTLS12 \\\n--v=2\n"
                ],
                "ports": [{ "containerPort": 8443, "protocol": "TCP" }],
                "resources": {
                  "requests": { "cpu": "150m", "memory": "200Mi" }
                },
                "volumeMounts": [
                  {
                    "name": "audit-policies",
                    "mountPath": "/var/run/configmaps/audit"
                  },
                  {
                    "name": "etcd-client",
                    "mountPath": "/var/run/secrets/etcd-client"
                  },
                  {
                    "name": "etcd-serving-ca",
                    "mountPath": "/var/run/configmaps/etcd-serving-ca"
                  },
                  {
                    "name": "trusted-ca-bundle",
                    "mountPath": "/var/run/configmaps/trusted-ca-bundle"
                  },
                  {
                    "name": "serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "encryption-config",
                    "mountPath": "/var/run/secrets/encryption-config"
                  },
                  {
                    "name": "audit-dir",
                    "mountPath": "/var/log/oauth-apiserver"
                  },
                  {
                    "name": "oauth-apiserver-sa-token-ghq9l",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "healthz",
                    "port": 8443,
                    "scheme": "HTTPS"
                  },
                  "initialDelaySeconds": 30,
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "readyz",
                    "port": 8443,
                    "scheme": "HTTPS"
                  },
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 10
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "privileged": true }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 70,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "oauth-apiserver-sa",
            "serviceAccount": "oauth-apiserver-sa",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {},
            "affinity": {
              "podAntiAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchLabels": {
                        "apiserver": "true",
                        "app": "openshift-oauth-apiserver",
                        "oauth-apiserver-anti-affinity": "true"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              }
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-node-critical",
            "priority": 2000001000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:28:40Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:21Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:21Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:28:34Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.51",
            "podIPs": [{ "ip": "10.128.0.51" }],
            "startTime": "2021-07-07T11:28:34Z",
            "initContainerStatuses": [
              {
                "name": "fix-audit-permissions",
                "state": {
                  "terminated": {
                    "exitCode": 0,
                    "reason": "Completed",
                    "startedAt": "2021-07-07T11:28:40Z",
                    "finishedAt": "2021-07-07T11:28:40Z",
                    "containerID": "cri-o://4c38631924907ef7ecdd1658322a3dc169baec421460b0a3e9688784c9600a1b"
                  }
                },
                "lastState": {},
                "ready": true,
                "restartCount": 0,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bf73093ae0c7497d54da40d5acc6aeba596f1190fe2315854d4654e3a868335c",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bf73093ae0c7497d54da40d5acc6aeba596f1190fe2315854d4654e3a868335c",
                "containerID": "cri-o://4c38631924907ef7ecdd1658322a3dc169baec421460b0a3e9688784c9600a1b"
              }
            ],
            "containerStatuses": [
              {
                "name": "oauth-apiserver",
                "state": { "running": { "startedAt": "2021-07-08T11:00:14Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 1,
                    "reason": "Error",
                    "message": "oup is omitted for resources of apiVersion v1 (the legacy core API) and included for others, and size is a number. It takes effect when watch-cache is enabled. Some resources (replicationcontrollers, endpoints, nodes, pods, services, apiservices.apiregistration.k8s.io) have system defaults set by heuristics, others default to default-watch-cache-size\n\nGlobal Flags:\n      --add-dir-header                   If true, adds the file directory to the header of the log messages\n      --alsologtostderr                  log to standard error as well as files\n      --log-backtrace-at traceLocation   when logging hits line file:N, emit a stack trace (default :0)\n      --log-dir string                   If non-empty, write log files in this directory\n      --log-file string                  If non-empty, use this log file\n      --log-file-max-size uint           Defines the maximum size a log file can grow to. Unit is megabytes. If the value is 0, the maximum file size is unlimited. (default 1800)\n      --log-flush-frequency duration     Maximum number of seconds between log flushes (default 5s)\n      --logtostderr                      log to standard error instead of files (default true)\n      --one-output                       If true, only write logs to their native severity level (vs also writing to each lower severity level\n      --skip-headers                     If true, avoid header prefixes in the log messages\n      --skip-log-headers                 If true, avoid headers when opening log files\n      --stderrthreshold severity         logs at or above this threshold go to stderr (default 2)\n  -v, --v Level                          number for the log level verbosity (default 0)\n      --vmodule moduleSpec               comma-separated list of pattern=N settings for file-filtered logging\n\nunable to load configmap based request-header-client-ca-file: Get \"https://172.30.0.1:443/api/v1/namespaces/kube-system/configmaps/extension-apiserver-authentication?timeout=10s\": dial tcp 172.30.0.1:443: connect: connection refused\n",
                    "startedAt": "2021-07-08T10:59:55Z",
                    "finishedAt": "2021-07-08T10:59:55Z",
                    "containerID": "cri-o://b560e6da76983978f36f02c86872f02709dee612419401eeb8a963026589bd68"
                  }
                },
                "ready": true,
                "restartCount": 13,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bf73093ae0c7497d54da40d5acc6aeba596f1190fe2315854d4654e3a868335c",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bf73093ae0c7497d54da40d5acc6aeba596f1190fe2315854d4654e3a868335c",
                "containerID": "cri-o://ef950face6eb68c7da982f3f6c419eeb37299b6ba374332ab53cfb170d16cb3f",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-operator-lifecycle-manager": {
        "packageserver-6d96bf85f8-kqfkr.json": {
          "metadata": {
            "name": "packageserver-6d96bf85f8-kqfkr",
            "generateName": "packageserver-6d96bf85f8-",
            "namespace": "openshift-operator-lifecycle-manager",
            "selfLink": "/api/v1/namespaces/openshift-operator-lifecycle-manager/pods/packageserver-6d96bf85f8-kqfkr",
            "uid": "c2c02f9d-cca7-4463-9ef2-70d405e4f911",
            "resourceVersion": "340153",
            "creationTimestamp": "2021-07-07T11:27:22Z",
            "labels": {
              "app": "packageserver",
              "pod-template-hash": "6d96bf85f8"
            },
            "annotations": {
              "include.release.openshift.io/self-managed-high-availability": "true",
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.39\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.39\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "olm.operatorGroup": "olm-operators",
              "olm.operatorNamespace": "openshift-operator-lifecycle-manager",
              "olm.targetNamespaces": "openshift-operator-lifecycle-manager",
              "olmcahash": "a3d6ca684f54e5037cce6f6e00214e015b73e9dbd1cfb7c183bbdd59c59933bb",
              "openshift.io/scc": "anyuid"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "packageserver-6d96bf85f8",
                "uid": "94f36afc-f9e5-495d-ad07-1ac54a8814fc",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              { "name": "tmpfs", "emptyDir": {} },
              {
                "name": "apiservice-cert",
                "secret": {
                  "secretName": "packageserver-service-cert",
                  "items": [
                    { "key": "tls.crt", "path": "apiserver.crt" },
                    { "key": "tls.key", "path": "apiserver.key" }
                  ],
                  "defaultMode": 420
                }
              },
              {
                "name": "webhook-cert",
                "secret": {
                  "secretName": "packageserver-service-cert",
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" }
                  ],
                  "defaultMode": 420
                }
              },
              {
                "name": "olm-operator-serviceaccount-token-h2dpg",
                "secret": {
                  "secretName": "olm-operator-serviceaccount-token-h2dpg",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "packageserver",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a82d66bbedea3a8205fba45225893071b7f783cf83d3659ea415a190dc394a03",
                "command": [
                  "/bin/package-server",
                  "-v=4",
                  "--secure-port",
                  "5443",
                  "--global-namespace",
                  "openshift-marketplace"
                ],
                "ports": [{ "containerPort": 5443, "protocol": "TCP" }],
                "env": [
                  {
                    "name": "OPERATOR_CONDITION_NAME",
                    "value": "packageserver"
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  { "name": "tmpfs", "mountPath": "/tmp" },
                  {
                    "name": "apiservice-cert",
                    "mountPath": "/apiserver.local.config/certificates"
                  },
                  {
                    "name": "webhook-cert",
                    "mountPath": "/tmp/k8s-webhook-server/serving-certs"
                  },
                  {
                    "name": "olm-operator-serviceaccount-token-h2dpg",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 5443,
                    "scheme": "HTTPS"
                  },
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 5443,
                    "scheme": "HTTPS"
                  },
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "capabilities": { "drop": ["MKNOD"] } }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux",
              "node-role.kubernetes.io/master": ""
            },
            "serviceAccountName": "olm-operator-serviceaccount",
            "serviceAccount": "olm-operator-serviceaccount",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": { "seLinuxOptions": { "level": "s0:c19,c9" } },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:27:22Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:01:04Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:01:04Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:27:22Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.39",
            "podIPs": [{ "ip": "10.128.0.39" }],
            "startTime": "2021-07-07T11:27:22Z",
            "containerStatuses": [
              {
                "name": "packageserver",
                "state": { "running": { "startedAt": "2021-07-08T11:00:58Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 1,
                    "reason": "Error",
                    "message": "_CHACHA20_POLY1305_SHA256, TLS_RSA_WITH_3DES_EDE_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_256_GCM_SHA384. \n                                                                Insecure values: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_RC4_128_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_RC4_128_SHA, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_RC4_128_SHA.\n      --tls-min-version string                                  Minimum TLS version supported. Possible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13\n      --tls-private-key-file string                             File containing the default x509 private key matching --tls-cert-file.\n      --tls-sni-cert-key namedCertKey                           A pair of x509 certificate and private key file paths, optionally suffixed with a list of domain patterns which are fully qualified domain names, possibly with prefixed wildcard segments. The domain patterns also allow IP addresses, but IPs should only be used if the apiserver has visibility to the IP address requested by a client. If no domain patterns are provided, the names of the certificate are extracted. Non-wildcard matches trump over wildcard matches, explicit domain patterns trump over extracted names. For multiple key/certificate pairs, use the --tls-sni-cert-key multiple times. Examples: \"example.crt,example.key\" or \"foo.crt,foo.key:*.foo.com,foo.com\". (default [])\n  -v, --v Level                                                 number for the log level verbosity (default 0)\n      --vmodule moduleSpec                                      comma-separated list of pattern=N settings for file-filtered logging\n\ntime=\"2021-07-08T11:00:12Z\" level=fatal msg=\"unable to load configmap based request-header-client-ca-file: Get \\\"https://172.30.0.1:443/api/v1/namespaces/kube-system/configmaps/extension-apiserver-authentication?timeout=10s\\\": dial tcp 172.30.0.1:443: connect: connection refused\"\n",
                    "startedAt": "2021-07-08T11:00:12Z",
                    "finishedAt": "2021-07-08T11:00:12Z",
                    "containerID": "cri-o://6a9cd9bc1bb3fe76459b4df0040ede481dda7fbc297af80fe1ef4ea1a3fc4279"
                  }
                },
                "ready": true,
                "restartCount": 17,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a82d66bbedea3a8205fba45225893071b7f783cf83d3659ea415a190dc394a03",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a82d66bbedea3a8205fba45225893071b7f783cf83d3659ea415a190dc394a03",
                "containerID": "cri-o://3797dd2f75ae01bd9761c3d050f6211a1175f456a36f6eda84fc3d70707aeb8d",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        },
        "packageserver-6d96bf85f8-pv2g8.json": {
          "metadata": {
            "name": "packageserver-6d96bf85f8-pv2g8",
            "generateName": "packageserver-6d96bf85f8-",
            "namespace": "openshift-operator-lifecycle-manager",
            "selfLink": "/api/v1/namespaces/openshift-operator-lifecycle-manager/pods/packageserver-6d96bf85f8-pv2g8",
            "uid": "218c65a2-3147-4b0a-b280-d055ea2769f5",
            "resourceVersion": "340106",
            "creationTimestamp": "2021-07-07T11:27:22Z",
            "labels": {
              "app": "packageserver",
              "pod-template-hash": "6d96bf85f8"
            },
            "annotations": {
              "include.release.openshift.io/self-managed-high-availability": "true",
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.40\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.40\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "olm.operatorGroup": "olm-operators",
              "olm.operatorNamespace": "openshift-operator-lifecycle-manager",
              "olm.targetNamespaces": "openshift-operator-lifecycle-manager",
              "olmcahash": "a3d6ca684f54e5037cce6f6e00214e015b73e9dbd1cfb7c183bbdd59c59933bb",
              "openshift.io/scc": "anyuid"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "packageserver-6d96bf85f8",
                "uid": "94f36afc-f9e5-495d-ad07-1ac54a8814fc",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              { "name": "tmpfs", "emptyDir": {} },
              {
                "name": "apiservice-cert",
                "secret": {
                  "secretName": "packageserver-service-cert",
                  "items": [
                    { "key": "tls.crt", "path": "apiserver.crt" },
                    { "key": "tls.key", "path": "apiserver.key" }
                  ],
                  "defaultMode": 420
                }
              },
              {
                "name": "webhook-cert",
                "secret": {
                  "secretName": "packageserver-service-cert",
                  "items": [
                    { "key": "tls.crt", "path": "tls.crt" },
                    { "key": "tls.key", "path": "tls.key" }
                  ],
                  "defaultMode": 420
                }
              },
              {
                "name": "olm-operator-serviceaccount-token-h2dpg",
                "secret": {
                  "secretName": "olm-operator-serviceaccount-token-h2dpg",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "packageserver",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a82d66bbedea3a8205fba45225893071b7f783cf83d3659ea415a190dc394a03",
                "command": [
                  "/bin/package-server",
                  "-v=4",
                  "--secure-port",
                  "5443",
                  "--global-namespace",
                  "openshift-marketplace"
                ],
                "ports": [{ "containerPort": 5443, "protocol": "TCP" }],
                "env": [
                  {
                    "name": "OPERATOR_CONDITION_NAME",
                    "value": "packageserver"
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  { "name": "tmpfs", "mountPath": "/tmp" },
                  {
                    "name": "apiservice-cert",
                    "mountPath": "/apiserver.local.config/certificates"
                  },
                  {
                    "name": "webhook-cert",
                    "mountPath": "/tmp/k8s-webhook-server/serving-certs"
                  },
                  {
                    "name": "olm-operator-serviceaccount-token-h2dpg",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 5443,
                    "scheme": "HTTPS"
                  },
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/healthz",
                    "port": 5443,
                    "scheme": "HTTPS"
                  },
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "capabilities": { "drop": ["MKNOD"] } }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": {
              "kubernetes.io/os": "linux",
              "node-role.kubernetes.io/master": ""
            },
            "serviceAccountName": "olm-operator-serviceaccount",
            "serviceAccount": "olm-operator-serviceaccount",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": { "seLinuxOptions": { "level": "s0:c19,c9" } },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:27:22Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:56Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:56Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:27:22Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.40",
            "podIPs": [{ "ip": "10.128.0.40" }],
            "startTime": "2021-07-07T11:27:22Z",
            "containerStatuses": [
              {
                "name": "packageserver",
                "state": { "running": { "startedAt": "2021-07-08T11:00:55Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 1,
                    "reason": "Error",
                    "message": "_CHACHA20_POLY1305_SHA256, TLS_RSA_WITH_3DES_EDE_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_256_GCM_SHA384. \n                                                                Insecure values: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_RC4_128_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_RC4_128_SHA, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_RC4_128_SHA.\n      --tls-min-version string                                  Minimum TLS version supported. Possible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13\n      --tls-private-key-file string                             File containing the default x509 private key matching --tls-cert-file.\n      --tls-sni-cert-key namedCertKey                           A pair of x509 certificate and private key file paths, optionally suffixed with a list of domain patterns which are fully qualified domain names, possibly with prefixed wildcard segments. The domain patterns also allow IP addresses, but IPs should only be used if the apiserver has visibility to the IP address requested by a client. If no domain patterns are provided, the names of the certificate are extracted. Non-wildcard matches trump over wildcard matches, explicit domain patterns trump over extracted names. For multiple key/certificate pairs, use the --tls-sni-cert-key multiple times. Examples: \"example.crt,example.key\" or \"foo.crt,foo.key:*.foo.com,foo.com\". (default [])\n  -v, --v Level                                                 number for the log level verbosity (default 0)\n      --vmodule moduleSpec                                      comma-separated list of pattern=N settings for file-filtered logging\n\ntime=\"2021-07-08T11:00:12Z\" level=fatal msg=\"unable to load configmap based request-header-client-ca-file: Get \\\"https://172.30.0.1:443/api/v1/namespaces/kube-system/configmaps/extension-apiserver-authentication?timeout=10s\\\": dial tcp 172.30.0.1:443: connect: connection refused\"\n",
                    "startedAt": "2021-07-08T11:00:12Z",
                    "finishedAt": "2021-07-08T11:00:12Z",
                    "containerID": "cri-o://b29434c328c09c36594b2807e565436b0c1c159e1e076057fc52cf157074b5ca"
                  }
                },
                "ready": true,
                "restartCount": 18,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a82d66bbedea3a8205fba45225893071b7f783cf83d3659ea415a190dc394a03",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a82d66bbedea3a8205fba45225893071b7f783cf83d3659ea415a190dc394a03",
                "containerID": "cri-o://ea7ad2e4ff12fa04e9d00c515d7b1d9aa0c415a1eac177bdaa9c4092fe169df5",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-sdn": {
        "logs": { "sdn-controller-l8gq9": {}, "sdn-f2694": {} },
        "sdn-controller-n94gv.json": {
          "metadata": {
            "name": "sdn-controller-n94gv",
            "generateName": "sdn-controller-",
            "namespace": "openshift-sdn",
            "selfLink": "/api/v1/namespaces/openshift-sdn/pods/sdn-controller-n94gv",
            "uid": "da86e3ea-8439-4164-ae1e-eaf3e78aeb6f",
            "resourceVersion": "643342",
            "creationTimestamp": "2021-07-07T11:25:33Z",
            "labels": {
              "app": "sdn-controller",
              "controller-revision-hash": "7dff657f6",
              "pod-template-generation": "1"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "DaemonSet",
                "name": "sdn-controller",
                "uid": "2d6d4347-5054-444e-82c1-1dcbb6853ac7",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "env-overrides",
                "configMap": {
                  "name": "env-overrides",
                  "defaultMode": 420,
                  "optional": true
                }
              },
              {
                "name": "sdn-controller-token-xzkrd",
                "secret": {
                  "secretName": "sdn-controller-token-xzkrd",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "sdn-controller",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b4f8acc9a2370d99c5eb4f30bec668cb2f532ffea487f91e0038bb08911604f9",
                "command": [
                  "/bin/bash",
                  "-c",
                  "if [[ -f /env/_master ]]; then\n  set -o allexport\n  source /env/_master\n  set +o allexport\nfi\n\nexec openshift-sdn-controller --v=${OPENSHIFT_SDN_LOG_LEVEL:-2}\n"
                ],
                "env": [
                  { "name": "KUBERNETES_SERVICE_PORT", "value": "6443" },
                  {
                    "name": "KUBERNETES_SERVICE_HOST",
                    "value": "api-int.imeixner20210707.lab.upshift.rdu2.redhat.com"
                  }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "50Mi" } },
                "volumeMounts": [
                  { "name": "env-overrides", "mountPath": "/env" },
                  {
                    "name": "sdn-controller-token-xzkrd",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "FallbackToLogsOnError",
                "imagePullPolicy": "IfNotPresent"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "sdn-controller",
            "serviceAccount": "sdn-controller",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "hostNetwork": true,
            "securityContext": { "runAsUser": 65534, "runAsNonRoot": true },
            "affinity": {
              "nodeAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "nodeSelectorTerms": [
                    {
                      "matchFields": [
                        {
                          "key": "metadata.name",
                          "operator": "In",
                          "values": [
                            "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute"
              },
              {
                "key": "node.kubernetes.io/disk-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/pid-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unschedulable",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/network-unavailable",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:25:33Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-09T09:19:57Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-09T09:19:57Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:25:33Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.0.88.27",
            "podIPs": [{ "ip": "10.0.88.27" }],
            "startTime": "2021-07-07T11:25:33Z",
            "containerStatuses": [
              {
                "name": "sdn-controller",
                "state": { "running": { "startedAt": "2021-07-09T09:19:57Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "message": "\n\tk8s.io/client-go@v0.18.6/tools/cache/reflector.go:220 +0x1c5\nk8s.io/apimachinery/pkg/util/wait.(*Group).StartWithChannel.func1()\n\tk8s.io/apimachinery@v0.18.6/pkg/util/wait/wait.go:56 +0x2e\nk8s.io/apimachinery/pkg/util/wait.(*Group).Start.func1(0xc00047ea00, 0xc0003668a0)\n\tk8s.io/apimachinery@v0.18.6/pkg/util/wait/wait.go:73 +0x51\ncreated by k8s.io/apimachinery/pkg/util/wait.(*Group).Start\n\tk8s.io/apimachinery@v0.18.6/pkg/util/wait/wait.go:71 +0x65\n\ngoroutine 253 [chan receive, 1339 minutes]:\nk8s.io/client-go/tools/cache.(*sharedProcessor).run(0xc0001c0540, 0xc0000e14a0)\n\tk8s.io/client-go@v0.18.6/tools/cache/shared_informer.go:628 +0x53\nk8s.io/apimachinery/pkg/util/wait.(*Group).StartWithChannel.func1()\n\tk8s.io/apimachinery@v0.18.6/pkg/util/wait/wait.go:56 +0x2e\nk8s.io/apimachinery/pkg/util/wait.(*Group).Start.func1(0xc00047ef40, 0xc000367540)\n\tk8s.io/apimachinery@v0.18.6/pkg/util/wait/wait.go:73 +0x51\ncreated by k8s.io/apimachinery/pkg/util/wait.(*Group).Start\n\tk8s.io/apimachinery@v0.18.6/pkg/util/wait/wait.go:71 +0x65\n\ngoroutine 254 [chan receive (nil chan), 1339 minutes]:\nk8s.io/client-go/tools/cache.(*controller).Run.func1(0x0, 0xc00041d9e0)\n\tk8s.io/client-go@v0.18.6/tools/cache/controller.go:130 +0x34\ncreated by k8s.io/client-go/tools/cache.(*controller).Run\n\tk8s.io/client-go@v0.18.6/tools/cache/controller.go:129 +0xa5\n\ngoroutine 255 [select]:\nk8s.io/apimachinery/pkg/util/wait.BackoffUntil(0xc0007b5ef0, 0x1d52340, 0xc00007f630, 0x1, 0x0)\n\tk8s.io/apimachinery@v0.18.6/pkg/util/wait/wait.go:167 +0x149\nk8s.io/client-go/tools/cache.(*Reflector).Run(0xc0005f2700, 0x0)\n\tk8s.io/client-go@v0.18.6/tools/cache/reflector.go:220 +0x1c5\nk8s.io/apimachinery/pkg/util/wait.(*Group).StartWithChannel.func1()\n\tk8s.io/apimachinery@v0.18.6/pkg/util/wait/wait.go:56 +0x2e\nk8s.io/apimachinery/pkg/util/wait.(*Group).Start.func1(0xc00047efa0, 0xc000367640)\n\tk8s.io/apimachinery@v0.18.6/pkg/util/wait/wait.go:73 +0x51\ncreated by k8s.io/apimachinery/pkg/util/wait.(*Group).Start\n\tk8s.io/apimachinery@v0.18.6/pkg/util/wait/wait.go:71 +0x65\n",
                    "startedAt": "2021-07-08T10:59:33Z",
                    "finishedAt": "2021-07-09T09:19:56Z",
                    "containerID": "cri-o://6a975e28fccd82b018e8839fbbb346b26e8dcdb154eec5b55328e6723620359d"
                  }
                },
                "ready": true,
                "restartCount": 14,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b4f8acc9a2370d99c5eb4f30bec668cb2f532ffea487f91e0038bb08911604f9",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b4f8acc9a2370d99c5eb4f30bec668cb2f532ffea487f91e0038bb08911604f9",
                "containerID": "cri-o://35fe1a406c6a13c59a8c4585da4f463677ff4bc9bd4bdca0366525eab98832d3",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-service-ca": {
        "service-ca-7d7647cfdb-szfd8.json": {
          "metadata": {
            "name": "service-ca-7d7647cfdb-szfd8",
            "generateName": "service-ca-7d7647cfdb-",
            "namespace": "openshift-service-ca",
            "selfLink": "/api/v1/namespaces/openshift-service-ca/pods/service-ca-7d7647cfdb-szfd8",
            "uid": "10faab1c-d8ed-4941-8fe3-1a7f68d4f0dc",
            "resourceVersion": "339752",
            "creationTimestamp": "2021-07-07T11:26:32Z",
            "labels": {
              "app": "service-ca",
              "pod-template-hash": "7d7647cfdb",
              "service-ca": "true"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.19\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.19\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "restricted"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "service-ca-7d7647cfdb",
                "uid": "b4bb4e30-4f7e-4aff-b499-7a4d443bf1f6",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "signing-key",
                "secret": { "secretName": "signing-key", "defaultMode": 420 }
              },
              {
                "name": "signing-cabundle",
                "configMap": { "name": "signing-cabundle", "defaultMode": 420 }
              },
              {
                "name": "service-ca-token-k5llq",
                "secret": {
                  "secretName": "service-ca-token-k5llq",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "service-ca-controller",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d7b1db792c5732fd1e6104139e52a496eb2bb22de900f84117923c29eae1d48a",
                "command": ["service-ca-operator", "controller"],
                "args": ["-v=2"],
                "ports": [{ "containerPort": 8443, "protocol": "TCP" }],
                "resources": {
                  "requests": { "cpu": "10m", "memory": "120Mi" }
                },
                "volumeMounts": [
                  {
                    "name": "signing-key",
                    "mountPath": "/var/run/secrets/signing-key"
                  },
                  {
                    "name": "signing-cabundle",
                    "mountPath": "/var/run/configmaps/signing-cabundle"
                  },
                  {
                    "name": "service-ca-token-k5llq",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {
                  "capabilities": {
                    "drop": ["KILL", "MKNOD", "SETGID", "SETUID"]
                  },
                  "runAsUser": 1000500000,
                  "runAsNonRoot": true
                }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "service-ca",
            "serviceAccount": "service-ca",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": {
              "seLinuxOptions": { "level": "s0:c22,c19" },
              "fsGroup": 1000500000
            },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:32Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:17Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:17Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:32Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.19",
            "podIPs": [{ "ip": "10.128.0.19" }],
            "startTime": "2021-07-07T11:26:32Z",
            "containerStatuses": [
              {
                "name": "service-ca-controller",
                "state": { "running": { "startedAt": "2021-07-08T11:00:17Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "startedAt": "2021-07-08T10:59:33Z",
                    "finishedAt": "2021-07-08T11:00:05Z",
                    "containerID": "cri-o://bdf7c17998783ea713dbe22db2d058cf8ef49b8745ecfbfe5d3b41466c38080d"
                  }
                },
                "ready": true,
                "restartCount": 10,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d7b1db792c5732fd1e6104139e52a496eb2bb22de900f84117923c29eae1d48a",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d7b1db792c5732fd1e6104139e52a496eb2bb22de900f84117923c29eae1d48a",
                "containerID": "cri-o://e9d2ee72bbf89ad052a58ae7289ce0f58e6f98ead25a20fba6f5b82b5e4a61be",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "openshift-service-ca-operator": {
        "service-ca-operator-bf8bb76b5-8cnlb.json": {
          "metadata": {
            "name": "service-ca-operator-bf8bb76b5-8cnlb",
            "generateName": "service-ca-operator-bf8bb76b5-",
            "namespace": "openshift-service-ca-operator",
            "selfLink": "/api/v1/namespaces/openshift-service-ca-operator/pods/service-ca-operator-bf8bb76b5-8cnlb",
            "uid": "2a6e9f62-2214-4957-a896-dee8aeeb5238",
            "resourceVersion": "339755",
            "creationTimestamp": "2021-07-07T11:03:16Z",
            "labels": {
              "app": "service-ca-operator",
              "pod-template-hash": "bf8bb76b5"
            },
            "annotations": {
              "k8s.v1.cni.cncf.io/network-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.11\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "k8s.v1.cni.cncf.io/networks-status": "[{\n    \"name\": \"\",\n    \"interface\": \"eth0\",\n    \"ips\": [\n        \"10.128.0.11\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
              "openshift.io/scc": "anyuid"
            },
            "ownerReferences": [
              {
                "apiVersion": "apps/v1",
                "kind": "ReplicaSet",
                "name": "service-ca-operator-bf8bb76b5",
                "uid": "5eca14da-f408-4871-8387-082ec0fa0a35",
                "controller": true,
                "blockOwnerDeletion": true
              }
            ]
          },
          "spec": {
            "volumes": [
              {
                "name": "serving-cert",
                "secret": {
                  "secretName": "serving-cert",
                  "defaultMode": 400,
                  "optional": true
                }
              },
              {
                "name": "config",
                "configMap": {
                  "name": "service-ca-operator-config",
                  "defaultMode": 440
                }
              },
              {
                "name": "service-ca-operator-token-vxl5b",
                "secret": {
                  "secretName": "service-ca-operator-token-vxl5b",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "service-ca-operator",
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d7b1db792c5732fd1e6104139e52a496eb2bb22de900f84117923c29eae1d48a",
                "command": ["service-ca-operator", "operator"],
                "args": [
                  "--config=/var/run/configmaps/config/operator-config.yaml",
                  "-v=4"
                ],
                "env": [
                  {
                    "name": "CONTROLLER_IMAGE",
                    "value": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d7b1db792c5732fd1e6104139e52a496eb2bb22de900f84117923c29eae1d48a"
                  },
                  { "name": "OPERATOR_IMAGE_VERSION", "value": "4.7.16" }
                ],
                "resources": { "requests": { "cpu": "10m", "memory": "80Mi" } },
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/var/run/configmaps/config"
                  },
                  {
                    "name": "serving-cert",
                    "mountPath": "/var/run/secrets/serving-cert"
                  },
                  {
                    "name": "service-ca-operator-token-vxl5b",
                    "readOnly": true,
                    "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": { "capabilities": { "drop": ["MKNOD"] } }
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "nodeSelector": { "node-role.kubernetes.io/master": "" },
            "serviceAccountName": "service-ca-operator",
            "serviceAccount": "service-ca-operator",
            "nodeName": "master-0.imeixner20210707.lab.upshift.rdu2.redhat.com",
            "securityContext": { "seLinuxOptions": { "level": "s0:c17,c14" } },
            "schedulerName": "default-scheduler",
            "tolerations": [
              {
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists",
                "effect": "NoSchedule"
              },
              {
                "key": "node.kubernetes.io/unreachable",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/not-ready",
                "operator": "Exists",
                "effect": "NoExecute",
                "tolerationSeconds": 120
              },
              {
                "key": "node.kubernetes.io/memory-pressure",
                "operator": "Exists",
                "effect": "NoSchedule"
              }
            ],
            "priorityClassName": "system-cluster-critical",
            "priority": 2000000000,
            "enableServiceLinks": true,
            "preemptionPolicy": "PreemptLowerPriority"
          },
          "status": {
            "phase": "Running",
            "conditions": [
              {
                "type": "Initialized",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              },
              {
                "type": "Ready",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:18Z"
              },
              {
                "type": "ContainersReady",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-08T11:00:18Z"
              },
              {
                "type": "PodScheduled",
                "status": "True",
                "lastProbeTime": null,
                "lastTransitionTime": "2021-07-07T11:26:11Z"
              }
            ],
            "hostIP": "10.0.88.27",
            "podIP": "10.128.0.11",
            "podIPs": [{ "ip": "10.128.0.11" }],
            "startTime": "2021-07-07T11:26:11Z",
            "containerStatuses": [
              {
                "name": "service-ca-operator",
                "state": { "running": { "startedAt": "2021-07-08T11:00:18Z" } },
                "lastState": {
                  "terminated": {
                    "exitCode": 255,
                    "reason": "Error",
                    "startedAt": "2021-07-08T10:59:33Z",
                    "finishedAt": "2021-07-08T11:00:04Z",
                    "containerID": "cri-o://c256e826c1278d0bd96d9a97060129bc9c9bf0e2b407087082606f06d9e6178d"
                  }
                },
                "ready": true,
                "restartCount": 11,
                "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d7b1db792c5732fd1e6104139e52a496eb2bb22de900f84117923c29eae1d48a",
                "imageID": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d7b1db792c5732fd1e6104139e52a496eb2bb22de900f84117923c29eae1d48a",
                "containerID": "cri-o://716bdc8cfe23b1d4354a324b1530a9750b32ddef4cb090981c037a945dfe74bd",
                "started": true
              }
            ],
            "qosClass": "Burstable"
          }
        }
      },
      "sdi": {
        "logs": {
          "license-manager-da1d2e8fadfb8dd7022f08-4hjh7-6887768c5b-qzxb6": {}
        }
      }
    },
    "podnetworkconnectivitychecks.json": {
      "DNSError": {
        "kubernetes-default-service-cluster: failure looking up host api-int.imeixner20210707.lab.upshift.rdu2.redhat.com: dial tcp: lookup api-int.imeixner20210707.lab.upshift.rdu2.redhat.com on 172.30.0.10:53: server misbehaving": "2021-07-12T23:20:25+02:00",
        "load-balancer-api-external: failure looking up host api.imeixner20210707.lab.upshift.rdu2.redhat.com: dial tcp: lookup api.imeixner20210707.lab.upshift.rdu2.redhat.com on 172.30.0.10:53: server misbehaving": "2021-07-07T22:54:25+02:00",
        "load-balancer-api-internal: failure looking up host api-int.imeixner20210707.lab.upshift.rdu2.redhat.com: dial tcp: lookup api-int.imeixner20210707.lab.upshift.rdu2.redhat.com on 172.30.0.10:53: server misbehaving": "2021-07-12T23:20:25+02:00"
      },
      "TCPConnectError": {
        "kubernetes-apiserver-endpoint-master-0: failed to establish a TCP connection to 10.0.88.27:6443: dial tcp 10.0.88.27:6443: connect: connection refused": "2021-07-08T12:59:25+02:00",
        "kubernetes-apiserver-endpoint-master-0: failed to establish a TCP connection to 10.0.88.27:6443: dial tcp 10.0.88.27:6443: connect: no route to host": "2021-07-07T22:53:25+02:00",
        "kubernetes-apiserver-endpoint-master-0: failed to establish a TCP connection to 10.0.88.27:6443: dial tcp 10.0.88.27:6443: i/o timeout": "2021-07-12T23:19:25+02:00",
        "kubernetes-apiserver-service-cluster: failed to establish a TCP connection to 172.30.102.130:443: dial tcp 172.30.102.130:443: connect: connection refused": "2021-07-08T12:59:25+02:00",
        "kubernetes-apiserver-service-cluster: failed to establish a TCP connection to 172.30.102.130:443: dial tcp 172.30.102.130:443: connect: no route to host": "2021-07-07T22:53:25+02:00",
        "kubernetes-apiserver-service-cluster: failed to establish a TCP connection to 172.30.102.130:443: dial tcp 172.30.102.130:443: i/o timeout": "2021-07-12T23:19:25+02:00",
        "kubernetes-default-service-cluster: failed to establish a TCP connection to api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443: dial tcp 10.0.92.118:6443: connect: no route to host": "2021-07-12T23:19:29+02:00",
        "kubernetes-default-service-cluster: failed to establish a TCP connection to api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443: dial tcp 10.0.92.118:6443: i/o timeout": "2021-07-07T20:43:25+02:00",
        "load-balancer-api-external: failed to establish a TCP connection to api.imeixner20210707.lab.upshift.rdu2.redhat.com:6443: dial tcp 10.0.92.118:6443: connect: no route to host": "2021-07-07T18:11:01+02:00",
        "load-balancer-api-external: failed to establish a TCP connection to api.imeixner20210707.lab.upshift.rdu2.redhat.com:6443: dial tcp 10.0.92.118:6443: i/o timeout": "2021-07-12T23:19:29+02:00",
        "load-balancer-api-internal: failed to establish a TCP connection to api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443: dial tcp 10.0.92.118:6443: connect: no route to host": "2021-07-07T22:48:29+02:00",
        "load-balancer-api-internal: failed to establish a TCP connection to api-int.imeixner20210707.lab.upshift.rdu2.redhat.com:6443: dial tcp 10.0.92.118:6443: i/o timeout": "2021-07-12T23:19:29+02:00",
        "network-check-target-master-0: failed to establish a TCP connection to 10.128.0.2:8080: dial tcp 10.128.0.2:8080: connect: no route to host": "2021-07-12T23:19:25+02:00",
        "network-check-target-master-0: failed to establish a TCP connection to 10.128.0.2:8080: dial tcp 10.128.0.2:8080: i/o timeout": "2021-07-12T23:18:25+02:00",
        "network-check-target-service-cluster: failed to establish a TCP connection to network-check-target:80: dial tcp 172.30.96.101:80: connect: no route to host": "2021-07-12T23:19:25+02:00",
        "network-check-target-service-cluster: failed to establish a TCP connection to network-check-target:80: dial tcp 172.30.96.101:80: i/o timeout": "2021-07-12T23:18:25+02:00",
        "openshift-apiserver-endpoint-master-0: failed to establish a TCP connection to 10.128.0.52:8443: dial tcp 10.128.0.52:8443: connect: connection refused": "2021-07-07T13:43:57+02:00",
        "openshift-apiserver-endpoint-master-0: failed to establish a TCP connection to 10.128.0.89:8443: dial tcp 10.128.0.89:8443: connect: no route to host": "2021-07-12T23:19:25+02:00",
        "openshift-apiserver-endpoint-master-0: failed to establish a TCP connection to 10.128.0.89:8443: dial tcp 10.128.0.89:8443: i/o timeout": "2021-07-12T23:18:25+02:00",
        "openshift-apiserver-service-cluster: failed to establish a TCP connection to 172.30.220.38:443: dial tcp 172.30.220.38:443: connect: no route to host": "2021-07-12T23:19:25+02:00",
        "openshift-apiserver-service-cluster: failed to establish a TCP connection to 172.30.220.38:443: dial tcp 172.30.220.38:443: i/o timeout": "2021-07-12T23:18:25+02:00"
      }
    },
    "proxy.json": {
      "metadata": {
        "name": "cluster",
        "selfLink": "/apis/config.openshift.io/v1/proxies/cluster",
        "uid": "f50c6b7c-4434-4dff-a0ed-33ebee4ca480",
        "resourceVersion": "594",
        "generation": 1,
        "creationTimestamp": "2021-07-07T11:02:52Z"
      },
      "spec": { "trustedCA": { "name": "" } },
      "status": {}
    },
    "running_containers.json": {
      "images": {
        "0": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
        "1": "sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2",
        "2": "sha256:216036695cfba60c95e392ac8d439bd2f1e519d9cfa32f4bfa691e8796bc5e17",
        "3": "sha256:2173536432a116be7975619d17c61d676b099f59e111afb0a0a704f436ec552c",
        "4": "sha256:53f0d80942c34c87bfa5446303d8c932f3601c872b94ca1e943974b5a4d61e32",
        "5": "sha256:98ce5083663a333717bf26620e288e3e097b462146f0dd253eb32c1a14a08722",
        "6": "sha256:54d93fa42548e7cb172accb981ae540b2026ed17b1477af5dac6b7de4de6bf05",
        "7": "sha256:73826485bff3e7aca3345e72096b394834c21f05245099c37452bd22deb2baa9",
        "8": "sha256:98a4a3c6d1cfe001199c15ccf5bb28beb0dea3d1665c2df8f83b8b86a0c081af",
        "9": "sha256:acc160b61389b02278dae6f446272f73d7296e7c9bca928bd1cfc3e12e847c63",
        "10": "sha256:7c6d0a0fed7ddb95550623aa23c434446fb99abef18e6d57b8b12add606efde8",
        "11": "sha256:55531583a8d79954de9e27da0baee6c2d52c196037cd95eb6249501a5ddb7825",
        "12": "sha256:eb8251dca8dfcd5d7f4857ac2dcd4ded84e5e3a9254db2f59343102c74a6e313",
        "13": "sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa",
        "14": "sha256:7d395474a19d5c02defce37ded268c7a2041112ac37c1fb306779f872a376880",
        "15": "sha256:fed2a1ecd8f282f87eb4466c4a0f538c04583067f6536e8d9cfb98a954903ccf",
        "16": "sha256:869e72bca1256bad482959b46db947fbc402eaff89049c5f4e237f2090074dc6",
        "17": "sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
        "18": "sha256:ad08b23717af078a89f93a097f32abe9262daf9e32d124f8b1c6437efddb82e7",
        "19": "sha256:91c91c3a6020783f1af680e0c189c6f7e65c5c0ab6c99b5cd435831c416079cd",
        "20": "sha256:b4f8acc9a2370d99c5eb4f30bec668cb2f532ffea487f91e0038bb08911604f9",
        "21": "sha256:e67a70af407dff61d851cd4d39f0b3645c3397964d72b69706ab5a34de21d140",
        "22": "sha256:f4431f91f1c5bdbee3dab1784751a8c5e9fb52ec823fac43e2a6233fb5730d51",
        "23": "sha256:47b6bd1c661fa24528cc8fad8cc11b403c68980a22978d4eb1b7b989785967dd",
        "24": "sha256:beb1b5ee01101331ad161deadd10dc16ebf9db8c6b56c55cbd900cfabb28d2b2",
        "25": "sha256:bfc15f0734bdc7a736f443342d0d66c995b68e33ad01bc1f8a82f71ba2d5e479",
        "26": "sha256:03f73909b3caf94bbdf4c9f2c6aa627ea4a7cbaac0711f356234d679c49cad78",
        "27": "sha256:a3118bdcfc2f57caad30eefa66dc3139fa3d46867173aabf6679fadd3aa6df2d",
        "28": "sha256:e64890e4c5c66107fc522f8789d39f9b601533d7a665a4edd6cec31174e19bdf",
        "29": "sha256:a82d66bbedea3a8205fba45225893071b7f783cf83d3659ea415a190dc394a03",
        "30": "sha256:9501629f1ed5fd568e4952b425921c164ebc84ab5baececf7b9d6af7ca96e128",
        "31": "registry.redhat.io/redhat/certified-operator-index:v4.7",
        "32": "sha256:47f7f5386e6d5072e19c435eda446ea17432d970a936bccc11686cf536eb22dd",
        "33": "sha256:65a9ddc2bc278be683ddc6cfb87d49f63de42a9b3738bb442bcdb17d6fb92750",
        "34": "sha256:7da74296a2a7bd54b55acc32664c93f2b6351407b9de257a6b045cba1fe4399a",
        "35": "sha256:58eaabc7021dc53fffab058ec9321fabba5c6bbb9d7e91dac203ad6fb9417603",
        "36": "sha256:604ccd9c62821d67be770ada691e9f536ce348a13677bc7b4530badb66cbd967",
        "37": "sha256:e71959370f9e22097e6952268ec387b400af5c324a7018b2a5ffd1758f364f93",
        "38": "sha256:7eb7f919e5712a6c0a33b2f8e3aedbf6752146bc66f142bae430c342db2ba300",
        "39": "sha256:ed8dbde51ebca78c9ec1f1ee9e073c77255d0f5225ef8e8d17f454553603aa3a",
        "40": "sha256:6bbb3586410f0bcab2b91e37ed5ef7ca91abc9d5e8588eec8f2ae38dcfd8bf43",
        "41": "sha256:cdc05f16135f40d5974e4a827244fb87862219136da7a3d36c8ff2dfc2135a78",
        "42": "registry.redhat.io/redhat/community-operator-index:v4.7",
        "43": "sha256:593f17213a37be5d4ca14a8c409d0ab4fc70b4709cbbd72c88b9c71fbc0c79a6",
        "44": "registry.redhat.io/redhat/redhat-operator-index:v4.7",
        "45": "sha256:26c6d3992e25b2ab936418026b703c9f831ca787332fddb87c45ec87989ea19d",
        "46": "sha256:410d742b78c8089672fca8ec2f5df6a02571cf0c33880b041ca25533381a04b7",
        "47": "sha256:7002146db5d1d4b2cd1166b410b03704167d410b0b2b9a68f305a4ebfde10923",
        "48": "sha256:c913d6d126373059f2cbe50765714cb07a9371784813e33581817c77c4b1eae7",
        "49": "registry.redhat.io/redhat/redhat-marketplace-index:v4.7"
      },
      "containers": {
        "2021-07": {
          "0": 25,
          "1": 8,
          "2": 5,
          "3": 5,
          "4": 4,
          "5": 4,
          "6": 4,
          "7": 4,
          "8": 3,
          "9": 3,
          "10": 3,
          "11": 3,
          "12": 3,
          "13": 3,
          "14": 2,
          "15": 2,
          "16": 2,
          "17": 2,
          "18": 2,
          "19": 2,
          "20": 2,
          "21": 2,
          "22": 2,
          "23": 2,
          "24": 2,
          "25": 2,
          "26": 2,
          "27": 2,
          "28": 2,
          "29": 2,
          "30": 1,
          "31": 1,
          "32": 1,
          "33": 1,
          "34": 1,
          "35": 1,
          "36": 1,
          "37": 1,
          "38": 1,
          "39": 1,
          "40": 1,
          "41": 1,
          "42": 1,
          "43": 1,
          "44": 1,
          "45": 1,
          "46": 1,
          "47": 1,
          "48": 1,
          "49": 1
        }
      }
    },
    "securitycontextconstraint": {
      "anyuid.json": {
        "metadata": {
          "name": "anyuid",
          "selfLink": "/apis/security.openshift.io/v1/securitycontextconstraints/anyuid",
          "uid": "67895b85-570c-4b27-b58b-6bc6231f4120",
          "resourceVersion": "1202",
          "generation": 1,
          "creationTimestamp": "2021-01-20T17:14:17Z",
          "annotations": {
            "include.release.openshift.io/self-managed-high-availability": "true",
            "kubernetes.io/description": "anyuid provides all features of the restricted SCC but allows users to run with any UID and any GID.",
            "release.openshift.io/create-only": "true"
          }
        },
        "priority": 10,
        "allowPrivilegedContainer": false,
        "defaultAddCapabilities": null,
        "requiredDropCapabilities": ["MKNOD"],
        "allowedCapabilities": null,
        "allowHostDirVolumePlugin": false,
        "volumes": [
          "configMap",
          "downwardAPI",
          "emptyDir",
          "persistentVolumeClaim",
          "projected",
          "secret"
        ],
        "allowHostNetwork": false,
        "allowHostPorts": false,
        "allowHostPID": false,
        "allowHostIPC": false,
        "allowPrivilegeEscalation": true,
        "seLinuxContext": { "type": "MustRunAs" },
        "runAsUser": { "type": "RunAsAny" },
        "supplementalGroups": { "type": "RunAsAny" },
        "fsGroup": { "type": "RunAsAny" },
        "readOnlyRootFilesystem": false,
        "users": [],
        "groups": ["system:cluster-admins"]
      },
      "privileged.json": {
        "metadata": {
          "name": "privileged",
          "selfLink": "/apis/security.openshift.io/v1/securitycontextconstraints/privileged",
          "uid": "304c202a-bcf6-4294-9192-1849ee7c78f6",
          "resourceVersion": "1582",
          "generation": 1,
          "creationTimestamp": "2021-01-20T17:14:27Z",
          "annotations": {
            "include.release.openshift.io/self-managed-high-availability": "true",
            "kubernetes.io/description": "privileged allows access to all privileged and host features and the ability to run as any user, any group, any fsGroup, and with any SELinux context.  WARNING: this is the most relaxed SCC and should be used only for cluster administration. Grant with caution.",
            "release.openshift.io/create-only": "true"
          }
        },
        "priority": null,
        "allowPrivilegedContainer": true,
        "defaultAddCapabilities": null,
        "requiredDropCapabilities": null,
        "allowedCapabilities": ["*"],
        "allowHostDirVolumePlugin": true,
        "volumes": ["*"],
        "allowHostNetwork": true,
        "allowHostPorts": true,
        "allowHostPID": true,
        "allowHostIPC": true,
        "allowPrivilegeEscalation": true,
        "seLinuxContext": { "type": "RunAsAny" },
        "runAsUser": { "type": "RunAsAny" },
        "supplementalGroups": { "type": "RunAsAny" },
        "fsGroup": { "type": "RunAsAny" },
        "readOnlyRootFilesystem": false,
        "users": [
          "system:admin",
          "system:serviceaccount:openshift-infra:build-controller"
        ],
        "groups": ["system:cluster-admins", "system:nodes", "system:masters"],
        "seccompProfiles": ["*"],
        "allowedUnsafeSysctls": ["*"]
      }
    },
    "serviceaccounts.json": {
      "serviceAccounts": {
        "TOTAL_COUNT": 310,
        "namespaces": {
          "default": { "name": "deployer", "secrets": 2 },
          "kube-public": { "name": "deployer", "secrets": 2 },
          "kube-system": { "name": "statefulset-controller", "secrets": 2 },
          "openshift": { "name": "deployer", "secrets": 2 },
          "openshift-apiserver": {
            "name": "openshift-apiserver-sa",
            "secrets": 2
          },
          "openshift-apiserver-operator": {
            "name": "openshift-apiserver-operator",
            "secrets": 2
          },
          "openshift-authentication": {
            "name": "oauth-openshift",
            "secrets": 2
          },
          "openshift-authentication-operator": {
            "name": "deployer",
            "secrets": 2
          },
          "openshift-cloud-credential-operator": {
            "name": "deployer",
            "secrets": 2
          },
          "openshift-cluster-csi-drivers": { "name": "deployer", "secrets": 2 },
          "openshift-cluster-machine-approver": {
            "name": "machine-approver-sa",
            "secrets": 2
          },
          "openshift-cluster-node-tuning-operator": {
            "name": "tuned",
            "secrets": 2
          },
          "openshift-cluster-samples-operator": {
            "name": "deployer",
            "secrets": 2
          },
          "openshift-cluster-storage-operator": {
            "name": "deployer",
            "secrets": 2
          },
          "openshift-cluster-version": { "name": "deployer", "secrets": 2 },
          "openshift-config": { "name": "deployer", "secrets": 2 },
          "openshift-config-managed": { "name": "deployer", "secrets": 2 },
          "openshift-config-operator": {
            "name": "openshift-config-operator",
            "secrets": 2
          },
          "openshift-console": { "name": "deployer", "secrets": 2 },
          "openshift-console-operator": { "name": "deployer", "secrets": 2 },
          "openshift-console-user-settings": {
            "name": "deployer",
            "secrets": 2
          },
          "openshift-controller-manager": {
            "name": "openshift-controller-manager-sa",
            "secrets": 2
          },
          "openshift-controller-manager-operator": {
            "name": "openshift-controller-manager-operator",
            "secrets": 2
          },
          "openshift-dns": { "name": "dns", "secrets": 2 },
          "openshift-dns-operator": { "name": "dns-operator", "secrets": 2 },
          "openshift-etcd": { "name": "installer-sa", "secrets": 2 },
          "openshift-etcd-operator": { "name": "etcd-operator", "secrets": 2 },
          "openshift-host-network": { "name": "deployer", "secrets": 2 },
          "openshift-image-registry": { "name": "registry", "secrets": 2 },
          "openshift-infra": { "name": "unidling-controller", "secrets": 2 },
          "openshift-ingress": { "name": "router", "secrets": 2 },
          "openshift-ingress-canary": { "name": "deployer", "secrets": 2 },
          "openshift-ingress-operator": {
            "name": "ingress-operator",
            "secrets": 2
          },
          "openshift-insights": { "name": "operator", "secrets": 2 },
          "openshift-kni-infra": { "name": "deployer", "secrets": 2 },
          "openshift-kube-apiserver": {
            "name": "localhost-recovery-client",
            "secrets": 2
          },
          "openshift-kube-apiserver-operator": {
            "name": "kube-apiserver-operator",
            "secrets": 2
          },
          "openshift-kube-controller-manager": {
            "name": "localhost-recovery-client",
            "secrets": 2
          },
          "openshift-kube-controller-manager-operator": {
            "name": "kube-controller-manager-operator",
            "secrets": 2
          },
          "openshift-kube-scheduler": {
            "name": "openshift-kube-scheduler-sa",
            "secrets": 2
          },
          "openshift-kube-scheduler-operator": {
            "name": "openshift-kube-scheduler-operator",
            "secrets": 2
          },
          "openshift-kube-storage-version-migrator": {
            "name": "kube-storage-version-migrator-sa",
            "secrets": 2
          },
          "openshift-kube-storage-version-migrator-operator": {
            "name": "kube-storage-version-migrator-operator",
            "secrets": 2
          },
          "openshift-kubevirt-infra": { "name": "deployer", "secrets": 2 },
          "openshift-machine-api": {
            "name": "machine-api-termination-handler",
            "secrets": 2
          },
          "openshift-machine-config-operator": {
            "name": "node-bootstrapper",
            "secrets": 2
          },
          "openshift-marketplace": { "name": "redhat-operators", "secrets": 2 },
          "openshift-monitoring": { "name": "thanos-querier", "secrets": 2 },
          "openshift-multus": { "name": "multus", "secrets": 2 },
          "openshift-network-diagnostics": {
            "name": "network-diagnostics",
            "secrets": 2
          },
          "openshift-network-operator": { "name": "deployer", "secrets": 2 },
          "openshift-node": { "name": "deployer", "secrets": 2 },
          "openshift-oauth-apiserver": {
            "name": "oauth-apiserver-sa",
            "secrets": 2
          },
          "openshift-openstack-infra": { "name": "deployer", "secrets": 2 },
          "openshift-operator-lifecycle-manager": {
            "name": "olm-operator-serviceaccount",
            "secrets": 2
          },
          "openshift-operators": { "name": "deployer", "secrets": 2 },
          "openshift-ovirt-infra": { "name": "deployer", "secrets": 2 },
          "openshift-sdn": { "name": "sdn-controller", "secrets": 2 },
          "openshift-service-ca": { "name": "service-ca", "secrets": 2 },
          "openshift-service-ca-operator": {
            "name": "service-ca-operator",
            "secrets": 2
          },
          "openshift-user-workload-monitoring": {
            "name": "deployer",
            "secrets": 2
          },
          "openshift-vsphere-infra": { "name": "deployer", "secrets": 2 }
        }
      }
    },
    "version.json": {
      "metadata": {
        "name": "version",
        "selfLink": "/apis/config.openshift.io/v1/clusterversions/version",
        "uid": "4f350610-d4a6-4048-b2bd-3e1583634351",
        "resourceVersion": "87835",
        "generation": 1,
        "creationTimestamp": "2021-07-07T11:02:53Z"
      },
      "spec": {
        "clusterID": "84ef291d-8f1b-4d28-ab34-cfddff941b84",
        "channel": "stable-4.7"
      },
      "status": {
        "desired": {
          "version": "4.7.16",
          "image": "quay.io/openshift-release-dev/ocp-release@sha256:3e59cff6101b0f0732540d9f2cf1fe9c7ea5ab1e8737df82e789eeb129d1a9af",
          "url": "https://access.redhat.com/errata/RHSA-2021:2286",
          "channels": [
            "candidate-4.7",
            "candidate-4.8",
            "fast-4.7",
            "stable-4.7"
          ]
        },
        "history": [
          {
            "state": "Completed",
            "startedTime": "2021-07-07T11:02:54Z",
            "completionTime": "2021-07-07T11:42:56Z",
            "version": "4.7.16",
            "image": "quay.io/openshift-release-dev/ocp-release@sha256:3e59cff6101b0f0732540d9f2cf1fe9c7ea5ab1e8737df82e789eeb129d1a9af",
            "verified": false
          }
        ],
        "observedGeneration": 1,
        "versionHash": "eY5iY9nt7EE=",
        "conditions": [
          {
            "type": "Available",
            "status": "True",
            "lastTransitionTime": "2021-07-07T11:42:56Z",
            "message": "Done applying 4.7.16"
          },
          {
            "type": "Failing",
            "status": "False",
            "lastTransitionTime": "2021-07-07T16:20:32Z"
          },
          {
            "type": "Progressing",
            "status": "False",
            "lastTransitionTime": "2021-07-07T11:42:56Z",
            "message": "Cluster version is 4.7.16"
          },
          {
            "type": "RetrievedUpdates",
            "status": "True",
            "lastTransitionTime": "2021-07-07T11:02:54Z"
          },
          {
            "type": "Upgradeable",
            "status": "False",
            "lastTransitionTime": "2021-07-07T11:28:15Z",
            "reason": "ClusterOperatorsNotUpgradeable",
            "message": "Multiple cluster operators cannot be upgraded between minor versions:\n* Cluster operator etcd cannot be upgraded between minor versions: UnsupportedConfigOverrides_UnsupportedConfigOverridesSet: UnsupportedConfigOverridesUpgradeable: setting: [useUnsupportedUnsafeNonHANonProductionUnstableEtcd]\n* Cluster operator authentication cannot be upgraded between minor versions: UnsupportedConfigOverrides_UnsupportedConfigOverridesSet: UnsupportedConfigOverridesUpgradeable: setting: [useUnsupportedUnsafeNonHANonProductionUnstableOAuthServer]"
          }
        ],
        "availableUpdates": [
          {
            "version": "4.7.18",
            "image": "quay.io/openshift-release-dev/ocp-release@sha256:afcb309425d45a240de2df8e376f9632e6144052177fd62a0347934657b3573f",
            "url": "https://access.redhat.com/errata/RHBA-2021:2502",
            "channels": [
              "candidate-4.7",
              "candidate-4.8",
              "fast-4.7",
              "stable-4.7"
            ]
          }
        ]
      }
    },
    "workload_info.json": {
      "pods": 132,
      "imageCount": 72,
      "images": {
        "sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2": {
          "layerIDs": [
            "sha256:13897c84ca5715a68feafcce9acf779f35806f42d1fcd37e8a2a5706c075252d",
            "sha256:64607cc74f9cbe0e12f167547df0cf661de5a8b1fb4ebe930a43b9f621ca457f",
            "sha256:09bec785a242f9440bd843580731fc7f0a7d72932ef6bc6190708ce1548a2ec0",
            "sha256:429fa7a36360119fa3d7f78a41ba0500140a0609f19b7869b67f75bf9c5ad466"
          ],
          "firstCommand": "icTsn2s_EIax",
          "firstArg": "2v1NneeWoS_9"
        },
        "sha256:47b6bd1c661fa24528cc8fad8cc11b403c68980a22978d4eb1b7b989785967dd": {
          "layerIDs": [
            "sha256:13897c84ca5715a68feafcce9acf779f35806f42d1fcd37e8a2a5706c075252d",
            "sha256:64607cc74f9cbe0e12f167547df0cf661de5a8b1fb4ebe930a43b9f621ca457f",
            "sha256:09bec785a242f9440bd843580731fc7f0a7d72932ef6bc6190708ce1548a2ec0",
            "sha256:87307f0f97c765b52904ba48264829295ee167025bc72ab1df4d2ce2ed9f7f6c",
            "sha256:403753cee738023fc093b5ad6bd95a3e93cf84b05838f0936e943fc0e8b5140d",
            "sha256:1bd85e07834910cad1fda7967cfd86ada69377ba0baf875683e7739d8de6d1b0"
          ],
          "firstCommand": "icTsn2s_EIax",
          "firstArg": "2v1NneeWoS_9"
        },
        "sha256:7c6d0a0fed7ddb95550623aa23c434446fb99abef18e6d57b8b12add606efde8": {
          "layerIDs": [
            "sha256:13897c84ca5715a68feafcce9acf779f35806f42d1fcd37e8a2a5706c075252d",
            "sha256:64607cc74f9cbe0e12f167547df0cf661de5a8b1fb4ebe930a43b9f621ca457f",
            "sha256:09bec785a242f9440bd843580731fc7f0a7d72932ef6bc6190708ce1548a2ec0",
            "sha256:87307f0f97c765b52904ba48264829295ee167025bc72ab1df4d2ce2ed9f7f6c",
            "sha256:403753cee738023fc093b5ad6bd95a3e93cf84b05838f0936e943fc0e8b5140d"
          ],
          "firstCommand": "icTsn2s_EIax",
          "firstArg": "2v1NneeWoS_9"
        },
        "sha256:acc160b61389b02278dae6f446272f73d7296e7c9bca928bd1cfc3e12e847c63": {
          "layerIDs": [
            "sha256:13897c84ca5715a68feafcce9acf779f35806f42d1fcd37e8a2a5706c075252d",
            "sha256:64607cc74f9cbe0e12f167547df0cf661de5a8b1fb4ebe930a43b9f621ca457f",
            "sha256:09bec785a242f9440bd843580731fc7f0a7d72932ef6bc6190708ce1548a2ec0",
            "sha256:87307f0f97c765b52904ba48264829295ee167025bc72ab1df4d2ce2ed9f7f6c",
            "sha256:5c58b96cdfce00f951f9cab28d9dcc117ef346bf73d9c9b0703d159d032ab673"
          ],
          "firstCommand": "icTsn2s_EIax",
          "firstArg": "2v1NneeWoS_9"
        }
      },
      "namespaces": {
        "0LiT6ZNtbpYL": {
          "count": 5,
          "shapes": [
            {
              "duplicates": 1,
              "restartAlways": true,
              "initContainers": [
                {
                  "imageID": "sha256:53f0d80942c34c87bfa5446303d8c932f3601c872b94ca1e943974b5a4d61e32",
                  "firstCommand": "Cl6kTzfbYztA"
                },
                {
                  "imageID": "sha256:beb1b5ee01101331ad161deadd10dc16ebf9db8c6b56c55cbd900cfabb28d2b2",
                  "firstCommand": "Cl6kTzfbYztA"
                },
                {
                  "imageID": "sha256:a3118bdcfc2f57caad30eefa66dc3139fa3d46867173aabf6679fadd3aa6df2d",
                  "firstCommand": "Cl6kTzfbYztA"
                },
                {
                  "imageID": "sha256:03f73909b3caf94bbdf4c9f2c6aa627ea4a7cbaac0711f356234d679c49cad78",
                  "firstCommand": "Cl6kTzfbYztA"
                },
                {
                  "imageID": "sha256:54d93fa42548e7cb172accb981ae540b2026ed17b1477af5dac6b7de4de6bf05",
                  "firstCommand": "Cl6kTzfbYztA"
                },
                {
                  "imageID": "sha256:54d93fa42548e7cb172accb981ae540b2026ed17b1477af5dac6b7de4de6bf05",
                  "firstCommand": "icTsn2s_EIax"
                }
              ],
              "containers": [
                {
                  "imageID": "sha256:53f0d80942c34c87bfa5446303d8c932f3601c872b94ca1e943974b5a4d61e32",
                  "firstCommand": "b51B0EZ1bw3c",
                  "firstArg": "ua-xlwwsvdYd"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "47DEQpj8HBSa"
                },
                {
                  "imageID": "sha256:e71959370f9e22097e6952268ec387b400af5c324a7018b2a5ffd1758f364f93",
                  "firstCommand": "n9CdwzVF-cwZ",
                  "firstArg": "RNOaw_AuQeIY"
                }
              ]
            },
            {
              "duplicates": 1,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "47DEQpj8HBSa"
                },
                {
                  "imageID": "sha256:7d395474a19d5c02defce37ded268c7a2041112ac37c1fb306779f872a376880",
                  "firstCommand": "FC0eu9ID58Bm",
                  "firstArg": "47DEQpj8HBSa"
                }
              ]
            }
          ]
        },
        "2IqVYeidVUxV": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:00706b91e03f7daa9efcbefc34b41996b4ec9779988a2ae8a80c26c887cdb43f",
                  "firstCommand": "UcO4la9rqCTe"
                }
              ]
            }
          ]
        },
        "43Xz0HbE9FHX": {
          "count": 5,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:c8c341765f832e4d25fe8c143fe039900c3b98ea9d2823cd00db177af3b00b1b"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:096b2ee5125fe0182de66296f58443dd9f48971be10b59f0017e08e6d44a993c"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:26c6d3992e25b2ab936418026b703c9f831ca787332fddb87c45ec87989ea19d",
                  "firstCommand": "4MEQ8E7-fUvu",
                  "firstArg": "mDEjdpyJDBZ4"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:0e6dfe876d82217bd6f3fa622ddc34f564cf2fdcac273ef0c7b6a80a7cb3788e"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:e787d4e92748d3362892f55dcc72afe84349bcf22c610915f916b2ffcbd25923"
                }
              ]
            }
          ]
        },
        "47HAKWqp7-jn": {
          "count": 6,
          "terminalCount": 2,
          "ignoredCount": 2,
          "shapes": [
            {
              "restartAlways": true,
              "initContainers": [
                {
                  "imageID": "sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                  "firstCommand": "icTsn2s_EIax"
                },
                {
                  "imageID": "sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                  "firstCommand": "icTsn2s_EIax"
                }
              ],
              "containers": [
                {
                  "imageID": "sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                  "firstCommand": "icTsn2s_EIax"
                },
                {
                  "imageID": "sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                  "firstCommand": "icTsn2s_EIax"
                },
                {
                  "imageID": "sha256:e547acdeb82a29ae9561b1d04b55525ec78a678d892a0575f8c8c34f93542ae7",
                  "firstCommand": "N9KxLV2avCo2"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:7c6d0a0fed7ddb95550623aa23c434446fb99abef18e6d57b8b12add606efde8",
                  "firstCommand": "N9KxLV2avCo2",
                  "firstArg": "47DEQpj8HBSa"
                }
              ]
            }
          ]
        },
        "4k7XyKW2A17e": {
          "count": 8,
          "terminalCount": 7,
          "shapes": [
            {
              "restartAlways": true,
              "initContainers": [
                {
                  "imageID": "sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                  "firstCommand": "930btY2ohuPL",
                  "firstArg": "CSx56PgOVZ5A"
                }
              ],
              "containers": [
                {
                  "imageID": "sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                  "firstCommand": "aC8iSHmKHojh",
                  "firstArg": "r7zEsGNvlNrk"
                },
                {
                  "imageID": "sha256:47ccc812096de6c666395ad3661145c0d24b890f35fe2e21757640558e6ee11c",
                  "firstCommand": "WFJEBSInAJpw",
                  "firstArg": "5gS4z5mOnDuY"
                },
                {
                  "imageID": "sha256:47ccc812096de6c666395ad3661145c0d24b890f35fe2e21757640558e6ee11c",
                  "firstCommand": "N9KxLV2avCo2",
                  "firstArg": "930btY2ohuPL"
                }
              ]
            }
          ]
        },
        "5fn-sCitjq6a": {
          "count": 4,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:7dc3fae0713765e88ee02d522063ba2a424cac97086104915fe468aa570ff76c",
                  "firstCommand": "HgS-rIunFHfD"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:98578c4e81ec2da96f1de6bb114410fa7b5f2b71c68eed8b6152d918f0610bd5",
                  "firstArg": "ESRPWfqdsWE1"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:b2185de7b5a6b89375c08151be2aa2bfb85880d432b25156db2c3afdffd86d4a",
                  "firstArg": "zO0oxtw_mcI5"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:c913d6d126373059f2cbe50765714cb07a9371784813e33581817c77c4b1eae7",
                  "firstArg": "dQNIqY4sYnjV"
                }
              ]
            }
          ]
        },
        "5oRWKKS3566n": {
          "count": 2,
          "shapes": [
            {
              "duplicates": 1,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:e64890e4c5c66107fc522f8789d39f9b601533d7a665a4edd6cec31174e19bdf",
                  "firstCommand": "N9KxLV2avCo2",
                  "firstArg": "k19oMZ1PIn4C"
                }
              ]
            }
          ]
        },
        "6bLpdRMvgXVP": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:58eaabc7021dc53fffab058ec9321fabba5c6bbb9d7e91dac203ad6fb9417603",
                  "firstCommand": "bGldtxNWicu3"
                }
              ]
            }
          ]
        },
        "AN3N38xANElq": {
          "count": 11,
          "terminalCount": 10,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:93e1480ab43bbc3e009dbb8682a8e51389f976108654992f4e5ac93eaf3249f6",
                  "firstCommand": "N9KxLV2avCo2",
                  "firstArg": "930btY2ohuPL"
                },
                {
                  "imageID": "sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                  "firstCommand": "N9KxLV2avCo2",
                  "firstArg": "930btY2ohuPL"
                },
                {
                  "imageID": "sha256:8c180fe987e113b2e5615a56e28c54343ecac83f9d76f901291fc9dd4ef620ac",
                  "firstCommand": "FATPL2W-sitV",
                  "firstArg": "5gS4z5mOnDuY"
                },
                {
                  "imageID": "sha256:8c180fe987e113b2e5615a56e28c54343ecac83f9d76f901291fc9dd4ef620ac",
                  "firstCommand": "N9KxLV2avCo2",
                  "firstArg": "930btY2ohuPL"
                }
              ]
            }
          ]
        },
        "CMkFy_B6OMUO": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:d7b1db792c5732fd1e6104139e52a496eb2bb22de900f84117923c29eae1d48a",
                  "firstCommand": "7aQQEh6Tr2m7",
                  "firstArg": "r7zEsGNvlNrk"
                }
              ]
            }
          ]
        },
        "C_9an18W0cU6": {
          "count": 4,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:a82d66bbedea3a8205fba45225893071b7f783cf83d3659ea415a190dc394a03",
                  "firstCommand": "ZS9VAWJDvxuf",
                  "firstArg": "47DEQpj8HBSa"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:a82d66bbedea3a8205fba45225893071b7f783cf83d3659ea415a190dc394a03",
                  "firstCommand": "ArvlNzaZtYpC",
                  "firstArg": "47DEQpj8HBSa"
                }
              ]
            },
            {
              "duplicates": 1,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:a82d66bbedea3a8205fba45225893071b7f783cf83d3659ea415a190dc394a03",
                  "firstCommand": "5-ZY-7KtGiOe"
                }
              ]
            }
          ]
        },
        "EOB8Fqt74gVH": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:410d742b78c8089672fca8ec2f5df6a02571cf0c33880b041ca25533381a04b7",
                  "firstCommand": "N9KxLV2avCo2",
                  "firstArg": "k19oMZ1PIn4C"
                },
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "aV86_fLS8Aye"
                }
              ]
            }
          ]
        },
        "EyQn00UhCg7z": {
          "count": 3,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:e67a70af407dff61d851cd4d39f0b3645c3397964d72b69706ab5a34de21d140",
                  "firstCommand": "bsRjeCtd7lVU",
                  "firstArg": "47DEQpj8HBSa"
                }
              ]
            },
            {
              "duplicates": 1,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:acc160b61389b02278dae6f446272f73d7296e7c9bca928bd1cfc3e12e847c63"
                }
              ]
            }
          ]
        },
        "F-y2qosZEzxd": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:d7b1db792c5732fd1e6104139e52a496eb2bb22de900f84117923c29eae1d48a",
                  "firstCommand": "7aQQEh6Tr2m7",
                  "firstArg": "gcNszUTvGLqr"
                }
              ]
            }
          ]
        },
        "ICyEPw5KVYuy": {
          "count": 2,
          "shapes": [
            {
              "duplicates": 1,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:ad08b23717af078a89f93a097f32abe9262daf9e32d124f8b1c6437efddb82e7",
                  "firstCommand": "ijLlFtdBW-Uk",
                  "firstArg": "47DEQpj8HBSa"
                },
                {
                  "imageID": "sha256:7c6d0a0fed7ddb95550623aa23c434446fb99abef18e6d57b8b12add606efde8",
                  "firstCommand": "N9KxLV2avCo2"
                },
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "47DEQpj8HBSa"
                }
              ]
            }
          ]
        },
        "Kt0qS5G8piJp": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:acc160b61389b02278dae6f446272f73d7296e7c9bca928bd1cfc3e12e847c63"
                }
              ]
            }
          ]
        },
        "LBp1kjMRhgCD": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "initContainers": [
                {
                  "imageID": "sha256:bf73093ae0c7497d54da40d5acc6aeba596f1190fe2315854d4654e3a868335c",
                  "firstCommand": "icTsn2s_EIax"
                }
              ],
              "containers": [
                {
                  "imageID": "sha256:bf73093ae0c7497d54da40d5acc6aeba596f1190fe2315854d4654e3a868335c",
                  "firstCommand": "N9KxLV2avCo2",
                  "firstArg": "k19oMZ1PIn4C"
                }
              ]
            }
          ]
        },
        "M9RntwZOZgi3": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:af6f3d2325b8ece925abbdb2f262d0f4f74a2f913d6619f37eb088a0fd9c6f06",
                  "firstCommand": "k9iHTIyG8PyJ",
                  "firstArg": "gcNszUTvGLqr"
                }
              ]
            }
          ]
        },
        "MBms5agiSYKb": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:091c713b147596293b9ab74b2a9fd03ba21c63a166627bc5dfcc66a53d563dee",
                  "firstArg": "zO0oxtw_mcI5"
                }
              ]
            }
          ]
        },
        "N3z7Gdl4s2xN": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:9501629f1ed5fd568e4952b425921c164ebc84ab5baececf7b9d6af7ca96e128",
                  "firstCommand": "vLhjmt4GJVrQ"
                },
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "47DEQpj8HBSa"
                }
              ]
            }
          ]
        },
        "NJ5StnkN7lNJ": {
          "count": 3,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:55531583a8d79954de9e27da0baee6c2d52c196037cd95eb6249501a5ddb7825",
                  "firstCommand": "euUHIZmT1r6w",
                  "firstArg": "gcNszUTvGLqr"
                }
              ]
            },
            {
              "duplicates": 1,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:55531583a8d79954de9e27da0baee6c2d52c196037cd95eb6249501a5ddb7825",
                  "firstCommand": "rLolUSEA-AtW"
                }
              ]
            }
          ]
        },
        "NuNApgGLWU3S": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:bfc15f0734bdc7a736f443342d0d66c995b68e33ad01bc1f8a82f71ba2d5e479",
                  "firstCommand": "loDbMsNsNHAN"
                },
                {
                  "imageID": "sha256:bfc15f0734bdc7a736f443342d0d66c995b68e33ad01bc1f8a82f71ba2d5e479",
                  "firstCommand": "BWdk-C4p4WVi",
                  "firstArg": "ov8ZFLf4OaCu"
                }
              ]
            }
          ]
        },
        "QRCRK87Nh9-g": {
          "count": 14,
          "terminalCount": 13,
          "shapes": [
            {
              "restartAlways": true,
              "initContainers": [
                {
                  "imageID": "sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                  "firstCommand": "930btY2ohuPL",
                  "firstArg": "CSx56PgOVZ5A"
                }
              ],
              "containers": [
                {
                  "imageID": "sha256:6b8518282d89eac687ce95776cd64a4962e1895f3e7e1901c29704533e75a842",
                  "firstCommand": "N9KxLV2avCo2",
                  "firstArg": "k19oMZ1PIn4C"
                },
                {
                  "imageID": "sha256:216036695cfba60c95e392ac8d439bd2f1e519d9cfa32f4bfa691e8796bc5e17",
                  "firstCommand": "VvlllczXFX2z",
                  "firstArg": "5gS4z5mOnDuY"
                },
                {
                  "imageID": "sha256:216036695cfba60c95e392ac8d439bd2f1e519d9cfa32f4bfa691e8796bc5e17",
                  "firstCommand": "VvlllczXFX2z",
                  "firstArg": "5gS4z5mOnDuY"
                },
                {
                  "imageID": "sha256:216036695cfba60c95e392ac8d439bd2f1e519d9cfa32f4bfa691e8796bc5e17",
                  "firstCommand": "VvlllczXFX2z",
                  "firstArg": "47DEQpj8HBSa"
                },
                {
                  "imageID": "sha256:216036695cfba60c95e392ac8d439bd2f1e519d9cfa32f4bfa691e8796bc5e17",
                  "firstCommand": "VvlllczXFX2z",
                  "firstArg": "Yfg8wToYnj2U"
                }
              ]
            }
          ]
        },
        "RGIC92MKxXzi": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "aV86_fLS8Aye"
                },
                {
                  "imageID": "sha256:7002146db5d1d4b2cd1166b410b03704167d410b0b2b9a68f305a4ebfde10923",
                  "firstCommand": "RxKEaTc90uWM",
                  "firstArg": "r7zEsGNvlNrk"
                }
              ]
            }
          ]
        },
        "WPOX0dN4tqDv": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:5e536619d0ddbc9c8fe66eb05c5cced829c4a11947ca3d77f96c5b5be3d199d9",
                  "firstCommand": "9RqZYN0XQJuD"
                },
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "47DEQpj8HBSa"
                }
              ]
            }
          ]
        },
        "XStfgPOmHYzB": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:264df95514c9b7096c3c74fcb56cd3906c823705edbe66e5a0fc20a8dd10b467",
                  "firstCommand": "AiycEq1CClLy",
                  "firstArg": "r7zEsGNvlNrk"
                }
              ]
            }
          ]
        },
        "cMIdS73ad1cT": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:4d423e2d8eae673e08fca3865ed7cc8dc2bac5dccd6ec07675aa130c9e74e912",
                  "firstCommand": "09D_XsQaIohy",
                  "firstArg": "r7zEsGNvlNrk"
                }
              ]
            }
          ]
        },
        "cWNZj9dm5f4i": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:47ccc812096de6c666395ad3661145c0d24b890f35fe2e21757640558e6ee11c",
                  "firstCommand": "WFJEBSInAJpw",
                  "firstArg": "r7zEsGNvlNrk"
                }
              ]
            }
          ]
        },
        "coRkJ8lvmtSk": {
          "count": 2,
          "ignoredCount": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:cdc05f16135f40d5974e4a827244fb87862219136da7a3d36c8ff2dfc2135a78"
                }
              ]
            }
          ]
        },
        "de1zmznD1F_L": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:bacac9b2cbdee2b0e05283cfe640405a1bd8a6d8e35a261ddea3b37640007323",
                  "firstCommand": "rb3iLnl9GmZR",
                  "firstArg": "r7zEsGNvlNrk"
                }
              ]
            }
          ]
        },
        "ecUe5cl6bPwX": {
          "count": 3,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:9bfbebeccb10cf5d3bd1b8a11232bd128871c4b84b86d6464d4b1144186cd471",
                  "firstCommand": "pgaYl1gqTV2L",
                  "firstArg": "47DEQpj8HBSa"
                },
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "aV86_fLS8Aye"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:47f7f5386e6d5072e19c435eda446ea17432d970a936bccc11686cf536eb22dd",
                  "firstCommand": "kwBOP3_4oVMx"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "aV86_fLS8Aye"
                },
                {
                  "imageID": "sha256:cf53422045cae8042b6a26cc0fcd717a2a14d72bf53e75e89920361691b1f094",
                  "firstCommand": "Tt12uskXp-TN",
                  "firstArg": "zO0oxtw_mcI5"
                }
              ]
            }
          ]
        },
        "inQbBSWydCWk": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:b5e62dd6be4bab839191829af08b76efe2e92aff12f1670cf97ae8e1813acd8b",
                  "firstCommand": "N9KxLV2avCo2",
                  "firstArg": "k19oMZ1PIn4C"
                }
              ]
            }
          ]
        },
        "jmuesrd3LOV1": {
          "count": 5,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa",
                  "firstCommand": "aDHd4M_0XUOd",
                  "firstArg": "zO0oxtw_mcI5"
                }
              ]
            },
            {
              "duplicates": 1,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa",
                  "firstCommand": "wCdwTcAdXQ_H",
                  "firstArg": "zO0oxtw_mcI5"
                },
                {
                  "imageID": "sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2",
                  "firstArg": "b9_L7HLMg5iY"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa",
                  "firstArg": "zO0oxtw_mcI5"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:390e6b5727214f0294c64fb402738de1678cff5cba9204b880f3ea25edc5e2aa",
                  "firstCommand": "jXkiIgNfKeEy",
                  "firstArg": "zO0oxtw_mcI5"
                }
              ]
            }
          ]
        },
        "k2lPYOlQaXUX": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:c8b313300e021ae2b4729f01f121d9a497c3127b1a433555ce962874cc27feef",
                  "firstCommand": "XqE_QmN1P920",
                  "firstArg": "r7zEsGNvlNrk"
                }
              ]
            }
          ]
        },
        "n8ih8iFf25K7": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:e67a70af407dff61d851cd4d39f0b3645c3397964d72b69706ab5a34de21d140",
                  "firstCommand": "yy9ph-KbkI9L"
                }
              ]
            }
          ]
        },
        "nMMaB9HQd060": {
          "count": 17,
          "shapes": [
            {
              "duplicates": 2,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:98a4a3c6d1cfe001199c15ccf5bb28beb0dea3d1665c2df8f83b8b86a0c081af",
                  "firstArg": "rDQv7paSi7RY"
                },
                {
                  "imageID": "sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2",
                  "firstArg": "W4R7mO3ixEbM"
                },
                {
                  "imageID": "sha256:98ce5083663a333717bf26620e288e3e097b462146f0dd253eb32c1a14a08722",
                  "firstCommand": "NJuOSOguFZRT",
                  "firstArg": "nw1jEXz0CN6o"
                },
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "aV86_fLS8Aye"
                },
                {
                  "imageID": "sha256:2173536432a116be7975619d17c61d676b099f59e111afb0a0a704f436ec552c",
                  "firstArg": "TIre9pmD-tbd"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:a5c1788d97973f4847a9476f2b3c32e90cc8d55df1e7678f35730e6d63bb25f6",
                  "firstArg": "aZFPdeh8u0QY"
                },
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "47DEQpj8HBSa"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:7da74296a2a7bd54b55acc32664c93f2b6351407b9de257a6b045cba1fe4399a",
                  "firstArg": "28t0K4exKY5S"
                },
                {
                  "imageID": "sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2",
                  "firstArg": "W4R7mO3ixEbM"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "47DEQpj8HBSa"
                },
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "47DEQpj8HBSa"
                },
                {
                  "imageID": "sha256:7eb7f919e5712a6c0a33b2f8e3aedbf6752146bc66f142bae430c342db2ba300",
                  "firstArg": "5wzTZA9Ffwb3"
                }
              ]
            },
            {
              "duplicates": 1,
              "restartAlways": true,
              "initContainers": [
                {
                  "imageID": "sha256:73826485bff3e7aca3345e72096b394834c21f05245099c37452bd22deb2baa9",
                  "firstCommand": "icTsn2s_EIax"
                }
              ],
              "containers": [
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "47DEQpj8HBSa"
                },
                {
                  "imageID": "sha256:73826485bff3e7aca3345e72096b394834c21f05245099c37452bd22deb2baa9",
                  "firstArg": "SCcKjYHEPDKM"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "47DEQpj8HBSa"
                },
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "47DEQpj8HBSa"
                },
                {
                  "imageID": "sha256:65a9ddc2bc278be683ddc6cfb87d49f63de42a9b3738bb442bcdb17d6fb92750",
                  "firstArg": "5wzTZA9Ffwb3"
                }
              ]
            },
            {
              "duplicates": 1,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:fed2a1ecd8f282f87eb4466c4a0f538c04583067f6536e8d9cfb98a954903ccf",
                  "firstArg": "qswSD-ys918P"
                }
              ]
            },
            {
              "duplicates": 1,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:98ce5083663a333717bf26620e288e3e097b462146f0dd253eb32c1a14a08722",
                  "firstCommand": "NJuOSOguFZRT",
                  "firstArg": "nw1jEXz0CN6o"
                },
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "aV86_fLS8Aye"
                },
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "aV86_fLS8Aye"
                },
                {
                  "imageID": "sha256:2173536432a116be7975619d17c61d676b099f59e111afb0a0a704f436ec552c",
                  "firstArg": "TIre9pmD-tbd"
                },
                {
                  "imageID": "sha256:22c8bf0a554da33f3e135d8e148d7b437f948f0784bba9964266f87046293ca4",
                  "firstArg": "cteiHEtNKHn0"
                },
                {
                  "imageID": "sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2",
                  "firstArg": "W4R7mO3ixEbM"
                },
                {
                  "imageID": "sha256:869e72bca1256bad482959b46db947fbc402eaff89049c5f4e237f2090074dc6",
                  "firstArg": "bItFNczIfxkG"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "47DEQpj8HBSa"
                },
                {
                  "imageID": "sha256:ed8dbde51ebca78c9ec1f1ee9e073c77255d0f5225ef8e8d17f454553603aa3a",
                  "firstArg": "e1V8mDIYJ-Es"
                }
              ]
            },
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "aV86_fLS8Aye"
                },
                {
                  "imageID": "sha256:98ce5083663a333717bf26620e288e3e097b462146f0dd253eb32c1a14a08722",
                  "firstArg": "ZaBBgxOjhLhc"
                },
                {
                  "imageID": "sha256:604ccd9c62821d67be770ada691e9f536ce348a13677bc7b4530badb66cbd967",
                  "firstCommand": "oudKofjVo8ML"
                }
              ]
            },
            {
              "duplicates": 1,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "aV86_fLS8Aye"
                },
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstArg": "aV86_fLS8Aye"
                },
                {
                  "imageID": "sha256:3cfb3379dbce10c1088bc8bf2429e72984db656ecee57c359c288f23580a3ab2",
                  "firstArg": "W4R7mO3ixEbM"
                },
                {
                  "imageID": "sha256:2173536432a116be7975619d17c61d676b099f59e111afb0a0a704f436ec552c",
                  "firstArg": "TIre9pmD-tbd"
                },
                {
                  "imageID": "sha256:869e72bca1256bad482959b46db947fbc402eaff89049c5f4e237f2090074dc6",
                  "firstArg": "qLdxkguDGeRy"
                }
              ]
            }
          ]
        },
        "nO8YkKLJMsaW": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "initContainers": [
                {
                  "imageID": "sha256:f4431f91f1c5bdbee3dab1784751a8c5e9fb52ec823fac43e2a6233fb5730d51",
                  "firstCommand": "icTsn2s_EIax"
                }
              ],
              "containers": [
                {
                  "imageID": "sha256:f4431f91f1c5bdbee3dab1784751a8c5e9fb52ec823fac43e2a6233fb5730d51",
                  "firstCommand": "N9KxLV2avCo2",
                  "firstArg": "k19oMZ1PIn4C"
                },
                {
                  "imageID": "sha256:216036695cfba60c95e392ac8d439bd2f1e519d9cfa32f4bfa691e8796bc5e17",
                  "firstCommand": "VvlllczXFX2z",
                  "firstArg": "47DEQpj8HBSa"
                }
              ]
            }
          ]
        },
        "nTf6g7hF1YMN": {
          "count": 7,
          "terminalCount": 3,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:6bbb3586410f0bcab2b91e37ed5ef7ca91abc9d5e8588eec8f2ae38dcfd8bf43",
                  "firstArg": "8DZ1gO9Xqn6d"
                }
              ]
            },
            {
              "duplicates": 2,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:eb8251dca8dfcd5d7f4857ac2dcd4ded84e5e3a9254db2f59343102c74a6e313",
                  "firstCommand": "icTsn2s_EIax"
                }
              ]
            }
          ]
        },
        "oNeg9VIL3k3N": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:593f17213a37be5d4ca14a8c409d0ab4fc70b4709cbbd72c88b9c71fbc0c79a6",
                  "firstCommand": "oNeg9VIL3k3N",
                  "firstArg": "r7zEsGNvlNrk"
                }
              ]
            }
          ]
        },
        "p1tmSwFC_Q2L": {
          "count": 4,
          "shapes": [
            {
              "duplicates": 1,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:91c91c3a6020783f1af680e0c189c6f7e65c5c0ab6c99b5cd435831c416079cd",
                  "firstCommand": "F_KbBzFD2M2X"
                }
              ]
            },
            {
              "duplicates": 1,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:47b6bd1c661fa24528cc8fad8cc11b403c68980a22978d4eb1b7b989785967dd",
                  "firstCommand": "icTsn2s_EIax",
                  "firstArg": "47DEQpj8HBSa"
                }
              ]
            }
          ]
        },
        "pepxDbsB4SPa": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:216036695cfba60c95e392ac8d439bd2f1e519d9cfa32f4bfa691e8796bc5e17",
                  "firstCommand": "VvlllczXFX2z",
                  "firstArg": "r7zEsGNvlNrk"
                }
              ]
            }
          ]
        },
        "q1TpN3EUiKjG": {
          "count": 1,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:8c180fe987e113b2e5615a56e28c54343ecac83f9d76f901291fc9dd4ef620ac",
                  "firstCommand": "FATPL2W-sitV",
                  "firstArg": "r7zEsGNvlNrk"
                }
              ]
            }
          ]
        },
        "vqe5OHD7KGWi": {
          "count": 3,
          "shapes": [
            {
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:b4f8acc9a2370d99c5eb4f30bec668cb2f532ffea487f91e0038bb08911604f9",
                  "firstCommand": "N9KxLV2avCo2"
                }
              ]
            },
            {
              "duplicates": 1,
              "restartAlways": true,
              "containers": [
                {
                  "imageID": "sha256:37ee4cf8184666792caa983611ab8d58dfd533c7cc7abe9f81a22a81876d9cd2",
                  "firstCommand": "N9KxLV2avCo2"
                },
                {
                  "imageID": "sha256:b4f8acc9a2370d99c5eb4f30bec668cb2f532ffea487f91e0038bb08911604f9",
                  "firstCommand": "N9KxLV2avCo2"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "customresources": {
    "installers.datahub.sap.com": {
      "datahubs": {
        "sdi": {
          "default.json": {
            "apiVersion": "installers.datahub.sap.com/v1alpha1",
            "kind": "DataHub",
            "metadata": {
              "annotations": {
                "com.sap.datahub.installers.dependency.runlevel-mark": "preRunLevelStarted"
              },
              "creationTimestamp": "2021-01-25T16:47:32Z",
              "finalizers": [
                "com.sap.datahub.installers.dependency",
                "datahub-controller.datahub.sap.com"
              ],
              "generation": 1,
              "name": "default",
              "namespace": "sdi",
              "resourceVersion": "82765951",
              "selfLink": "/apis/installers.datahub.sap.com/v1alpha1/namespaces/sdi/datahubs/default",
              "uid": "1efff0e0-d012-45da-810d-5df6c841da35"
            },
            "spec": {
              "auditlog": {
                "mode": "production",
                "networkPolicies": { "enabled": false },
                "podSecurityPolicies": { "release": {} },
                "proxy": {}
              },
              "backupCleanupCronSchedule": "0 0 * * *",
              "backupCronSchedule": "0 0 * * *",
              "backupRetentionPeriod": 1296000,
              "clusterID": "11bw3dz",
              "consul": {
                "UiService": {},
                "networkPolicies": { "enabled": false },
                "overrides": "Storage: 2Gi",
                "podSecurityPolicies": { "release": {} },
                "proxy": {},
                "replicas": 3,
                "resources": { "limits": {}, "requests": {} }
              },
              "deploymentType": "on-prem",
              "deployments": [
                "vsystem",
                "storage-gateway",
                "diagnostic",
                "vora-cluster"
              ],
              "diagnostic": {
                "docker": {},
                "elasticsearch": { "enabled": true, "watermark": {} },
                "fluentd": {
                  "elasticsearchExporter": {},
                  "enabled": true,
                  "varlibdockercontainers": "/var/lib/docker/containers"
                },
                "grafana": {
                  "enabled": true,
                  "urlBasePath": "/app/diagnostics-grafana"
                },
                "images": {
                  "authProxy": {},
                  "debian": {},
                  "elasticsearch": {},
                  "fluentd": {},
                  "grafana": {},
                  "kibana": {},
                  "kubeStateMetrics": {},
                  "nodeExporter": {},
                  "prometheus": {},
                  "prometheusPushgateway": {}
                },
                "kibana": {
                  "enabled": true,
                  "urlBasePath": "/app/diagnostics-kibana"
                },
                "networkPolicies": { "enabled": false },
                "nodeExporter": {},
                "podSecurityPolicies": { "release": {} },
                "prometheusKubeStateMetrics": { "enabled": true },
                "prometheusNodeExporter": { "enabled": true },
                "prometheusPushgateway": { "enabled": true },
                "prometheusServer": { "enabled": true },
                "proxy": {},
                "rbac": { "enabled": false },
                "resources": {
                  "authProxy": { "resources": {} },
                  "dockerBase": { "resources": {} },
                  "elasticsearch": { "resources": {} },
                  "fluentd": { "resources": {} },
                  "grafana": { "resources": {} },
                  "kibana": { "resources": {} },
                  "prometheusKubeStateMetrics": { "resources": {} },
                  "prometheusNodeExporter": { "resources": {} },
                  "prometheusPushgateway": { "resources": {} },
                  "prometheusServer": { "resources": {} }
                },
                "secop": { "docker": {} },
                "version": {},
                "volumes": { "elasticsearch": {}, "prometheusServer": {} }
              },
              "hana": {
                "memoryRequest": "6Gi",
                "networkPolicies": { "enabled": false },
                "podSecurityPolicies": { "release": {} },
                "proxy": {},
                "syncSleepTimeInSeconds": 30
              },
              "networkPolicies": { "enabled": false },
              "package": "3.1.13",
              "podSecurityPolicies": { "release": {} },
              "proxy": {},
              "spark": {
                "networkPolicies": { "enabled": false },
                "podSecurityPolicies": { "release": {} },
                "proxy": {},
                "resources": { "limits": {}, "requests": {} }
              },
              "storageGateway": {
                "networkPolicies": { "enabled": false },
                "podSecurityPolicies": { "release": {} },
                "proxy": {},
                "replicas": 1,
                "resources": { "limits": {}, "requests": {} },
                "ssl": {}
              },
              "textAnalysis": {
                "networkPolicies": { "enabled": false },
                "podSecurityPolicies": { "release": {} },
                "proxy": {},
                "resources": { "limits": {}, "requests": {} },
                "serviceType": "ClusterIP"
              },
              "timeout": 3600,
              "uaa": {
                "configuration": {},
                "networkPolicies": { "enabled": false },
                "passwordPolicy": {},
                "podSecurityPolicies": { "release": {} },
                "proxy": {}
              },
              "voraCluster": {
                "networkPolicies": { "enabled": false },
                "podSecurityPolicies": { "release": {} },
                "proxy": {},
                "template": {
                  "components": {
                    "catalog": { "replicas": "1", "traceLevel": "" },
                    "disk": {
                      "antiAffinity": {
                        "replica": { "enable": true },
                        "resource": {
                          "enable": true,
                          "selectors": { "vora-component": "tx-coordinator" }
                        }
                      },
                      "dbSpaceSize": 10240,
                      "initialDelaySeconds": 180,
                      "largeMemoryLimit": 3000,
                      "mainCacheMemoryLimit": 3000,
                      "networkDriversList": "",
                      "passwordSecretName": "vora.conf.disk-password",
                      "pv": { "storageClassName": "" },
                      "replicas": "1",
                      "storageSize": "50Gi",
                      "temporaryCacheMemoryLimit": 3000,
                      "terminationGracePeriodSeconds": 300,
                      "traceLevel": ""
                    },
                    "dlog": {
                      "antiAffinity": {
                        "replica": { "enable": true },
                        "resource": {
                          "enable": true,
                          "selectors": { "vora-component": "disk" }
                        }
                      },
                      "bufferSize": "4g",
                      "pv": { "storageClassName": "" },
                      "raftPort": "49876",
                      "rdsHTTPPort": "8700",
                      "replicationFactor": "1",
                      "restore": false,
                      "standbyFactor": "0",
                      "storageSize": "50Gi",
                      "traceLevel": ""
                    },
                    "globalParameters": {
                      "checkpoint": {
                        "active": true,
                        "afsiConnectionSecret": "vora.conf.checkpoint-connection",
                        "afsiPath": "/dqp/lib",
                        "afsiType": "v2afsi_s3",
                        "clientIncrementalRecordLimit": "16384",
                        "clientIncrementalSizeLimit": "16777216",
                        "clientWriteMinDelay": "300000",
                        "maxStreamCheckpoints": "2",
                        "pathSuffix": "checkpoints-11bw3dz"
                      },
                      "fsGroup": 999,
                      "healthCheck": {
                        "deregisterTimeout": "2m",
                        "initialDelaySeconds": 60,
                        "periodSeconds": 60,
                        "statefulsetEvictionTimeoutMinutes": 0,
                        "terminationGracePeriodSeconds": 60
                      },
                      "input": { "path": "/mnt/input" },
                      "rbac": false,
                      "runAsUser": 999,
                      "security": {
                        "context": "consumer",
                        "contextRoot": "/tmp/vora-security",
                        "image": ""
                      },
                      "traceLevel": "info",
                      "useK8sDiscovery": true
                    },
                    "landscape": {
                      "bootstrapMode": "auto",
                      "replicas": "1",
                      "traceLevel": ""
                    },
                    "relational": { "replicas": "1", "traceLevel": "" },
                    "txBroker": { "replicas": "1", "traceLevel": "" },
                    "txCoordinator": { "replicas": "1", "traceLevel": "" }
                  },
                  "docker": {
                    "image": "sap-p-and-i-big-data-vora/com.sap.datahub.linuxx86_64/vora-dqp",
                    "imagePullSecret": ""
                  },
                  "name": "vora",
                  "version": { "component": "2.5.15", "package": "" }
                }
              },
              "voraSecurityOperator": {
                "caKeyStore": { "key": "", "name": "" },
                "caTrustStore": { "key": "", "name": "" },
                "dhKeySize": 256,
                "interCaKeyStore": { "key": "", "name": "" },
                "interCaTrustStore": { "key": "", "name": "" },
                "jwtSecretCaBundle": { "key": "", "name": "" },
                "jwtSecretKeyStore": { "key": "", "name": "" },
                "jwtSecretTrustStore": { "key": "", "name": "" },
                "networkPolicies": { "enabled": false },
                "podSecurityPolicies": { "release": {} },
                "proxy": {},
                "securityContexts": {
                  "contexts": [
                    {
                      "consumer": {
                        "initializers": [
                          {
                            "generate-certificates.sh": "generate-certificates.sh"
                          },
                          {
                            "generate-dummy-secret.py": "generate-dummy-secret.py"
                          }
                        ],
                        "periodics": [
                          {
                            "renew-certificates.sh": "10368000 renew-certificates.sh"
                          }
                        ],
                        "secrets": [
                          { "vora.conf.secop.jwtiss.truststore": "truststore" },
                          {
                            "vora.conf.secop.tlsconfig.ca-bundle": "ca_bundle"
                          },
                          {
                            "vora.conf.secop.tlsconfig.keystore-dh": "keystore_dh"
                          },
                          { "vora.conf.secop.v2auth": "v2auth.conf" },
                          { "vora.conf.secop.tlsconfig.inter-ca": "inter_ca" },
                          {
                            "vora.conf.secop.tlsconfig.inter-ca-keystore": "inter_ca_keystore"
                          }
                        ],
                        "template": "Vora Userstore Consumer"
                      }
                    },
                    {
                      "changeowner": {
                        "initializers": [
                          { "change-owner.sh": "change-owner.sh" }
                        ],
                        "template": "Change Owner"
                      }
                    },
                    {
                      "default": {
                        "secrets": [
                          { "vora.conf.secop.tlsconfig.keystore": "keystore" },
                          {
                            "vora.conf.secop.tlsconfig.truststore": "truststore"
                          },
                          {
                            "vora.conf.secop.tlsconfig.ca-bundle": "ca_bundle"
                          },
                          {
                            "vora.conf.secop.tlsconfig.keystore-dh": "keystore_dh"
                          },
                          { "vora.conf.secop.tlsconfig.inter-ca": "inter_ca" },
                          {
                            "vora.conf.secop.tlsconfig.inter-ca-keystore": "inter_ca_keystore"
                          }
                        ],
                        "template": "Vora Default TLS Configuration NI",
                        "type": "tlsconfig"
                      }
                    },
                    {
                      "default": {
                        "configmaps": [{ "uaa.jinja2": "uaa.jinja2" }],
                        "initializers": [
                          {
                            "generate-certificates.sh": "generate-certificates.sh uaa"
                          },
                          { "configure-uaa.py": "configure-uaa.py" },
                          {
                            "sync-zone-userstores.py": "sync-zone-userstores.py --restore"
                          }
                        ],
                        "periodics": [
                          {
                            "sync-zone-userstores.py": "10 sync-zone-userstores.py"
                          },
                          {
                            "renew-certificates.sh": "10368000 renew-certificates.sh"
                          }
                        ],
                        "secrets": [
                          {
                            "vora.conf.secop.tlsconfig.ca-bundle": "ca_bundle"
                          },
                          { "vora.conf.secop.tlsconfig.inter-ca": "inter_ca" },
                          {
                            "vora.conf.secop.tlsconfig.inter-ca-keystore": "inter_ca_keystore"
                          },
                          {
                            "vora.conf.secop.tlsconfig.truststore": "service_provider_cert"
                          },
                          {
                            "vora.conf.secop.tlsconfig.keystore": "service_provider_key"
                          }
                        ],
                        "template": "UAA Service",
                        "type": "uaaservice"
                      }
                    },
                    {
                      "default": {
                        "secrets": [
                          { "vora.conf.secop.jwtiss.keystore": "keystore" },
                          { "vora.conf.secop.jwtiss.truststore": "truststore" }
                        ],
                        "template": "Vora JWT Issuer NI",
                        "type": "jwtiss"
                      }
                    },
                    {
                      "default": {
                        "configmaps": [
                          { "vora.conf.secop.htpasswd": "htpasswd" }
                        ],
                        "periodics": [
                          { "push-userstore.sh": "10 push_userstore.sh" }
                        ],
                        "template": "Vora Userstore Producer",
                        "type": "userstore-producer"
                      }
                    },
                    {
                      "default": {
                        "secrets": [
                          { "vora.conf.secop.encryption-key": "encryption_key" }
                        ],
                        "template": "Encryption Key",
                        "type": "encryptionkey"
                      }
                    },
                    {
                      "default": {
                        "initializers": [
                          {
                            "prepare-validation-context.py": "prepare-validation-context.py vora.conf.secop.validation.cred"
                          }
                        ],
                        "template": "Validation Context",
                        "type": "validation"
                      }
                    },
                    {
                      "htpasswd": {
                        "initializers": [
                          { "pull-userstore.sh": "pull_userstore.sh" }
                        ],
                        "periodics": [
                          { "pull-userstore.sh": "10 pull_userstore.sh" }
                        ],
                        "template": "Htpasswd"
                      }
                    }
                  ],
                  "secop": { "issuerURI": "https://uaa:8080" }
                },
                "tlsSecretCaBundle": { "key": "", "name": "" },
                "tlsSecretKeyStore": { "key": "", "name": "" },
                "tlsSecretTrustStore": { "key": "", "name": "" }
              },
              "vsystem": {
                "UAA": { "clientId": "", "deploy": false, "endpoint": "" },
                "auditlog": {
                  "deploy": false,
                  "endpoint": "https://auditlog:3030",
                  "use": true
                },
                "deploymentInfo": {},
                "deploymentType": "on-prem",
                "hana": { "tls": {} },
                "initialUserCreation": {
                  "secretName": "vora.conf.initial.user"
                },
                "internalComm": {
                  "authClientID": "",
                  "filename": "",
                  "vrepClientID": "",
                  "vsystemClientID": ""
                },
                "layerStrategies": [
                  {
                    "name": "sdi-system-extension-strategy",
                    "parentStrategy": "strat-system-3.1.13"
                  },
                  {
                    "name": "sdi-default-extension-strategy",
                    "parentStrategy": "strat-default-3.1.13"
                  },
                  {
                    "layers": [
                      "installer-certificates",
                      "vrelease-diagnostics",
                      "vrelease-appmanagement",
                      "vora-tools",
                      "vsolution-vsystem-ui",
                      "vsolution-shared-ui",
                      "vsolution-app-base-db",
                      "data-tools-ui",
                      "license-manager",
                      "dsp-release-onprem-system"
                    ],
                    "name": "strat-system-3.1.13"
                  },
                  {
                    "layers": [
                      "installer-certificates",
                      "installer-configuration",
                      "vrelease-delivery-di",
                      "vsolution-app-base",
                      "vsolution-dh-flowagent",
                      "vrelease-appmanagement",
                      "vora-tools",
                      "vsolution-vsystem-ui",
                      "vsolution-shared-ui",
                      "vsolution-app-data",
                      "data-tools-ui",
                      "license-manager",
                      "dsp-release-onprem"
                    ],
                    "name": "strat-default-3.1.13"
                  }
                ],
                "loadNFSModules": true,
                "networkPolicies": { "enabled": false },
                "podSecurityPolicies": { "release": {} },
                "proxy": {},
                "removePolicy": "keep",
                "runlevel": {},
                "securityDevelopment": { "deploy": false },
                "solutions": [
                  {
                    "name": "installer-certificates",
                    "solutionFromContent": {
                      "name": "certificates",
                      "secretSources": [
                        {
                          "secretKey": "vora.conf.secop.tlsconfig.ca-bundle",
                          "secretName": "vora.conf.secop.tlsconfig.ca-bundle",
                          "vrepPath": "ca/ca.crt"
                        }
                      ],
                      "version": "3.1.13"
                    }
                  },
                  {
                    "name": "installer-configuration",
                    "solutionFromContent": {
                      "name": "installer_config",
                      "stringSources": [
                        {
                          "contentString": "{\n  \"apiVersion\": \"v2\",\n  \"id\": \"vflow.registry\",\n  \"description\": \"Modeler: Docker registry for Modeler images\",\n  \"type\": \"string\",\n  \"defaultValue\": \"container-image-registry-sdi-observer.apps.lab.hpecloud.org\"\n}\n",
                          "vrepPath": "vsystem/parameters/vflow.registry.json"
                        },
                        {
                          "contentString": "{\n  \"apiVersion\": \"v2\",\n  \"id\": \"vflow.aws.iamRole\",\n  \"description\": \"Modeler: AWS IAM role for package version\",\n  \"type\": \"string\",\n  \"defaultValue\": \"\"\n}\n",
                          "vrepPath": "vsystem/parameters/vflow.aws.iamRole.json"
                        },
                        {
                          "contentString": "{\n  \"apiVersion\": \"v2\",\n  \"id\": \"vflow.registrySecret\",\n  \"description\": \"Modeler: Name of the vSystem secret containing the credentials for Docker registry\",\n  \"type\": \"string\",\n  \"defaultValue\": \"vflow-secret\"\n}\n",
                          "vrepPath": "vsystem/parameters/vflow.registrySecret.json"
                        },
                        {
                          "contentString": "{\n  \"apiVersion\": \"v2\",\n  \"id\": \"vflow.imagePullSecret\",\n  \"description\": \"Modeler: Docker image pull secret for Modeler\",\n  \"type\": \"string\",\n  \"defaultValue\": \"slp-docker-registry-pull-secret\"\n}\n",
                          "vrepPath": "vsystem/parameters/vflow.imagePullSecret.json"
                        },
                        {
                          "contentString": "{\n  \"apiVersion\": \"v2\",\n  \"id\": \"vflow.kanikoImage\",\n  \"description\": \"Modeler: Kaniko build container image\",\n  \"type\": \"string\",\n  \"defaultValue\": \"container-image-registry-sdi-observer.apps.lab.hpecloud.org/kaniko-project/executor:v0.23.0\"\n}\n",
                          "vrepPath": "vsystem/parameters/vflow.kanikoImage.json"
                        },
                        {
                          "contentString": "{\n  \"apiVersion\": \"v2\",\n  \"id\": \"vflow.baseRegistry\",\n  \"description\": \"Modeler: Base registry for pulling images\",\n  \"type\": \"string\",\n  \"defaultValue\": \"container-image-registry-sdi-observer.apps.lab.hpecloud.org\"\n}\n",
                          "vrepPath": "vsystem/parameters/vflow.baseRegistry.json"
                        }
                      ],
                      "version": "3.1.13-ovmhx"
                    }
                  },
                  { "name": "data-tools-ui" },
                  { "name": "license-manager" },
                  { "name": "vora-tools" },
                  { "name": "vrelease-appmanagement" },
                  { "name": "vrelease-delivery-di" },
                  { "name": "vrelease-diagnostics" },
                  { "name": "vsolution-app-base" },
                  { "name": "vsolution-app-base-db" },
                  { "name": "vsolution-app-data" },
                  { "name": "vsolution-dh-flowagent" },
                  { "name": "vsolution-shared-ui" },
                  { "name": "vsolution-vsystem-ui" },
                  { "name": "dsp-release-onprem" },
                  { "name": "dsp-release-onprem-system" }
                ],
                "tenants": [
                  {
                    "name": "system",
                    "strategyName": "sdi-system-extension-strategy",
                    "tenantAdminCreds": "vora.conf.initial.user",
                    "vsystemObjects": [
                      "{\n  \"kind\": \"Route\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"diagnostics-grafana\"\n  },\n  \"status\": {\n    \"ingress\": [\n      {\n        \"host\": \"diagnostics-grafana\",\n        \"port\": 443,\n        \"tls\": true\n      }\n    ]\n  }\n}\n",
                      "{\n  \"kind\": \"Route\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"diagnostics-kibana\"\n  },\n  \"status\": {\n    \"ingress\": [\n      {\n        \"host\": \"diagnostics-kibana\",\n        \"port\": 443,\n        \"tls\": true\n      }\n    ]\n  }\n}\n"
                    ]
                  },
                  {
                    "name": "default",
                    "strategyName": "sdi-default-extension-strategy",
                    "tenantAdminCreds": "vora.conf.tenants.defaultadmin",
                    "vsystemSecrets": ["vflow-secret"]
                  }
                ],
                "vRep": {},
                "vSystem": {
                  "auditlogAddress": "https://auditlog:3030",
                  "clusterAdminHostnames": "vora-tx-coordinator,diagnostics-prometheus-server,storagegateway",
                  "features": { "apiGateway": {} },
                  "serviceType": "ClusterIP"
                },
                "vflow": { "enabled": true }
              }
            },
            "status": {
              "conditions": [
                {
                  "message": "Operation in progress",
                  "operationId": "3a248d",
                  "package": "3.1.13",
                  "reason": "preInstall",
                  "status": "False",
                  "timestamp": "2021-01-25T16:47:32Z",
                  "type": "inProgress"
                },
                {
                  "message": "preInstall hooks successfully executed",
                  "operationId": "3a248d",
                  "package": "3.1.13",
                  "status": "True",
                  "timestamp": "2021-01-25T16:47:36Z",
                  "type": "preInstall"
                },
                {
                  "message": "postInstall hooks successfully executed",
                  "operationId": "3a248d",
                  "package": "3.1.13",
                  "status": "True",
                  "timestamp": "2021-01-25T16:47:39Z",
                  "type": "postInstall"
                },
                {
                  "message": "Operation in progress",
                  "operationId": "c03db8",
                  "package": "3.1.13",
                  "previousPackage": "3.1.13",
                  "reason": "preRunLevelStarted",
                  "status": "False",
                  "timestamp": "2021-01-25T16:47:43Z",
                  "type": "inProgress"
                },
                {
                  "message": "preRunLevelStarted hooks successfully executed",
                  "operationId": "c03db8",
                  "package": "3.1.13",
                  "status": "True",
                  "timestamp": "2021-01-25T16:47:44Z",
                  "type": "preRunLevelStarted"
                },
                {
                  "message": "postRunLevelStarted hooks successfully executed",
                  "operationId": "c03db8",
                  "package": "3.1.13",
                  "status": "True",
                  "timestamp": "2021-01-25T16:47:48Z",
                  "type": "postRunLevelStarted"
                }
              ],
              "expiresAt": "2021-01-25T17:47:51Z",
              "reason": "Expired",
              "startedAt": "2021-01-25T16:47:51Z",
              "state": "Failed"
            }
          }
        }
      }
    }
  },
  "insights-operator": {
    "conditional-gatherer-rules.json": [
      {
        "conditions": [
          {
            "type": "alert_is_firing",
            "params": { "name": "SamplesImagestreamImportFailing" }
          }
        ],
        "gathering_functions": {
          "image_stream_definitions_of_namespace": {
            "namespace": "openshift-cluster-samples-operator"
          },
          "logs_of_namespace": {
            "label_selector": "",
            "namespace": "openshift-cluster-samples-operator",
            "tail_lines": 100
          }
        }
      }
    ],
    "gathers.json": {
      "status_reports": [
        {
          "name": "clusterconfig/metrics",
          "duration_in_ms": 6,
          "records_count": 0,
          "errors": [
            "Get \"https://prometheus-k8s.openshift-monitoring.svc:9091/federate?match%5B%5D=etcd_object_counts&match%5B%5D=cluster_installer&match%5B%5D=namespace%3Acontainer_cpu_usage_seconds_total%3Asum_rate&match%5B%5D=namespace%3Acontainer_memory_usage_bytes%3Asum\": dial tcp 127.0.0.2:9091: connect: connection refused"
          ],
          "panic": null
        },
        {
          "name": "clusterconfig/networks",
          "duration_in_ms": 215,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/container_runtime_configs",
          "duration_in_ms": 214,
          "records_count": 0,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/sap_datahubs",
          "duration_in_ms": 215,
          "records_count": 0,
          "errors": [
            "datahubs.installers.datahub.sap.com is forbidden: User \"system:serviceaccount:openshift-insights:gather\" cannot list resource \"datahubs\" in API group \"installers.datahub.sap.com\" at the cluster scope"
          ],
          "panic": null
        },
        {
          "name": "clusterconfig/sap_config",
          "duration_in_ms": 216,
          "records_count": 0,
          "errors": [
            "datahubs.installers.datahub.sap.com is forbidden: User \"system:serviceaccount:openshift-insights:gather\" cannot list resource \"datahubs\" in API group \"installers.datahub.sap.com\" at the cluster scope"
          ],
          "panic": null
        },
        {
          "name": "clusterconfig/ingress",
          "duration_in_ms": 216,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/sap_pods",
          "duration_in_ms": 422,
          "records_count": 0,
          "errors": [
            "datahubs.installers.datahub.sap.com is forbidden: User \"system:serviceaccount:openshift-insights:gather\" cannot list resource \"datahubs\" in API group \"installers.datahub.sap.com\" at the cluster scope"
          ],
          "panic": null
        },
        {
          "name": "clusterconfig/olm_operators",
          "duration_in_ms": 422,
          "records_count": 0,
          "errors": [
            "operators.operators.coreos.com is forbidden: User \"system:serviceaccount:openshift-insights:gather\" cannot list resource \"operators\" in API group \"operators.coreos.com\" at the cluster scope"
          ],
          "panic": null
        },
        {
          "name": "clusterconfig/sap_license_management_logs",
          "duration_in_ms": 424,
          "records_count": 0,
          "errors": [
            "datahubs.installers.datahub.sap.com is forbidden: User \"system:serviceaccount:openshift-insights:gather\" cannot list resource \"datahubs\" in API group \"installers.datahub.sap.com\" at the cluster scope"
          ],
          "panic": null
        },
        {
          "name": "clusterconfig/authentication",
          "duration_in_ms": 730,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/netnamespaces",
          "duration_in_ms": 733,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/image_pruners",
          "duration_in_ms": 734,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/oauths",
          "duration_in_ms": 734,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/infrastructures",
          "duration_in_ms": 735,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/certificate_signing_requests",
          "duration_in_ms": 932,
          "records_count": 0,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/proxies",
          "duration_in_ms": 934,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/image_registries",
          "duration_in_ms": 940,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/pdbs",
          "duration_in_ms": 1548,
          "records_count": 2,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/feature_gates",
          "duration_in_ms": 2163,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/machine_config_pools",
          "duration_in_ms": 2782,
          "records_count": 2,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/machine_sets",
          "duration_in_ms": 3188,
          "records_count": 3,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/crds",
          "duration_in_ms": 3596,
          "records_count": 2,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/host_subnets",
          "duration_in_ms": 3596,
          "records_count": 6,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/config_maps",
          "duration_in_ms": 3804,
          "records_count": 10,
          "errors": ["configmaps \"cluster-monitoring-config\" not found"],
          "panic": null
        },
        {
          "name": "clusterconfig/operators_pods_and_events",
          "duration_in_ms": 3808,
          "records_count": 0,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/version",
          "duration_in_ms": 4006,
          "records_count": 3,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/nodes",
          "duration_in_ms": 4006,
          "records_count": 6,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/openshift_apiserver_operator_logs",
          "duration_in_ms": 4418,
          "records_count": 0,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/openshift_sdn_controller_logs",
          "duration_in_ms": 4547,
          "records_count": 0,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/container_images",
          "duration_in_ms": 4684,
          "records_count": 8,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/openshift_authentication_logs",
          "duration_in_ms": 4831,
          "records_count": 0,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/openshift_sdn_logs",
          "duration_in_ms": 6768,
          "records_count": 0,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/operators",
          "duration_in_ms": 8815,
          "records_count": 31,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/install_plans",
          "duration_in_ms": 14242,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "clusterconfig/service_accounts",
          "duration_in_ms": 14854,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "workloads/workload_info",
          "duration_in_ms": 16074,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "conditional/conditional_gatherer_rules",
          "duration_in_ms": 0,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "conditional/image_stream_definitions_of_namespace/namespace=openshift-cluster-samples-operator",
          "duration_in_ms": 135,
          "records_count": 1,
          "errors": null,
          "panic": null
        },
        {
          "name": "conditional/logs_of_namespace/namespace=openshift-cluster-samples-operator,tail_lines=100",
          "duration_in_ms": 498,
          "records_count": 2,
          "errors": null,
          "panic": null
        }
      ],
      "memory_alloc_bytes": 17411816,
      "uptime_seconds": 74.851,
      "is_global_obfuscation_enabled": false
    }
  },
  "machinesets": {
    "openshift-machine-api": {
      "ci-ln-fyvthbt-f76d1-nl2fh-worker-b.json": {
        "apiVersion": "machine.openshift.io/v1beta1",
        "kind": "MachineSet",
        "metadata": {
          "creationTimestamp": "2020-10-14T06:51:29Z",
          "generation": 1,
          "labels": {
            "machine.openshift.io/cluster-api-cluster": "ci-ln-fyvthbt-f76d1-nl2fh"
          },
          "name": "ci-ln-fyvthbt-f76d1-nl2fh-worker-b",
          "namespace": "openshift-machine-api",
          "resourceVersion": "15794",
          "selfLink": "/apis/machine.openshift.io/v1beta1/namespaces/openshift-machine-api/machinesets/ci-ln-fyvthbt-f76d1-nl2fh-worker-b",
          "uid": "c01e9178-6a18-41e8-8eab-143d4d4b5f9d"
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "machine.openshift.io/cluster-api-cluster": "ci-ln-fyvthbt-f76d1-nl2fh",
              "machine.openshift.io/cluster-api-machineset": "ci-ln-fyvthbt-f76d1-nl2fh-worker-b"
            }
          },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "machine.openshift.io/cluster-api-cluster": "ci-ln-fyvthbt-f76d1-nl2fh",
                "machine.openshift.io/cluster-api-machine-role": "worker",
                "machine.openshift.io/cluster-api-machine-type": "worker",
                "machine.openshift.io/cluster-api-machineset": "ci-ln-fyvthbt-f76d1-nl2fh-worker-b"
              }
            },
            "spec": {
              "metadata": { "creationTimestamp": null },
              "providerSpec": {
                "value": {
                  "apiVersion": "gcpprovider.openshift.io/v1beta1",
                  "canIPForward": false,
                  "credentialsSecret": { "name": "gcp-cloud-credentials" },
                  "deletionProtection": false,
                  "disks": [
                    {
                      "autoDelete": true,
                      "boot": true,
                      "image": "ci-ln-fyvthbt-f76d1-nl2fh-rhcos-image",
                      "labels": null,
                      "sizeGb": 128,
                      "type": "pd-ssd"
                    }
                  ],
                  "kind": "GCPMachineProviderSpec",
                  "machineType": "n1-standard-4",
                  "metadata": { "creationTimestamp": null },
                  "networkInterfaces": [
                    {
                      "network": "ci-ln-fyvthbt-f76d1-nl2fh-network",
                      "subnetwork": "ci-ln-fyvthbt-f76d1-nl2fh-worker-subnet"
                    }
                  ],
                  "projectID": "openshift-gce-devel-ci",
                  "region": "us-east1",
                  "serviceAccounts": [
                    {
                      "email": "ci-ln-fyvthbt-f76d1-nl2fh-w@openshift-gce-devel-ci.iam.gserviceaccount.com",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  ],
                  "tags": ["ci-ln-fyvthbt-f76d1-nl2fh-worker"],
                  "userDataSecret": { "name": "worker-user-data" },
                  "zone": "us-east1-b"
                }
              }
            }
          }
        },
        "status": {
          "availableReplicas": 1,
          "fullyLabeledReplicas": 1,
          "observedGeneration": 1,
          "readyReplicas": 1,
          "replicas": 1
        }
      },
      "ci-ln-fyvthbt-f76d1-nl2fh-worker-c.json": {
        "apiVersion": "machine.openshift.io/v1beta1",
        "kind": "MachineSet",
        "metadata": {
          "creationTimestamp": "2020-10-14T06:51:29Z",
          "generation": 1,
          "labels": {
            "machine.openshift.io/cluster-api-cluster": "ci-ln-fyvthbt-f76d1-nl2fh"
          },
          "name": "ci-ln-fyvthbt-f76d1-nl2fh-worker-c",
          "namespace": "openshift-machine-api",
          "resourceVersion": "15785",
          "selfLink": "/apis/machine.openshift.io/v1beta1/namespaces/openshift-machine-api/machinesets/ci-ln-fyvthbt-f76d1-nl2fh-worker-c",
          "uid": "ef8dc42b-e169-43a7-bba7-c557d7a7ce7d"
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "machine.openshift.io/cluster-api-cluster": "ci-ln-fyvthbt-f76d1-nl2fh",
              "machine.openshift.io/cluster-api-machineset": "ci-ln-fyvthbt-f76d1-nl2fh-worker-c"
            }
          },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "machine.openshift.io/cluster-api-cluster": "ci-ln-fyvthbt-f76d1-nl2fh",
                "machine.openshift.io/cluster-api-machine-role": "worker",
                "machine.openshift.io/cluster-api-machine-type": "worker",
                "machine.openshift.io/cluster-api-machineset": "ci-ln-fyvthbt-f76d1-nl2fh-worker-c"
              }
            },
            "spec": {
              "metadata": { "creationTimestamp": null },
              "providerSpec": {
                "value": {
                  "apiVersion": "gcpprovider.openshift.io/v1beta1",
                  "canIPForward": false,
                  "credentialsSecret": { "name": "gcp-cloud-credentials" },
                  "deletionProtection": false,
                  "disks": [
                    {
                      "autoDelete": true,
                      "boot": true,
                      "image": "ci-ln-fyvthbt-f76d1-nl2fh-rhcos-image",
                      "labels": null,
                      "sizeGb": 128,
                      "type": "pd-ssd"
                    }
                  ],
                  "kind": "GCPMachineProviderSpec",
                  "machineType": "n1-standard-4",
                  "metadata": { "creationTimestamp": null },
                  "networkInterfaces": [
                    {
                      "network": "ci-ln-fyvthbt-f76d1-nl2fh-network",
                      "subnetwork": "ci-ln-fyvthbt-f76d1-nl2fh-worker-subnet"
                    }
                  ],
                  "projectID": "openshift-gce-devel-ci",
                  "region": "us-east1",
                  "serviceAccounts": [
                    {
                      "email": "ci-ln-fyvthbt-f76d1-nl2fh-w@openshift-gce-devel-ci.iam.gserviceaccount.com",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  ],
                  "tags": ["ci-ln-fyvthbt-f76d1-nl2fh-worker"],
                  "userDataSecret": { "name": "worker-user-data" },
                  "zone": "us-east1-c"
                }
              }
            }
          }
        },
        "status": {
          "availableReplicas": 1,
          "fullyLabeledReplicas": 1,
          "observedGeneration": 1,
          "readyReplicas": 1,
          "replicas": 1
        }
      },
      "ci-ln-fyvthbt-f76d1-nl2fh-worker-d.json": {
        "apiVersion": "machine.openshift.io/v1beta1",
        "kind": "MachineSet",
        "metadata": {
          "creationTimestamp": "2020-10-14T06:51:29Z",
          "generation": 1,
          "labels": {
            "machine.openshift.io/cluster-api-cluster": "ci-ln-fyvthbt-f76d1-nl2fh"
          },
          "name": "ci-ln-fyvthbt-f76d1-nl2fh-worker-d",
          "namespace": "openshift-machine-api",
          "resourceVersion": "16119",
          "selfLink": "/apis/machine.openshift.io/v1beta1/namespaces/openshift-machine-api/machinesets/ci-ln-fyvthbt-f76d1-nl2fh-worker-d",
          "uid": "ca4d434a-9250-4549-9f8c-6aee46dd569c"
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "machine.openshift.io/cluster-api-cluster": "ci-ln-fyvthbt-f76d1-nl2fh",
              "machine.openshift.io/cluster-api-machineset": "ci-ln-fyvthbt-f76d1-nl2fh-worker-d"
            }
          },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "machine.openshift.io/cluster-api-cluster": "ci-ln-fyvthbt-f76d1-nl2fh",
                "machine.openshift.io/cluster-api-machine-role": "worker",
                "machine.openshift.io/cluster-api-machine-type": "worker",
                "machine.openshift.io/cluster-api-machineset": "ci-ln-fyvthbt-f76d1-nl2fh-worker-d"
              }
            },
            "spec": {
              "metadata": { "creationTimestamp": null },
              "providerSpec": {
                "value": {
                  "apiVersion": "gcpprovider.openshift.io/v1beta1",
                  "canIPForward": false,
                  "credentialsSecret": { "name": "gcp-cloud-credentials" },
                  "deletionProtection": false,
                  "disks": [
                    {
                      "autoDelete": true,
                      "boot": true,
                      "image": "ci-ln-fyvthbt-f76d1-nl2fh-rhcos-image",
                      "labels": null,
                      "sizeGb": 128,
                      "type": "pd-ssd"
                    }
                  ],
                  "kind": "GCPMachineProviderSpec",
                  "machineType": "n1-standard-4",
                  "metadata": { "creationTimestamp": null },
                  "networkInterfaces": [
                    {
                      "network": "ci-ln-fyvthbt-f76d1-nl2fh-network",
                      "subnetwork": "ci-ln-fyvthbt-f76d1-nl2fh-worker-subnet"
                    }
                  ],
                  "projectID": "openshift-gce-devel-ci",
                  "region": "us-east1",
                  "serviceAccounts": [
                    {
                      "email": "ci-ln-fyvthbt-f76d1-nl2fh-w@openshift-gce-devel-ci.iam.gserviceaccount.com",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  ],
                  "tags": ["ci-ln-fyvthbt-f76d1-nl2fh-worker"],
                  "userDataSecret": { "name": "worker-user-data" },
                  "zone": "us-east1-d"
                }
              }
            }
          }
        },
        "status": {
          "availableReplicas": 1,
          "fullyLabeledReplicas": 1,
          "observedGeneration": 1,
          "readyReplicas": 1,
          "replicas": 1
        }
      }
    }
  }
}
